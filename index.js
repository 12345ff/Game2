/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./public/Base/Animation.js":
/*!**********************************!*\
  !*** ./public/Base/Animation.js ***!
  \**********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Size_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.GameAnimation = void 0;\r\n    class GameAnimation {\r\n        constructor(rotate, size) {\r\n            this.images = [];\r\n            this.nextFlameInterval = [30, 30];\r\n            this.rotate = rotate;\r\n            this.drawSize = size;\r\n            this.nowFlame = 1;\r\n            this.limit = -1;\r\n            let canvas = document.createElement(\"canvas\");\r\n            let canvasSize = Math.sqrt(size.width * size.width + size.height * size.height);\r\n            canvas.width = canvasSize;\r\n            canvas.height = canvasSize;\r\n            this.size = new Size_1.Size(canvasSize, canvasSize);\r\n            this.images.push(canvas);\r\n            this.image = this.images[0];\r\n        }\r\n        SetUp1(images) {\r\n            this.images = [];\r\n            for (let i = 0; i < images.length; i++) {\r\n                let canvas = document.createElement(\"canvas\");\r\n                let ctx = canvas.getContext(\"2d\");\r\n                canvas.width = this.size.width;\r\n                canvas.height = this.size.height;\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.translate(canvas.width / 2, canvas.height / 2);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.rotate(this.rotate * Math.PI / 180);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(images[i], canvas.width / 2 - this.drawSize.height / 2, canvas.height / 2 - this.drawSize.height / 2, this.drawSize.width, this.drawSize.height);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.rotate(-this.rotate * Math.PI / 180);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n                ;\r\n                this.images.push(canvas);\r\n            }\r\n            this.image = this.images[0];\r\n        }\r\n        SetUp2(image, clippingRect) {\r\n            this.images = [];\r\n            for (let i = 0; i < clippingRect.length; i++) {\r\n                let canvas = document.createElement(\"canvas\");\r\n                let ctx = canvas.getContext(\"2d\");\r\n                canvas.width = this.size.width;\r\n                canvas.height = this.size.height;\r\n                if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                    ctx.strokeStyle = \"red\";\r\n                    ctx.strokeRect(0, 0, canvas.width, canvas.height);\r\n                }\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.translate(canvas.width / 2, canvas.height / 2);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.rotate(this.rotate * Math.PI / 180);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(image, clippingRect[i].position.x, clippingRect[i].position.y, clippingRect[i].size.width, clippingRect[i].size.height, -this.drawSize.width / 2, -this.drawSize.height / 2, this.drawSize.width, this.drawSize.height);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.rotate(-this.rotate * Math.PI / 180);\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n                this.images.push(canvas);\r\n            }\r\n            this.image = this.images[0];\r\n        }\r\n        Reset() {\r\n            if (this.nowFlame != 0) {\r\n                this.nowFlame = 0;\r\n                this.image = this.images[0];\r\n                this.nextFlameInterval[0] = this.nextFlameInterval[1];\r\n            }\r\n        }\r\n        Update() {\r\n            if (this.limit != 0) {\r\n                if (this.nextFlameInterval[0] > 0) {\r\n                    this.nextFlameInterval[0]--;\r\n                }\r\n                else {\r\n                    this.nextFlameInterval[0] = this.nextFlameInterval[1];\r\n                    this.nowFlame++;\r\n                    if (this.nowFlame >= this.images.length) {\r\n                        this.nowFlame = 0;\r\n                        if (this.limit > 0)\r\n                            this.limit--;\r\n                    }\r\n                    this.image = this.images[this.nowFlame];\r\n                }\r\n            }\r\n            else {\r\n                if (this.image.id != \"notImage\") {\r\n                    this.image = document.createElement(\"canvas\");\r\n                    this.image.id = \"notImage\";\r\n                }\r\n            }\r\n        }\r\n        setInterval(interval) {\r\n            this.nextFlameInterval[0] = interval;\r\n            this.nextFlameInterval[1] = interval;\r\n        }\r\n    }\r\n    exports.GameAnimation = GameAnimation;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Animation.js.map\n\n//# sourceURL=webpack:///./public/Base/Animation.js?");

/***/ }),

/***/ "./public/Base/ChangeDirection.js":
/*!****************************************!*\
  !*** ./public/Base/ChangeDirection.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Position */ \"./public/Base/Position.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.ChangeDirection = void 0;\r\n    function ChangeDirection(sa) {\r\n        let direction = new Position_1.Position(0, 0);\r\n        if (Math.abs(sa.x) > Math.abs(sa.y)) {\r\n            direction.x = 1;\r\n            direction.y = Math.abs(sa.y) / Math.abs(sa.x);\r\n        }\r\n        else if (Math.abs(sa.y) > Math.abs(sa.x)) {\r\n            direction.x = Math.abs(sa.x) / Math.abs(sa.y);\r\n            direction.y = 1;\r\n        }\r\n        if (sa.x < 0)\r\n            direction.x *= -1;\r\n        if (sa.y < 0)\r\n            direction.y *= -1;\r\n        return direction;\r\n    }\r\n    exports.ChangeDirection = ChangeDirection;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=ChangeDirection.js.map\n\n//# sourceURL=webpack:///./public/Base/ChangeDirection.js?");

/***/ }),

/***/ "./public/Base/Clip.js":
/*!*****************************!*\
  !*** ./public/Base/Clip.js ***!
  \*****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Clip = void 0;\r\n    class Clip {\r\n        static Clip_Circle(image, canvasSize, ClipRectangle) {\r\n            let canvas = document.createElement(\"canvas\");\r\n            let ctx = canvas.getContext(\"2d\");\r\n            canvas.width = canvasSize;\r\n            canvas.height = canvasSize;\r\n            ctx.fillStyle = \"red\";\r\n            ctx === null || ctx === void 0 ? void 0 : ctx.beginPath();\r\n            ctx === null || ctx === void 0 ? void 0 : ctx.arc(canvasSize / 2, canvasSize / 2, canvasSize / 2, 0, Math.PI * 2, false);\r\n            ctx === null || ctx === void 0 ? void 0 : ctx.clip();\r\n            ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(image, ClipRectangle.position.x, ClipRectangle.position.y, ClipRectangle.size.width, ClipRectangle.size.height);\r\n            return canvas;\r\n        }\r\n    }\r\n    exports.Clip = Clip;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Clip.js.map\n\n//# sourceURL=webpack:///./public/Base/Clip.js?");

/***/ }),

/***/ "./public/Base/Position.js":
/*!*********************************!*\
  !*** ./public/Base/Position.js ***!
  \*********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Position = void 0;\r\n    class Position {\r\n        constructor(x, y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n        plus(position) {\r\n            this.x += position.x;\r\n            this.y += position.y;\r\n            return new Position(this.x, this.y);\r\n        }\r\n        minus(position) {\r\n            this.x -= position.x;\r\n            this.y -= position.y;\r\n            return new Position(this.x, this.y);\r\n        }\r\n        addScale(scale) {\r\n            this.x *= scale;\r\n            this.y *= scale;\r\n            return new Position(this.x, this.y);\r\n        }\r\n    }\r\n    exports.Position = Position;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Position.js.map\n\n//# sourceURL=webpack:///./public/Base/Position.js?");

/***/ }),

/***/ "./public/Base/Rectangle.js":
/*!**********************************!*\
  !*** ./public/Base/Rectangle.js ***!
  \**********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ./Position */ \"./public/Base/Position.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Size_1, Position_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Rectangle = void 0;\r\n    class Rectangle {\r\n        constructor(x, y, width, height) {\r\n            this.position = new Position_1.Position(x, y);\r\n            this.size = new Size_1.Size(width, height);\r\n        }\r\n    }\r\n    exports.Rectangle = Rectangle;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Rectangle.js.map\n\n//# sourceURL=webpack:///./public/Base/Rectangle.js?");

/***/ }),

/***/ "./public/Base/ResourceManager.js":
/*!****************************************!*\
  !*** ./public/Base/ResourceManager.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.ResourceManager = void 0;\r\n    class ResourceManager {\r\n        constructor() {\r\n            //---\r\n            this.Animations = {};\r\n            this.Images = {};\r\n        }\r\n        SetUp() { }\r\n        PlusAnimation(key, animation) {\r\n            this.Animations[key] = animation;\r\n        }\r\n        GetAnimation(key) {\r\n            return this.Animations[key];\r\n        }\r\n        PlusImage(key, image) {\r\n            this.Images[key] = image;\r\n        }\r\n        GetImage(key) {\r\n            return this.Images[key];\r\n        }\r\n    }\r\n    exports.ResourceManager = ResourceManager;\r\n    //シングルトン\r\n    ResourceManager.Instance = new ResourceManager();\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=ResourceManager.js.map\n\n//# sourceURL=webpack:///./public/Base/ResourceManager.js?");

/***/ }),

/***/ "./public/Base/SaveData.js":
/*!*********************************!*\
  !*** ./public/Base/SaveData.js ***!
  \*********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.SaveData = void 0;\r\n    class SaveData {\r\n        constructor() {\r\n            //---\r\n            this.allKeyName = \"\";\r\n            this.items = {};\r\n            this.many = 0;\r\n            this.skills = [];\r\n            this.pass = [];\r\n            this.license = [];\r\n        }\r\n        setUp() {\r\n            this.load();\r\n        }\r\n        save() {\r\n            this.allKeyName = \"many/\";\r\n            localStorage.setItem(\"many\", this.many.toString());\r\n            let i = 0;\r\n            for (let key in this.items) {\r\n                if (this.items[key] > 0) {\r\n                    localStorage.setItem(`item-${i}`, `${key}:${this.items[key]}`);\r\n                    this.allKeyName += `item-${i}/`;\r\n                    i++;\r\n                }\r\n            }\r\n            this.oneSave(this.skills, \"skill\");\r\n            this.oneSave(this.pass, \"pass\");\r\n            this.oneSave(this.license, \"license\");\r\n            localStorage.setItem(\"allKeyName\", this.allKeyName);\r\n            this.load();\r\n        }\r\n        oneSave(array, key) {\r\n            for (let i = 0; i < array.length; i++) {\r\n                let keyName = `${key}-${i}`;\r\n                localStorage.setItem(keyName, array[i]);\r\n                this.allKeyName += keyName + \"/\";\r\n            }\r\n        }\r\n        load() {\r\n            this.many = 0;\r\n            this.items = {};\r\n            this.skills = [];\r\n            this.pass = [];\r\n            this.license = [];\r\n            for (let key in localStorage) {\r\n                let keyType = key.split(\"-\");\r\n                switch (keyType[0]) {\r\n                    case \"many\":\r\n                        let many = localStorage.getItem(key);\r\n                        if (many != null)\r\n                            this.many = parseInt(many);\r\n                        break;\r\n                    case \"item\":\r\n                        let item = localStorage.getItem(key);\r\n                        if (item != null) {\r\n                            let itemData = item.split(\":\");\r\n                            this.items[itemData[0]] = parseInt(itemData[1]);\r\n                        }\r\n                        break;\r\n                    case \"skill\":\r\n                        let skill = localStorage.getItem(key);\r\n                        if (skill != null)\r\n                            this.skills.push(skill);\r\n                        break;\r\n                    case \"pass\":\r\n                        let pass = localStorage.getItem(key);\r\n                        if (pass != null)\r\n                            this.pass.push(pass);\r\n                        break;\r\n                    case \"license\":\r\n                        let license = localStorage.getItem(key);\r\n                        if (license != null)\r\n                            this.license.push(license);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        delete() {\r\n            let keynames = localStorage.getItem(\"allKeyName\");\r\n            if (keynames != null) {\r\n                let keyNames = keynames.split(\"/\");\r\n                for (let i = 0; i < keyNames.length; i++) {\r\n                    localStorage.removeItem(keyNames[i]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.SaveData = SaveData;\r\n    //シングルトンパターン\r\n    SaveData.Instance = new SaveData();\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=SaveData.js.map\n\n//# sourceURL=webpack:///./public/Base/SaveData.js?");

/***/ }),

/***/ "./public/Base/Size.js":
/*!*****************************!*\
  !*** ./public/Base/Size.js ***!
  \*****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Size = void 0;\r\n    class Size {\r\n        constructor(width, height) {\r\n            this.width = width;\r\n            this.height = height;\r\n        }\r\n        plusScale(scale) {\r\n            this.width += scale;\r\n            this.height += scale;\r\n            return new Size(this.width, this.height);\r\n        }\r\n    }\r\n    exports.Size = Size;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Size.js.map\n\n//# sourceURL=webpack:///./public/Base/Size.js?");

/***/ }),

/***/ "./public/Data/EnemyPattern.js":
/*!*************************************!*\
  !*** ./public/Data/EnemyPattern.js ***!
  \*************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ../Base/Animation */ \"./public/Base/Animation.js\"), __webpack_require__(/*! ../Base/ResourceManager */ \"./public/Base/ResourceManager.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, Rectangle_1, Animation_1, ResourceManager_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.EnemyPattern = void 0;\r\n    exports.EnemyPattern = {\r\n        \"normal\": (self, scene) => {\r\n            if (self.condition[\"やけど\"].countdown()) {\r\n                self.damage(5);\r\n            }\r\n            self.condition[\"麻痺\"].countdown();\r\n            if (self.interval[0] > 0) {\r\n                self.interval[0]--;\r\n            }\r\n            else {\r\n                self.interval[0] = self.interval[1];\r\n                //位置関係計算\r\n                let sa = new Position_1.Position(scene.hero.position.x - self.position.x, scene.hero.position.y - self.position.y);\r\n                let sax = 0;\r\n                let say = 0;\r\n                if (!self.condition[\"麻痺\"].on) {\r\n                    if (self.Status == \"Attack\") {\r\n                        //アニメーション用意\r\n                        self.AtkAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(self.size.width + self.atkRenge, self.size.height + self.atkRenge));\r\n                        self.AtkAnimation.setInterval(6);\r\n                        self.AtkAnimation.limit = 1;\r\n                        self.AtkAnimation.SetUp2(ResourceManager_1.ResourceManager.Instance.GetImage(\"10\"), [\r\n                            new Rectangle_1.Rectangle(0, 0, 210, 210), new Rectangle_1.Rectangle(210, 0, 210, 210), new Rectangle_1.Rectangle(420, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(630, 0, 210, 210), new Rectangle_1.Rectangle(840, 0, 210, 210), new Rectangle_1.Rectangle(1050, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(1260, 0, 210, 210), new Rectangle_1.Rectangle(1470, 0, 210, 210), new Rectangle_1.Rectangle(1680, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(1890, 0, 210, 210), new Rectangle_1.Rectangle(2100, 0, 210, 210), new Rectangle_1.Rectangle(2310, 0, 210, 210),\r\n                        ]);\r\n                        //差を計算\r\n                        if (sa.x * sa.x + sa.y * sa.y < self.atkRenge * self.atkRenge) {\r\n                            scene.hero.damage(self.atk);\r\n                        }\r\n                        self.interval[0] = 30;\r\n                        self.Status = \"Stand\";\r\n                    }\r\n                    else if (self.Status == \"Stand\" || self.Status == \"Work\") {\r\n                        self.AtkAnimation = null;\r\n                        if (sa.x * sa.x + sa.y * sa.y < self.atkRenge * self.atkRenge) {\r\n                            //攻撃態勢\r\n                            self.Status = \"Attack\";\r\n                            self.nowSpeed = new Position_1.Position(0, 0);\r\n                        }\r\n                        else {\r\n                            //差を求める\r\n                            if (Math.abs(sa.x) > Math.abs(sa.y)) {\r\n                                sax = 1;\r\n                                say = Math.abs(sa.y) / Math.abs(sa.x);\r\n                            }\r\n                            else if (Math.abs(sa.y) > Math.abs(sa.x)) {\r\n                                sax = Math.abs(sa.x) / Math.abs(sa.y);\r\n                                say = 1;\r\n                            }\r\n                            if (sa.x < 0)\r\n                                sax *= -1;\r\n                            if (sa.y < 0)\r\n                                say *= -1;\r\n                        }\r\n                        //状態設定\r\n                        if (self.Status != \"Attack\") {\r\n                            if (sa.x == 0 && sa.y == 0) {\r\n                                self.Status = \"Stand\";\r\n                            }\r\n                            else {\r\n                                self.Status = \"Work\";\r\n                            }\r\n                        }\r\n                        //速度設定\r\n                        self.nowSpeed = new Position_1.Position(sax * self.speed, say * self.speed);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"突進系\": (self, scene) => {\r\n            if (self.condition[\"やけど\"].countdown()) {\r\n                self.damage(5);\r\n            }\r\n            self.condition[\"麻痺\"].countdown();\r\n            self.nowSpeed.x *= 0.95;\r\n            self.nowSpeed.y *= 0.95;\r\n            if (self.interval[0] > 0) {\r\n                self.interval[0]--;\r\n            }\r\n            else {\r\n                self.interval[0] = 60;\r\n                //位置関係計算\r\n                let sa = new Position_1.Position(scene.hero.position.x - self.position.x, scene.hero.position.y - self.position.y);\r\n                let sax = 0;\r\n                let say = 0;\r\n                if (!self.condition[\"麻痺\"].on) {\r\n                    if (self.Status == \"Attack\") {\r\n                        //アニメーション用意\r\n                        self.AtkAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(self.size.width + self.atkRenge, self.size.height + self.atkRenge));\r\n                        self.AtkAnimation.setInterval(6);\r\n                        self.AtkAnimation.limit = 1;\r\n                        self.AtkAnimation.SetUp2(ResourceManager_1.ResourceManager.Instance.GetImage(\"10\"), [\r\n                            new Rectangle_1.Rectangle(0, 0, 210, 210), new Rectangle_1.Rectangle(210, 0, 210, 210), new Rectangle_1.Rectangle(420, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(630, 0, 210, 210), new Rectangle_1.Rectangle(840, 0, 210, 210), new Rectangle_1.Rectangle(1050, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(1260, 0, 210, 210), new Rectangle_1.Rectangle(1470, 0, 210, 210), new Rectangle_1.Rectangle(1680, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(1890, 0, 210, 210), new Rectangle_1.Rectangle(2100, 0, 210, 210), new Rectangle_1.Rectangle(2310, 0, 210, 210),\r\n                        ]);\r\n                        //差を計算\r\n                        if (sa.x * sa.x + sa.y * sa.y < self.atkRenge * self.atkRenge) {\r\n                            scene.hero.damage(self.atk);\r\n                        }\r\n                        self.Status = \"Stand\";\r\n                    }\r\n                    else if (self.Status == \"Stand\" || self.Status == \"Work\") {\r\n                        self.AtkAnimation = null;\r\n                        //攻撃態勢\r\n                        self.Status = \"Attack\";\r\n                        self.nowSpeed = new Position_1.Position(0, 0);\r\n                        //差を求める\r\n                        if (Math.abs(sa.x) > Math.abs(sa.y)) {\r\n                            sax = 1;\r\n                            say = Math.abs(sa.y) / Math.abs(sa.x);\r\n                        }\r\n                        else if (Math.abs(sa.y) > Math.abs(sa.x)) {\r\n                            sax = Math.abs(sa.x) / Math.abs(sa.y);\r\n                            say = 1;\r\n                        }\r\n                        if (sa.x < 0)\r\n                            sax *= -1;\r\n                        if (sa.y < 0)\r\n                            say *= -1;\r\n                        //速度設定\r\n                        self.nowSpeed = new Position_1.Position(sax * 10, say * 10);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"ランダム\": (self, scene) => {\r\n            if (self.condition[\"やけど\"].countdown()) {\r\n                self.damage(5);\r\n            }\r\n            self.condition[\"麻痺\"].countdown();\r\n            self.nowSpeed.x *= 0.95;\r\n            self.nowSpeed.y *= 0.95;\r\n            if (self.interval[0] > 0) {\r\n                self.interval[0]--;\r\n            }\r\n            else {\r\n                self.interval[0] = 30;\r\n                //位置関係計算\r\n                let sa = new Position_1.Position(scene.hero.position.x - self.position.x, scene.hero.position.y - self.position.y);\r\n                if (!self.condition[\"麻痺\"].on) {\r\n                    if (self.Status == \"Attack\") {\r\n                        //アニメーション用意\r\n                        self.AtkAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(self.size.width + self.atkRenge, self.size.height + self.atkRenge));\r\n                        self.AtkAnimation.setInterval(6);\r\n                        self.AtkAnimation.limit = 1;\r\n                        self.AtkAnimation.SetUp2(ResourceManager_1.ResourceManager.Instance.GetImage(\"10\"), [\r\n                            new Rectangle_1.Rectangle(0, 0, 210, 210), new Rectangle_1.Rectangle(210, 0, 210, 210), new Rectangle_1.Rectangle(420, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(630, 0, 210, 210), new Rectangle_1.Rectangle(840, 0, 210, 210), new Rectangle_1.Rectangle(1050, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(1260, 0, 210, 210), new Rectangle_1.Rectangle(1470, 0, 210, 210), new Rectangle_1.Rectangle(1680, 0, 210, 210),\r\n                            new Rectangle_1.Rectangle(1890, 0, 210, 210), new Rectangle_1.Rectangle(2100, 0, 210, 210), new Rectangle_1.Rectangle(2310, 0, 210, 210),\r\n                        ]);\r\n                        //差を計算\r\n                        if (sa.x * sa.x + sa.y * sa.y < self.atkRenge * self.atkRenge) {\r\n                            scene.hero.damage(self.atk);\r\n                        }\r\n                        self.Status = \"Stand\";\r\n                    }\r\n                    else if (self.Status == \"Stand\" || self.Status == \"Work\") {\r\n                        if (Math.floor(Math.random() * 5) == 3) {\r\n                            //攻撃態勢\r\n                            self.Status = \"Attack\";\r\n                            self.nowSpeed = new Position_1.Position(0, 0);\r\n                        }\r\n                        //速度設定\r\n                        let directionx = Math.random() * 2 - 1;\r\n                        let directiony = Math.random() * 2 - 1;\r\n                        self.nowSpeed = new Position_1.Position(directionx * 10, directiony * 10);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"test\": (self, scene) => {\r\n            if (self.condition[\"やけど\"].countdown()) {\r\n                self.damage(5);\r\n            }\r\n        },\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=EnemyPattern.js.map\n\n//# sourceURL=webpack:///./public/Data/EnemyPattern.js?");

/***/ }),

/***/ "./public/Data/GlobalData.js":
/*!***********************************!*\
  !*** ./public/Data/GlobalData.js ***!
  \***********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Size_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.GlobalData = void 0;\r\n    class GlobalData {\r\n        constructor() {\r\n            //---\r\n            //ゲーム設定\r\n            this.ScreenSize = new Size_1.Size(1200, 600);\r\n            this.UIScreen = document.getElementById(\"GameUI\");\r\n            //---\r\n            this.KeySet = {\r\n                \"Ok\": \"Enter\",\r\n                \"Cansel\": \"Backspace\",\r\n                \"Dash\": \"Shift\",\r\n                \"Up\": \"ArrowUp\",\r\n                \"Down\": \"ArrowDown\",\r\n                \"Left\": \"ArrowLeft\",\r\n                \"Right\": \"ArrowRight\",\r\n                \"Attack\": \" \",\r\n                \"SuperAttack\": \"4\",\r\n                \"Skill3\": \"1\",\r\n                \"Skill2\": \"2\",\r\n                \"Skill1\": \"3\",\r\n            };\r\n            this.AssistSettingList = {\r\n                \"デバッグモード\": false,\r\n                \"方向アシストアイコン\": true,\r\n                \"攻撃範囲表示\": true,\r\n            };\r\n            this.averageFps = 0;\r\n        }\r\n        setUp() { }\r\n    }\r\n    exports.GlobalData = GlobalData;\r\n    //シングルトンパターン\r\n    GlobalData.Instance = new GlobalData();\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=GlobalData.js.map\n\n//# sourceURL=webpack:///./public/Data/GlobalData.js?");

/***/ }),

/***/ "./public/Data/ItemPriceList.js":
/*!**************************************!*\
  !*** ./public/Data/ItemPriceList.js ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.itemPriceList = void 0;\r\n    exports.itemPriceList = {\r\n        //ステージ1以降\r\n        \"緑色の肉\": 100,\r\n        \"どこかしらの肉\": 100,\r\n        \"青色の肝\": 150,\r\n        \"肉団子\": 300,\r\n        \"臭くない肉\": 500,\r\n        //ステージ2以降\r\n        \"毛皮\": 300,\r\n        \"鉄くず\": 500,\r\n        \"コボルトの通貨\": 5000,\r\n        \"鉄くず合わせ\": 1000,\r\n        \"それなりの鉄\": 2500,\r\n        \"作りかけの毛皮\": 1000,\r\n        \"毛皮のコート\": 2500,\r\n        //ステージ3以降\r\n        \"蛇の皮\": 1000,\r\n        \"生えかけの角\": 800,\r\n        \"自然の塊\": 20,\r\n        \"木の枝\": 2,\r\n        //その他\r\n        \"金塊\": 99999,\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=ItemPriceList.js.map\n\n//# sourceURL=webpack:///./public/Data/ItemPriceList.js?");

/***/ }),

/***/ "./public/Data/LicensePriceList.js":
/*!*****************************************!*\
  !*** ./public/Data/LicensePriceList.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.LicensePriceList = void 0;\r\n    exports.LicensePriceList = {\r\n        \"素材合成機\": 200,\r\n        \"作業台\": 5500,\r\n        \"調合機\": 1000,\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=LicensePriceList.js.map\n\n//# sourceURL=webpack:///./public/Data/LicensePriceList.js?");

/***/ }),

/***/ "./public/Data/PassPriceList.js":
/*!**************************************!*\
  !*** ./public/Data/PassPriceList.js ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.PassPriceList = void 0;\r\n    exports.PassPriceList = {\r\n        \"岩場\": 1000,\r\n        \"森林入り口\": 15000,\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=PassPriceList.js.map\n\n//# sourceURL=webpack:///./public/Data/PassPriceList.js?");

/***/ }),

/***/ "./public/Data/Reward.js":
/*!*******************************!*\
  !*** ./public/Data/Reward.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.RewardList = void 0;\r\n    exports.RewardList = {\r\n        \"ゴブリン\": [\"緑色の肉\", \"緑色の肉\", \"緑色の肉\"],\r\n        \"オーク\": [\"どこかしらの肉\", \"どこかしらの肉\", \"どこかしらの肉\"],\r\n        \"リザードマン\": [\"緑色の肉\", \"緑色の肉\", \"青色の肝\"],\r\n        \"トカゲマン\": [\"緑色の肉\", \"青色の肝\", \"青色の肝\"],\r\n        \"コボルト\": [\"毛皮\", \"毛皮\", \"毛皮\", \"毛皮\", \"コボルトの通貨\"],\r\n        \"狼男\": [\"毛皮\", \"どこかしらの肉\"],\r\n        \"鉄仮面\": [\"鉄くず\"],\r\n        \"蛇人間\": [\"蛇の皮\"],\r\n        \"ハイゴブリン\": [\"緑色の肉\", \"生えかけの角\", \"生えかけの角\"],\r\n        \"森の精霊\": [\"木の枝\", \"自然の塊\", \"自然の塊\"],\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Reward.js.map\n\n//# sourceURL=webpack:///./public/Data/Reward.js?");

/***/ }),

/***/ "./public/Data/SkillPriceList.js":
/*!***************************************!*\
  !*** ./public/Data/SkillPriceList.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.SkillPriceList = void 0;\r\n    exports.SkillPriceList = {\r\n        \"火球1\": 1000,\r\n        \"火球2\": 2000,\r\n        \"火球3\": 5000,\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=SkillPriceList.js.map\n\n//# sourceURL=webpack:///./public/Data/SkillPriceList.js?");

/***/ }),

/***/ "./public/Map/Home2.js":
/*!*****************************!*\
  !*** ./public/Map/Home2.js ***!
  \*****************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/SaveData */ \"./public/Base/SaveData.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../MiniWindow/ItemCreateWindow1 */ \"./public/MiniWindow/ItemCreateWindow1.js\"), __webpack_require__(/*! ../Object/ActiveObject */ \"./public/Object/ActiveObject.js\"), __webpack_require__(/*! ../Object/Wall */ \"./public/Object/Wall.js\"), __webpack_require__(/*! ./HomeMap */ \"./public/Map/HomeMap.js\"), __webpack_require__(/*! ./MapData */ \"./public/Map/MapData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, SaveData_1, Size_1, ItemCreateWindow1_1, ActiveObject_1, Wall_1, HomeMap_1, MapData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.HomeMap2 = void 0;\r\n    class HomeMap2 extends MapData_1.MapData {\r\n        constructor() {\r\n            super();\r\n            let image1 = document.createElement(\"img\");\r\n            image1.src = \"https://12345ff.github.io/Image/null.png\";\r\n            let image2 = document.createElement(\"img\");\r\n            image2.src = \"https://12345ff.github.io/Image/Object/Machine1a.png\";\r\n            let image3 = document.createElement(\"img\");\r\n            image3.src = \"https://12345ff.github.io/Image/Object/Machine2a.png\";\r\n            let image4 = document.createElement(\"img\");\r\n            image4.src = \"https://12345ff.github.io/Image/Object/Machine3a.png\";\r\n            let wall1 = new Wall_1.Wall(new Position_1.Position(600, 50), new Size_1.Size(1200, 100), image1);\r\n            let wall2 = new Wall_1.Wall(new Position_1.Position(50, 300), new Size_1.Size(100, 600), image1);\r\n            let wall3 = new Wall_1.Wall(new Position_1.Position(600, 500), new Size_1.Size(1200, 200), image1);\r\n            let wall4 = new Wall_1.Wall(new Position_1.Position(1150, 300), new Size_1.Size(100, 600), image1);\r\n            let door = new ActiveObject_1.ActiveObject(new Position_1.Position(150, 350), new Size_1.Size(100, 100), image1, (scene) => {\r\n                this.ObjectRemove(scene);\r\n                let newMap = new HomeMap_1.HomeMap();\r\n                scene.mapData = newMap;\r\n                newMap.ObjectSet(scene, new Position_1.Position(225, 350));\r\n            }, true, (scene) => {\r\n            }, true);\r\n            let machine1 = new ActiveObject_1.ActiveObject(new Position_1.Position(900, 150), new Size_1.Size(200, 100), image2, (scene) => {\r\n                let newWindow = new ItemCreateWindow1_1.ItemCreateWindow(scene, [\"緑色の肉\", \"青色の肝\", \"どこかしらの肉\"], [\r\n                    [\"緑色の肉\", \"緑色の肉\", \"肉団子\"],\r\n                    [\"どこかしらの肉\", \"どこかしらの肉\", \"肉団子\"],\r\n                    [\"緑色の肉\", \"どこかしらの肉\", \"肉団子\"],\r\n                    [\"緑色の肉\", \"青色の肝\", \"臭くない肉\"],\r\n                    [\"どこかしらの肉\", \"青色の肝\", \"臭くない肉\"]\r\n                ], \"Background/Machine1b.png\");\r\n                newWindow.ObjectSet();\r\n            }, true, (scene) => {\r\n            }, false);\r\n            let machine2 = new ActiveObject_1.ActiveObject(new Position_1.Position(700, 150), new Size_1.Size(200, 100), image3, (scene) => {\r\n                let newWindow = new ItemCreateWindow1_1.ItemCreateWindow(scene, [\"毛皮\", \"作りかけの毛皮\", \"鉄くず\", \"鉄くず合わせ\"], [\r\n                    [\"毛皮\", \"毛皮\", \"作りかけの毛皮\"],\r\n                    [\"作りかけの毛皮\", \"作りかけの毛皮\", \"毛皮のコート\"],\r\n                    [\"鉄くず\", \"鉄くず\", \"鉄くず合わせ\"],\r\n                    [\"鉄くず合わせ\", \"鉄くず合わせ\", \"それなりの鉄\"],\r\n                    [\"作りかけの毛皮\", \"鉄くず合わせ\", \"コボルトの通貨\"],\r\n                ], \"Background/Machine2b.png\");\r\n                newWindow.ObjectSet();\r\n            }, true, (scene) => { }, false);\r\n            let machine3 = new ActiveObject_1.ActiveObject(new Position_1.Position(500, 150), new Size_1.Size(200, 100), image4, (scene) => {\r\n                let newWindow = new ItemCreateWindow1_1.ItemCreateWindow(scene, [\"毛皮\", \"作りかけの毛皮\", \"鉄くず\", \"鉄くず合わせ\"], [\r\n                    [\"毛皮\", \"毛皮\", \"作りかけの毛皮\"],\r\n                    [\"作りかけの毛皮\", \"作りかけの毛皮\", \"毛皮のコート\"],\r\n                    [\"鉄くず\", \"鉄くず\", \"鉄くず合わせ\"],\r\n                    [\"鉄くず合わせ\", \"鉄くず合わせ\", \"それなりの鉄\"],\r\n                    [\"作りかけの毛皮\", \"鉄くず合わせ\", \"コボルトの通貨\"],\r\n                ], \"Background/Machine3b.png\");\r\n                newWindow.ObjectSet();\r\n            }, true, (scene) => { }, false);\r\n            this.walls.push(wall1);\r\n            this.walls.push(wall2);\r\n            this.walls.push(wall3);\r\n            this.walls.push(wall4);\r\n            this.activeObj.push(door);\r\n            if (SaveData_1.SaveData.Instance.license.includes(\"素材合成機\"))\r\n                this.activeObj.push(machine1);\r\n            if (SaveData_1.SaveData.Instance.license.includes(\"作業台\"))\r\n                this.activeObj.push(machine2);\r\n            if (SaveData_1.SaveData.Instance.license.includes(\"調合機\"))\r\n                this.activeObj.push(machine3);\r\n        }\r\n        ObjectSet(scene, heroPos) {\r\n            super.ObjectSet(scene, heroPos);\r\n            scene.background.src = \"https://12345ff.github.io/Image/Field/mapimage2.png\";\r\n        }\r\n    }\r\n    exports.HomeMap2 = HomeMap2;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Home2.js.map\n\n//# sourceURL=webpack:///./public/Map/Home2.js?");

/***/ }),

/***/ "./public/Map/HomeMap.js":
/*!*******************************!*\
  !*** ./public/Map/HomeMap.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../MiniWindow/pc */ \"./public/MiniWindow/pc.js\"), __webpack_require__(/*! ../Object/ActiveObject */ \"./public/Object/ActiveObject.js\"), __webpack_require__(/*! ../Object/Wall */ \"./public/Object/Wall.js\"), __webpack_require__(/*! ./farm1Map */ \"./public/Map/farm1Map.js\"), __webpack_require__(/*! ./Home2 */ \"./public/Map/Home2.js\"), __webpack_require__(/*! ./MapData */ \"./public/Map/MapData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, pc_1, ActiveObject_1, Wall_1, farm1Map_1, Home2_1, MapData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.HomeMap = void 0;\r\n    class HomeMap extends MapData_1.MapData {\r\n        constructor() {\r\n            super();\r\n            let image1 = document.createElement(\"img\");\r\n            image1.src = \"https://12345ff.github.io/Image/null.png\";\r\n            let image2 = document.createElement(\"img\");\r\n            image2.src = \"https://12345ff.github.io/Image/Object/pc.png\";\r\n            let wall1 = new Wall_1.Wall(new Position_1.Position(600, 50), new Size_1.Size(1200, 100), image1);\r\n            let wall2 = new Wall_1.Wall(new Position_1.Position(50, 400), new Size_1.Size(100, 400), image1);\r\n            let wall3 = new Wall_1.Wall(new Position_1.Position(600, 500), new Size_1.Size(1200, 200), image1);\r\n            let wall4 = new Wall_1.Wall(new Position_1.Position(1150, 300), new Size_1.Size(100, 600), image1);\r\n            let door = new ActiveObject_1.ActiveObject(new Position_1.Position(50, 150), new Size_1.Size(100, 100), image1, (scene) => {\r\n                this.ObjectRemove(scene);\r\n                let newMap = new farm1Map_1.FarmMap1();\r\n                scene.mapData = newMap;\r\n                newMap.ObjectSet(scene, new Position_1.Position(1000, 250));\r\n            }, true, (scene) => {\r\n            }, false);\r\n            let door2 = new ActiveObject_1.ActiveObject(new Position_1.Position(150, 350), new Size_1.Size(100, 100), image1, (scene) => {\r\n                this.ObjectRemove(scene);\r\n                let newMap = new Home2_1.HomeMap2();\r\n                scene.mapData = newMap;\r\n                newMap.ObjectSet(scene, new Position_1.Position(250, 350));\r\n            }, true, (scene) => {\r\n            }, false);\r\n            let pc = new ActiveObject_1.ActiveObject(new Position_1.Position(600, 250), new Size_1.Size(100, 100), image2, (scene) => {\r\n                let window = new pc_1.PcWindow(scene);\r\n                window.ObjectSet();\r\n            }, true, (scene) => {\r\n            }, false);\r\n            this.walls.push(wall1);\r\n            this.walls.push(wall2);\r\n            this.walls.push(wall3);\r\n            this.walls.push(wall4);\r\n            this.activeObj.push(door);\r\n            this.activeObj.push(door2);\r\n            this.activeObj.push(pc);\r\n            this.beginPos = new Position_1.Position(1025, 225);\r\n        }\r\n        ObjectSet(scene, heroPos) {\r\n            super.ObjectSet(scene, heroPos);\r\n            scene.hero.hp = scene.hero.maxHP;\r\n            scene.background.src = \"https://12345ff.github.io/Image/Field/mapimage1.png\";\r\n        }\r\n    }\r\n    exports.HomeMap = HomeMap;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=HomeMap.js.map\n\n//# sourceURL=webpack:///./public/Map/HomeMap.js?");

/***/ }),

/***/ "./public/Map/MapData.js":
/*!*******************************!*\
  !*** ./public/Map/MapData.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.MapData = void 0;\r\n    class MapData {\r\n        constructor() {\r\n            this.mapType = \"none\";\r\n            this.activeObj = [];\r\n            this.walls = [];\r\n            this.beginPos = new Position_1.Position(GlobalData_1.GlobalData.Instance.ScreenSize.width / 2, GlobalData_1.GlobalData.Instance.ScreenSize.height / 2);\r\n        }\r\n        ObjectSet(scene, heroPos) {\r\n            for (let i = 0; i < this.activeObj.length; i++) {\r\n                scene.activeObjs.push(this.activeObj[i]);\r\n            }\r\n            for (let i = 0; i < this.walls.length; i++) {\r\n                scene.walls.push(this.walls[i]);\r\n            }\r\n            scene.hero.position = heroPos;\r\n        }\r\n        ObjectRemove(scene) {\r\n            let activeObj = [];\r\n            for (let i = 0; i < scene.activeObjs.length; i++) {\r\n                if (!this.activeObj.includes(scene.activeObjs[i])) {\r\n                    activeObj.push(scene.activeObjs[i]);\r\n                }\r\n            }\r\n            scene.activeObjs = activeObj;\r\n            let walls = [];\r\n            for (let i = 0; i < scene.walls.length; i++) {\r\n                if (!this.walls.includes(scene.walls[i])) {\r\n                    walls.push(scene.walls[i]);\r\n                }\r\n            }\r\n            scene.walls = walls;\r\n            scene.enemys = [];\r\n            scene.DamageObjs = [];\r\n            scene.hero.target = null;\r\n        }\r\n    }\r\n    exports.MapData = MapData;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=MapData.js.map\n\n//# sourceURL=webpack:///./public/Map/MapData.js?");

/***/ }),

/***/ "./public/Map/farm1Map.js":
/*!********************************!*\
  !*** ./public/Map/farm1Map.js ***!
  \********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ../Object/ActiveObject */ \"./public/Object/ActiveObject.js\"), __webpack_require__(/*! ../Object/Wall */ \"./public/Object/Wall.js\"), __webpack_require__(/*! ./HomeMap */ \"./public/Map/HomeMap.js\"), __webpack_require__(/*! ./MapData */ \"./public/Map/MapData.js\"), __webpack_require__(/*! ../Object/Enemy */ \"./public/Object/Enemy.js\"), __webpack_require__(/*! ../Data/EnemyPattern */ \"./public/Data/EnemyPattern.js\"), __webpack_require__(/*! ../Base/SaveData */ \"./public/Base/SaveData.js\"), __webpack_require__(/*! ./farm2Map */ \"./public/Map/farm2Map.js\"), __webpack_require__(/*! ../MiniWindow/MessageWindow */ \"./public/MiniWindow/MessageWindow.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, Rectangle_1, ActiveObject_1, Wall_1, HomeMap_1, MapData_1, Enemy_1, EnemyPattern_1, SaveData_1, farm2Map_1, MessageWindow_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.FarmMap1 = void 0;\r\n    class FarmMap1 extends MapData_1.MapData {\r\n        constructor() {\r\n            super();\r\n            let image1 = document.createElement(\"img\");\r\n            image1.src = \"https://12345ff.github.io/Image/null.png\";\r\n            let image2 = document.createElement(\"img\");\r\n            image2.src = \"https://12345ff.github.io/Image/obj1.png\";\r\n            let image3 = document.createElement(\"img\");\r\n            image3.src = \"https://12345ff.github.io/Image/Object/kusa.png\";\r\n            let image4 = document.createElement(\"img\");\r\n            image4.src = \"https://12345ff.github.io/Image/Object/kanban.png\";\r\n            let wall1 = new Wall_1.Wall(new Position_1.Position(1150, 300), new Size_1.Size(100, 600), image1);\r\n            let wall2 = new Wall_1.Wall(new Position_1.Position(450, 550), new Size_1.Size(900, 100), image1);\r\n            let door = new ActiveObject_1.ActiveObject(new Position_1.Position(1150, 250), new Size_1.Size(100, 100), image1, (scene) => {\r\n                this.ObjectRemove(scene);\r\n                let newMap = new HomeMap_1.HomeMap();\r\n                scene.mapData = newMap;\r\n                newMap.ObjectSet(scene, new Position_1.Position(150, 150));\r\n            }, true, (scene) => {\r\n            }, false);\r\n            for (let y = 0; y <= 3; y++) {\r\n                for (let x = 0; x <= 6; x++) {\r\n                    let hoverObj = new ActiveObject_1.ActiveObject(new Position_1.Position(50 + x * 100, 50 + y * 100), new Size_1.Size(100, 100), image3, (scene) => {\r\n                    }, false, (scene) => {\r\n                        if (scene.enemys.length == 0) {\r\n                            let random1 = Math.floor(Math.random() * 100);\r\n                            if (random1 < 10) {\r\n                                let random2 = Math.floor(Math.random() * 10);\r\n                                let enemy;\r\n                                if (random2 < 2)\r\n                                    enemy = new Enemy_1.Enemy(\"オーク\", 300, 5, 1, 1, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara30.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                else if (random2 < 5)\r\n                                    enemy = new Enemy_1.Enemy(\"リザードマン\", 100, 10, 1, 1, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara38.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                else if (random2 < 8)\r\n                                    enemy = new Enemy_1.Enemy(\"トカゲマン\", 200, 15, 1, 1, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara39.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                else\r\n                                    enemy = new Enemy_1.Enemy(\"ゴブリン\", 100, 5, 1, 1, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara32.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                enemy.position = new Position_1.Position(hoverObj.position.x, hoverObj.position.y);\r\n                                scene.enemys.push(enemy);\r\n                            }\r\n                        }\r\n                    }, true);\r\n                    this.activeObj.push(hoverObj);\r\n                }\r\n            }\r\n            let nextStage = new ActiveObject_1.ActiveObject(new Position_1.Position(950, 550), new Size_1.Size(100, 100), image4, (scene) => {\r\n                if (SaveData_1.SaveData.Instance.pass.includes(\"岩場\")) {\r\n                    this.ObjectRemove(scene);\r\n                    const newMap = new farm2Map_1.FarmMap2();\r\n                    scene.mapData = newMap;\r\n                    newMap.ObjectSet(scene, new Position_1.Position(950, 150));\r\n                }\r\n                else {\r\n                    const window = new MessageWindow_1.MessageWindow(scene, [\"適切な権利書(岩場)を所持していない\", \"自宅のパソコンから土地権利書を購入することができる\"]);\r\n                    window.ObjectSet();\r\n                }\r\n            }, true, (scene) => {\r\n            }, false);\r\n            this.walls.push(wall1);\r\n            this.walls.push(wall2);\r\n            this.activeObj.push(door);\r\n            this.activeObj.push(nextStage);\r\n        }\r\n        ObjectSet(scene, heroPos) {\r\n            super.ObjectSet(scene, heroPos);\r\n            scene.background.src = \"https://12345ff.github.io/Image/Field/Field3.bmp\";\r\n        }\r\n    }\r\n    exports.FarmMap1 = FarmMap1;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=farm1Map.js.map\n\n//# sourceURL=webpack:///./public/Map/farm1Map.js?");

/***/ }),

/***/ "./public/Map/farm2Map.js":
/*!********************************!*\
  !*** ./public/Map/farm2Map.js ***!
  \********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ../Object/ActiveObject */ \"./public/Object/ActiveObject.js\"), __webpack_require__(/*! ../Object/Wall */ \"./public/Object/Wall.js\"), __webpack_require__(/*! ../Base/SaveData */ \"./public/Base/SaveData.js\"), __webpack_require__(/*! ../MiniWindow/MessageWindow */ \"./public/MiniWindow/MessageWindow.js\"), __webpack_require__(/*! ./MapData */ \"./public/Map/MapData.js\"), __webpack_require__(/*! ../Object/Enemy */ \"./public/Object/Enemy.js\"), __webpack_require__(/*! ../Data/EnemyPattern */ \"./public/Data/EnemyPattern.js\"), __webpack_require__(/*! ./farm3Map */ \"./public/Map/farm3Map.js\"), __webpack_require__(/*! ./farm1Map */ \"./public/Map/farm1Map.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, Rectangle_1, ActiveObject_1, Wall_1, SaveData_1, MessageWindow_1, MapData_1, Enemy_1, EnemyPattern_1, farm3Map_1, farm1Map_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.FarmMap2 = void 0;\r\n    class FarmMap2 extends MapData_1.MapData {\r\n        constructor() {\r\n            super();\r\n            let image1 = document.createElement(\"img\");\r\n            image1.src = \"https://12345ff.github.io/Image/null.png\";\r\n            let image2 = document.createElement(\"img\");\r\n            image2.src = \"https://12345ff.github.io/Image/obj1.png\";\r\n            let image3 = document.createElement(\"img\");\r\n            image3.src = \"https://12345ff.github.io/Image/Object/isi.png\";\r\n            let image4 = document.createElement(\"img\");\r\n            image4.src = \"https://12345ff.github.io/Image/Object/kanban.png\";\r\n            let wall1 = new Wall_1.Wall(new Position_1.Position(1150, 300), new Size_1.Size(100, 600), image1);\r\n            for (let y = 0; y <= 3; y++) {\r\n                for (let x = 0; x <= 6; x++) {\r\n                    const random = Math.floor(Math.random() * 2);\r\n                    if (random == 1) {\r\n                        let hoverObj = new ActiveObject_1.ActiveObject(new Position_1.Position(50 + x * 100, 50 + y * 100), new Size_1.Size(100, 100), image3, (scene) => {\r\n                        }, false, (scene) => {\r\n                            if (scene.enemys.length <= 3) {\r\n                                let random1 = Math.floor(Math.random() * 10);\r\n                                if (random1 < 1) {\r\n                                    let random2 = Math.floor(Math.random() * 10);\r\n                                    let enemy;\r\n                                    if (random2 < 3) {\r\n                                        enemy = new Enemy_1.Enemy(\"コボルト\", 100, 20, 1, 5, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara28.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                    }\r\n                                    else if (random2 < 6) {\r\n                                        enemy = new Enemy_1.Enemy(\"狼男\", 500, 50, 1, 1, 70, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara26.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                    }\r\n                                    else {\r\n                                        enemy = new Enemy_1.Enemy(\"鉄仮面\", 1000, 1, 4, 1, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara41.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                    }\r\n                                    enemy.position = new Position_1.Position(hoverObj.position.x, hoverObj.position.y);\r\n                                    scene.enemys.push(enemy);\r\n                                }\r\n                            }\r\n                        }, true);\r\n                        this.activeObj.push(hoverObj);\r\n                    }\r\n                }\r\n            }\r\n            let backStage = new ActiveObject_1.ActiveObject(new Position_1.Position(950, 50), new Size_1.Size(100, 100), image2, (scene) => {\r\n                this.ObjectRemove(scene);\r\n                const newMap = new farm1Map_1.FarmMap1();\r\n                scene.mapData = newMap;\r\n                newMap.ObjectSet(scene, new Position_1.Position(950, 450));\r\n            }, true, (scene) => {\r\n            }, false);\r\n            let nextStage = new ActiveObject_1.ActiveObject(new Position_1.Position(950, 550), new Size_1.Size(100, 100), image4, (scene) => {\r\n                if (SaveData_1.SaveData.Instance.pass.includes(\"森林入り口\")) {\r\n                    this.ObjectRemove(scene);\r\n                    const newMap = new farm3Map_1.FarmMap3();\r\n                    scene.mapData = newMap;\r\n                    newMap.ObjectSet(scene, new Position_1.Position(950, 150));\r\n                }\r\n                else {\r\n                    const window = new MessageWindow_1.MessageWindow(scene, [\"適切な権利書(森林入り口)を所持していない\", \"自宅のパソコンから土地権利書を購入することができる\"]);\r\n                    window.ObjectSet();\r\n                }\r\n            }, true, (scene) => {\r\n            }, false);\r\n            this.walls.push(wall1);\r\n            this.activeObj.push(backStage);\r\n            this.activeObj.push(nextStage);\r\n        }\r\n        ObjectSet(scene, heroPos) {\r\n            super.ObjectSet(scene, heroPos);\r\n            scene.background.src = \"https://12345ff.github.io/Image/Field/Field4.bmp\";\r\n        }\r\n    }\r\n    exports.FarmMap2 = FarmMap2;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=farm2Map.js.map\n\n//# sourceURL=webpack:///./public/Map/farm2Map.js?");

/***/ }),

/***/ "./public/Map/farm3Map.js":
/*!********************************!*\
  !*** ./public/Map/farm3Map.js ***!
  \********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ../Object/ActiveObject */ \"./public/Object/ActiveObject.js\"), __webpack_require__(/*! ../Object/Wall */ \"./public/Object/Wall.js\"), __webpack_require__(/*! ./MapData */ \"./public/Map/MapData.js\"), __webpack_require__(/*! ../Object/Enemy */ \"./public/Object/Enemy.js\"), __webpack_require__(/*! ../Data/EnemyPattern */ \"./public/Data/EnemyPattern.js\"), __webpack_require__(/*! ./farm2Map */ \"./public/Map/farm2Map.js\"), __webpack_require__(/*! ../MiniWindow/MessageWindow */ \"./public/MiniWindow/MessageWindow.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, Rectangle_1, ActiveObject_1, Wall_1, MapData_1, Enemy_1, EnemyPattern_1, farm2Map_1, MessageWindow_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.FarmMap3 = void 0;\r\n    class FarmMap3 extends MapData_1.MapData {\r\n        constructor() {\r\n            super();\r\n            let image1 = document.createElement(\"img\");\r\n            image1.src = \"https://12345ff.github.io/Image/null.png\";\r\n            let image2 = document.createElement(\"img\");\r\n            image2.src = \"https://12345ff.github.io/Image/obj1.png\";\r\n            let image3 = document.createElement(\"img\");\r\n            image3.src = \"https://12345ff.github.io/Image/Object/kusa.png\";\r\n            let image4 = document.createElement(\"img\");\r\n            image4.src = \"https://12345ff.github.io/Image/Object/kanban.png\";\r\n            let wall1 = new Wall_1.Wall(new Position_1.Position(1150, 300), new Size_1.Size(100, 600), image1);\r\n            let wall2 = new Wall_1.Wall(new Position_1.Position(450, 50), new Size_1.Size(900, 100), image1);\r\n            for (let y = 0; y <= 2; y++) {\r\n                for (let x = 0; x <= 10; x++) {\r\n                    if (x <= 4 || 8 <= x) {\r\n                        let hoverObj = new ActiveObject_1.ActiveObject(new Position_1.Position(50 + x * 100, 350 + y * 100), new Size_1.Size(100, 100), image3, (scene) => {\r\n                        }, false, (scene) => {\r\n                            if (scene.enemys.length == 0) {\r\n                                let random1 = Math.floor(Math.random() * 100);\r\n                                if (random1 < 5) {\r\n                                    let random2 = Math.floor(Math.random() * 10);\r\n                                    let enemy;\r\n                                    if (random2 > 3) {\r\n                                        enemy = new Enemy_1.Enemy(\"森の精霊\", 100, 50, 1, 10, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara24.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                    }\r\n                                    else if (random2 > 6) {\r\n                                        enemy = new Enemy_1.Enemy(\"ハイゴブリン\", 750, 100, 1, 2, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara31.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                    }\r\n                                    else {\r\n                                        enemy = new Enemy_1.Enemy(\"蛇人間\", 500, 100, 1, 3, 50, 120, EnemyPattern_1.EnemyPattern[\"normal\"], \"none\", \"none\", \"none\", \"chara48.png\", [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),], [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)], [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n                                    }\r\n                                    enemy.position = new Position_1.Position(hoverObj.position.x, hoverObj.position.y);\r\n                                    scene.enemys.push(enemy);\r\n                                }\r\n                            }\r\n                        }, true);\r\n                        this.activeObj.push(hoverObj);\r\n                    }\r\n                }\r\n            }\r\n            let backStage = new ActiveObject_1.ActiveObject(new Position_1.Position(950, 50), new Size_1.Size(100, 100), image2, (scene) => {\r\n                this.ObjectRemove(scene);\r\n                const newMap = new farm2Map_1.FarmMap2();\r\n                scene.mapData = newMap;\r\n                newMap.ObjectSet(scene, new Position_1.Position(950, 450));\r\n            }, true, (scene) => {\r\n            }, false);\r\n            let nextStage = new ActiveObject_1.ActiveObject(new Position_1.Position(650, 550), new Size_1.Size(100, 100), image4, (scene) => {\r\n                const window = new MessageWindow_1.MessageWindow(scene, [\"この先開発中につき立ち入り禁止\"]);\r\n                window.ObjectSet();\r\n            }, true, (scene) => {\r\n            }, false);\r\n            this.walls.push(wall1);\r\n            this.walls.push(wall2);\r\n            this.activeObj.push(nextStage);\r\n            this.activeObj.push(backStage);\r\n        }\r\n        ObjectSet(scene, heroPos) {\r\n            super.ObjectSet(scene, heroPos);\r\n            scene.background.src = \"https://12345ff.github.io/Image/Field/Field5.bmp\";\r\n        }\r\n    }\r\n    exports.FarmMap3 = FarmMap3;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=farm3Map.js.map\n\n//# sourceURL=webpack:///./public/Map/farm3Map.js?");

/***/ }),

/***/ "./public/MiniWindow/ItemCreateWindow1.js":
/*!************************************************!*\
  !*** ./public/MiniWindow/ItemCreateWindow1.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/SaveData */ \"./public/Base/SaveData.js\"), __webpack_require__(/*! ./Window */ \"./public/MiniWindow/Window.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, SaveData_1, Window_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.ItemCreateWindow = void 0;\r\n    class ItemCreateWindow extends Window_1.WindowData {\r\n        constructor(scene, itemlist, createList, imageSrcName) {\r\n            super(scene);\r\n            this.itemList = itemlist;\r\n            this.createList = createList;\r\n            this.backgroundImage = document.createElement(\"img\");\r\n            this.selectItem1 = document.createElement(\"select\");\r\n            this.selectItem2 = document.createElement(\"select\");\r\n            this.createBtn = document.createElement(\"button\");\r\n            this.itemResult = document.createElement(\"p\");\r\n            this.closeBtn = document.createElement(\"button\");\r\n            this.backgroundImage.className = \"pcImage\";\r\n            this.selectItem1.className = \"ItemSelect\";\r\n            this.selectItem2.className = \"ItemSelect\";\r\n            this.createBtn.className = \"CreateBtn\";\r\n            this.itemResult.className = \"itemResult\";\r\n            this.closeBtn.className = \"closeName\";\r\n            this.selectItem1.style.top = \"10%\";\r\n            this.selectItem1.style.left = \"10%\";\r\n            this.selectItem1.style.zIndex = \"7\";\r\n            this.selectItem2.style.top = \"10%\";\r\n            this.selectItem2.style.right = \"10%\";\r\n            this.selectItem2.style.zIndex = \"7\";\r\n            this.createBtn.style.bottom = \"10%\";\r\n            this.createBtn.style.left = \"50%\";\r\n            this.createBtn.style.zIndex = \"7\";\r\n            this.createBtn.style.transform = \"translateX(-50%)\";\r\n            this.itemResult.style.top = \"10%\";\r\n            this.itemResult.style.zIndex = \"7\";\r\n            this.backgroundImage.src = `https://12345ff.github.io/Image/${imageSrcName}`;\r\n            this.closeBtn.textContent = \"X\";\r\n            this.createBtn.textContent = \"合成/生成\";\r\n            this.selectItem1.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            this.selectItem2.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            this.closeBtn.addEventListener(\"touchend\", () => {\r\n                this.ObjectRemove();\r\n            });\r\n            this.createBtn.addEventListener(\"touchend\", () => {\r\n                if (this.selectItem1.value && this.selectItem2.value) {\r\n                    let flag = false;\r\n                    if (this.selectItem1.value == this.selectItem2.value) {\r\n                        if (SaveData_1.SaveData.Instance.items[this.selectItem1.value] >= 2) {\r\n                            SaveData_1.SaveData.Instance.items[this.selectItem1.value] -= 2;\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (SaveData_1.SaveData.Instance.items[this.selectItem1.value] >= 1 &&\r\n                            SaveData_1.SaveData.Instance.items[this.selectItem2.value] >= 1) {\r\n                            SaveData_1.SaveData.Instance.items[this.selectItem1.value] -= 1;\r\n                            SaveData_1.SaveData.Instance.items[this.selectItem2.value] -= 1;\r\n                            flag = true;\r\n                        }\r\n                    }\r\n                    if (flag) {\r\n                        let flag = true;\r\n                        for (let i = 0; i < this.createList.length; i++) {\r\n                            if ((this.selectItem1.value == this.createList[i][0] && this.selectItem2.value == this.createList[i][1]) ||\r\n                                (this.selectItem1.value == this.createList[i][1] && this.selectItem2.value == this.createList[i][0])) {\r\n                                scene.hero.GetItem(this.createList[i][2]);\r\n                                this.itemResult.innerHTML = `成功!(${this.selectItem1.value}+${this.selectItem2.value})<br>->${this.createList[i][2]}`;\r\n                                flag = false;\r\n                            }\r\n                        }\r\n                        if (flag) {\r\n                            scene.hero.GetItem(\"失敗作\");\r\n                            this.itemResult.innerHTML = `失敗!(${this.selectItem1.value}+${this.selectItem2.value})<br>->失敗作`;\r\n                        }\r\n                    }\r\n                    this.ItemSet();\r\n                }\r\n            });\r\n            this.UIs.push(this.backgroundImage);\r\n            this.UIs.push(this.selectItem1);\r\n            this.UIs.push(this.selectItem2);\r\n            this.UIs.push(this.createBtn);\r\n            this.UIs.push(this.itemResult);\r\n            this.UIs.push(this.closeBtn);\r\n            this.ItemSet();\r\n        }\r\n        ItemSet() {\r\n            this.selectItem1.innerHTML = \"\";\r\n            this.selectItem2.innerHTML = \"\";\r\n            for (let key in SaveData_1.SaveData.Instance.items) {\r\n                if (this.itemList.includes(key)) {\r\n                    let option1 = document.createElement(\"option\");\r\n                    let option2 = document.createElement(\"option\");\r\n                    option1.value = key;\r\n                    option2.value = key;\r\n                    option1.textContent = `${key}:${SaveData_1.SaveData.Instance.items[key]}`;\r\n                    option2.textContent = `${key}:${SaveData_1.SaveData.Instance.items[key]}`;\r\n                    option1.style.color = \"white\";\r\n                    option2.style.color = \"white\";\r\n                    this.selectItem1.appendChild(option1);\r\n                    this.selectItem2.appendChild(option2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    exports.ItemCreateWindow = ItemCreateWindow;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=ItemCreateWindow1.js.map\n\n//# sourceURL=webpack:///./public/MiniWindow/ItemCreateWindow1.js?");

/***/ }),

/***/ "./public/MiniWindow/MenuWindow.js":
/*!*****************************************!*\
  !*** ./public/MiniWindow/MenuWindow.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/SaveData */ \"./public/Base/SaveData.js\"), __webpack_require__(/*! ../Scene/SceneManager */ \"./public/Scene/SceneManager.js\"), __webpack_require__(/*! ../Skill/Skill */ \"./public/Skill/Skill.js\"), __webpack_require__(/*! ../Skill/Skills */ \"./public/Skill/Skills.js\"), __webpack_require__(/*! ./Window */ \"./public/MiniWindow/Window.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, SaveData_1, SceneManager_1, Skill_1, Skills_1, Window_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.MenuWindow = void 0;\r\n    class MenuWindow extends Window_1.WindowData {\r\n        constructor(scene) {\r\n            super(scene);\r\n            const TitleBtn = document.createElement(\"button\");\r\n            const cover = document.createElement(\"div\");\r\n            const Menu = document.createElement(\"div\");\r\n            const CloseBtn = document.createElement(\"p\");\r\n            const ItemBtn = document.createElement(\"p\");\r\n            const LicenseBtn = document.createElement(\"p\");\r\n            const SkillBtn = document.createElement(\"p\");\r\n            const SaveBtn = document.createElement(\"p\");\r\n            const ManyLabel = document.createElement(\"p\");\r\n            const ItemList = document.createElement(\"select\");\r\n            const LicenseList = document.createElement(\"ul\");\r\n            const SkillSetting = document.createElement(\"div\");\r\n            const skillSetting1 = document.createElement(\"select\");\r\n            const skillSetting2 = document.createElement(\"select\");\r\n            const skillSettingS = document.createElement(\"select\");\r\n            const skillSettingOk = document.createElement(\"button\");\r\n            TitleBtn.className = \"TitleBackBtn\";\r\n            cover.className = \"cover\";\r\n            Menu.className = \"MenuGround\";\r\n            CloseBtn.className = \"MenuBtn\";\r\n            ItemBtn.className = \"MenuBtn\";\r\n            LicenseBtn.className = \"MenuBtn\";\r\n            SkillBtn.className = \"MenuBtn\";\r\n            SaveBtn.className = \"MenuBtn\";\r\n            ItemList.className = \"itemsDisplay\";\r\n            LicenseList.className = \"itemsDisplay\";\r\n            ManyLabel.className = \"manyLabel\";\r\n            SkillSetting.className = \"SkillSetting\";\r\n            skillSetting1.className = \"skillSettingBtn\";\r\n            skillSetting2.className = \"skillSettingBtn\";\r\n            skillSettingS.className = \"skillSettingBtn\";\r\n            skillSettingOk.className = \"skillSettingOkBtn\";\r\n            TitleBtn.textContent = \"タイトルへ\";\r\n            CloseBtn.textContent = \"閉じる\";\r\n            ItemBtn.textContent = \"アイテム一覧\";\r\n            LicenseBtn.textContent = \"権利一覧\";\r\n            SkillBtn.textContent = \"スキル設定\";\r\n            SaveBtn.textContent = \"セーブ\";\r\n            ManyLabel.textContent = `所持金:${SaveData_1.SaveData.Instance.many}`;\r\n            skillSettingOk.textContent = \"適応\";\r\n            ItemList.size = 10;\r\n            cover.style.zIndex = \"2\";\r\n            Menu.style.zIndex = \"3\";\r\n            TitleBtn.style.zIndex = \"4\";\r\n            CloseBtn.style.right = \"calc(10% + 10px)\";\r\n            ItemBtn.style.right = \"calc(20% + 20px)\";\r\n            LicenseBtn.style.right = \"calc(30% + 30px)\";\r\n            SkillBtn.style.right = \"calc(40% + 40px)\";\r\n            SaveBtn.style.right = \"calc(50% + 50px)\";\r\n            CloseBtn.style.background = \"rgb(0, 90, 255)\";\r\n            ItemBtn.style.background = \"rgb(3, 175, 122)\";\r\n            LicenseBtn.style.background = \"rgb(255, 75, 0)\";\r\n            SkillBtn.style.background = \"rgb(77, 196, 255)\";\r\n            SaveBtn.style.background = \"rgb(153, 0, 153)\";\r\n            ItemList.style.display = \"none\";\r\n            LicenseList.style.display = \"none\";\r\n            SkillSetting.style.display = \"none\";\r\n            ItemList.style.zIndex = \"5\";\r\n            LicenseList.style.zIndex = \"5\";\r\n            SkillSetting.style.zIndex = \"5\";\r\n            skillSetting1.style.top = \"calc(50% - 80px)\";\r\n            skillSetting2.style.top = \"calc(50%)\";\r\n            skillSettingS.style.top = \"calc(50% + 80px)\";\r\n            TitleBtn.addEventListener(\"touchend\", () => {\r\n                SaveData_1.SaveData.Instance.save();\r\n                SceneManager_1.SceneManager.Instance.RemoveScene(1);\r\n                this.ObjectRemove();\r\n            });\r\n            CloseBtn.addEventListener(\"touchend\", () => {\r\n                this.ObjectRemove();\r\n            });\r\n            ItemBtn.addEventListener(\"touchend\", () => {\r\n                ItemList.style.display = \"block\";\r\n                cover.style.zIndex = \"4\";\r\n            });\r\n            ItemList.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            ItemList.addEventListener(\"touchmove\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            LicenseBtn.addEventListener(\"touchend\", () => {\r\n                LicenseList.style.display = \"block\";\r\n                cover.style.zIndex = \"4\";\r\n            });\r\n            SkillBtn.addEventListener(\"touchend\", () => {\r\n                SkillSetting.style.display = \"block\";\r\n                cover.style.zIndex = \"4\";\r\n            });\r\n            SaveBtn.addEventListener(\"touchend\", () => {\r\n                SaveData_1.SaveData.Instance.save();\r\n                alert(\"セーブ完了\");\r\n            });\r\n            skillSetting1.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            skillSetting2.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            skillSettingS.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            for (let key in SaveData_1.SaveData.Instance.items) {\r\n                let option = document.createElement(\"option\");\r\n                option.textContent = `${key}:${SaveData_1.SaveData.Instance.items[key]}個`;\r\n                option.className = \"listItem\";\r\n                ItemList.appendChild(option);\r\n            }\r\n            LicenseList.addEventListener(\"touchend\", () => {\r\n                LicenseList.style.display = \"none\";\r\n            });\r\n            for (let i = 0; i < SaveData_1.SaveData.Instance.license.length; i++) {\r\n                let li = document.createElement(\"li\");\r\n                li.textContent = `加工機ライセンス:${SaveData_1.SaveData.Instance.license[i]}`;\r\n                li.className = \"listItem\";\r\n                LicenseList.appendChild(li);\r\n            }\r\n            for (let i = 0; i < SaveData_1.SaveData.Instance.pass.length; i++) {\r\n                let li = document.createElement(\"li\");\r\n                li.textContent = `土地権利書:${SaveData_1.SaveData.Instance.pass[i]}`;\r\n                li.className = \"listItem\";\r\n                LicenseList.appendChild(li);\r\n            }\r\n            const skillSettings = [skillSetting1, skillSetting2, skillSettingS];\r\n            for (let i = 0; i < skillSettings.length; i++) {\r\n                const skillSetting = skillSettings[i];\r\n                for (let s = 0; s < SaveData_1.SaveData.Instance.skills.length; s++) {\r\n                    let option = document.createElement(\"option\");\r\n                    option.value = SaveData_1.SaveData.Instance.skills[s];\r\n                    option.textContent = SaveData_1.SaveData.Instance.skills[s];\r\n                    skillSetting.appendChild(option);\r\n                }\r\n            }\r\n            skillSettingOk.addEventListener(\"touchend\", () => {\r\n                if (Skills_1.SkillList[skillSetting1.value] != null)\r\n                    scene.hero.skill1 = new Skill_1.Skill(Skills_1.SkillList[skillSetting1.value].skillType, Skills_1.SkillList[skillSetting1.value].name, Skills_1.SkillList[skillSetting1.value].maxPoint, Skills_1.SkillList[skillSetting1.value].Deleay, Skills_1.SkillList[skillSetting1.value].saveImage, Skills_1.SkillList[skillSetting1.value].activeFunction);\r\n                if (Skills_1.SkillList[skillSetting2.value] != null)\r\n                    scene.hero.skill2 = new Skill_1.Skill(Skills_1.SkillList[skillSetting2.value].skillType, Skills_1.SkillList[skillSetting2.value].name, Skills_1.SkillList[skillSetting2.value].maxPoint, Skills_1.SkillList[skillSetting2.value].Deleay, Skills_1.SkillList[skillSetting2.value].saveImage, Skills_1.SkillList[skillSetting2.value].activeFunction);\r\n                if (Skills_1.SkillList[skillSettingS.value] != null)\r\n                    scene.hero.superSkill = new Skill_1.Skill(Skills_1.SkillList[skillSettingS.value].skillType, Skills_1.SkillList[skillSettingS.value].name, Skills_1.SkillList[skillSettingS.value].maxPoint, Skills_1.SkillList[skillSettingS.value].Deleay, Skills_1.SkillList[skillSettingS.value].saveImage, Skills_1.SkillList[skillSettingS.value].activeFunction);\r\n            });\r\n            cover.addEventListener(\"touchend\", () => {\r\n                cover.style.zIndex = \"2\";\r\n                ItemList.style.display = \"none\";\r\n                LicenseList.style.display = \"none\";\r\n                SkillSetting.style.display = \"none\";\r\n            });\r\n            Menu.appendChild(CloseBtn);\r\n            Menu.appendChild(ItemBtn);\r\n            Menu.appendChild(LicenseBtn);\r\n            Menu.appendChild(SkillBtn);\r\n            Menu.appendChild(SaveBtn);\r\n            Menu.appendChild(ManyLabel);\r\n            SkillSetting.appendChild(skillSetting1);\r\n            SkillSetting.appendChild(skillSetting2);\r\n            SkillSetting.appendChild(skillSettingS);\r\n            SkillSetting.appendChild(skillSettingOk);\r\n            this.UIs.push(TitleBtn);\r\n            this.UIs.push(cover);\r\n            this.UIs.push(Menu);\r\n            this.UIs.push(ItemList);\r\n            this.UIs.push(LicenseList);\r\n            this.UIs.push(SkillSetting);\r\n        }\r\n    }\r\n    exports.MenuWindow = MenuWindow;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=MenuWindow.js.map\n\n//# sourceURL=webpack:///./public/MiniWindow/MenuWindow.js?");

/***/ }),

/***/ "./public/MiniWindow/MessageWindow.js":
/*!********************************************!*\
  !*** ./public/MiniWindow/MessageWindow.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Window */ \"./public/MiniWindow/Window.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Window_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.MessageWindow = void 0;\r\n    class MessageWindow extends Window_1.WindowData {\r\n        constructor(scene, messages) {\r\n            super(scene);\r\n            this.messages = messages;\r\n            const cover = document.createElement(\"div\");\r\n            const messageBox = document.createElement(\"p\");\r\n            cover.className = \"cover\";\r\n            messageBox.className = \"messageBox\";\r\n            cover.style.zIndex = \"2\";\r\n            messageBox.style.zIndex = \"3\";\r\n            messageBox.textContent = messages[0];\r\n            messageBox.addEventListener(\"touchend\", () => {\r\n                let msg = [];\r\n                for (let i = 0; i < this.messages.length; i++) {\r\n                    if (i != 0)\r\n                        msg.push(this.messages[i]);\r\n                }\r\n                this.messages = msg;\r\n                if (this.messages.length == 0) {\r\n                    this.ObjectRemove();\r\n                }\r\n                else {\r\n                    messageBox.textContent = this.messages[0];\r\n                }\r\n            });\r\n            this.UIs.push(cover);\r\n            this.UIs.push(messageBox);\r\n        }\r\n    }\r\n    exports.MessageWindow = MessageWindow;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=MessageWindow.js.map\n\n//# sourceURL=webpack:///./public/MiniWindow/MessageWindow.js?");

/***/ }),

/***/ "./public/MiniWindow/Window.js":
/*!*************************************!*\
  !*** ./public/MiniWindow/Window.js ***!
  \*************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.WindowData = void 0;\r\n    class WindowData {\r\n        constructor(scene) {\r\n            this.mapType = \"none\";\r\n            this.UIs = [];\r\n            this.scene = scene;\r\n        }\r\n        ObjectSet() {\r\n            var _a;\r\n            this.scene.windowMode = true;\r\n            for (let i = 0; i < this.UIs.length; i++) {\r\n                (_a = GlobalData_1.GlobalData.Instance.UIScreen) === null || _a === void 0 ? void 0 : _a.appendChild(this.UIs[i]);\r\n            }\r\n        }\r\n        ObjectRemove() {\r\n            var _a;\r\n            this.scene.windowMode = false;\r\n            for (let i = 0; i < this.UIs.length; i++) {\r\n                (_a = GlobalData_1.GlobalData.Instance.UIScreen) === null || _a === void 0 ? void 0 : _a.removeChild(this.UIs[i]);\r\n            }\r\n        }\r\n    }\r\n    exports.WindowData = WindowData;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Window.js.map\n\n//# sourceURL=webpack:///./public/MiniWindow/Window.js?");

/***/ }),

/***/ "./public/MiniWindow/pc.js":
/*!*********************************!*\
  !*** ./public/MiniWindow/pc.js ***!
  \*********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/SaveData */ \"./public/Base/SaveData.js\"), __webpack_require__(/*! ../Data/ItemPriceList */ \"./public/Data/ItemPriceList.js\"), __webpack_require__(/*! ../Data/LicensePriceList */ \"./public/Data/LicensePriceList.js\"), __webpack_require__(/*! ../Data/PassPriceList */ \"./public/Data/PassPriceList.js\"), __webpack_require__(/*! ../Data/SkillPriceList */ \"./public/Data/SkillPriceList.js\"), __webpack_require__(/*! ./Window */ \"./public/MiniWindow/Window.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, SaveData_1, ItemPriceList_1, LicensePriceList_1, PassPriceList_1, SkillPriceList_1, Window_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.PcWindow = void 0;\r\n    class PcWindow extends Window_1.WindowData {\r\n        constructor(scene) {\r\n            super(scene);\r\n            const pcImage = document.createElement(\"img\");\r\n            const pcWindow = document.createElement(\"div\");\r\n            const appIcon1 = document.createElement(\"img\");\r\n            const appIcon2 = document.createElement(\"img\");\r\n            const appIcon3 = document.createElement(\"img\");\r\n            const appIcon4 = document.createElement(\"img\");\r\n            const startMenu = document.createElement(\"div\");\r\n            const powerIcon = document.createElement(\"img\");\r\n            pcImage.className = \"pcImage\";\r\n            pcWindow.className = \"pcWindow\";\r\n            appIcon1.className = \"pcIcon\";\r\n            appIcon2.className = \"pcIcon\";\r\n            appIcon3.className = \"pcIcon\";\r\n            appIcon4.className = \"pcIcon\";\r\n            startMenu.className = \"startMenu\";\r\n            powerIcon.className = \"windowsIcon\";\r\n            pcImage.src = \"https://12345ff.github.io/Image/PcWindow.png\";\r\n            appIcon1.src = \"https://12345ff.github.io/Image/Icon/AppIcon1.png\";\r\n            appIcon2.src = \"https://12345ff.github.io/Image/Icon/AppIcon2.png\";\r\n            appIcon3.src = \"https://12345ff.github.io/Image/Icon/AppIcon4.png\";\r\n            appIcon4.src = \"https://12345ff.github.io/Image/Icon/AppIcon3.png\";\r\n            powerIcon.src = \"https://12345ff.github.io/Image/Icon/Power.png\";\r\n            appIcon1.style.top = \"20px\";\r\n            appIcon1.style.left = \"10px\";\r\n            appIcon2.style.top = \"20px\";\r\n            appIcon2.style.left = \"100px\";\r\n            appIcon3.style.top = \"120px\";\r\n            appIcon3.style.left = \"10px\";\r\n            appIcon4.style.top = \"120px\";\r\n            appIcon4.style.left = \"100px\";\r\n            pcImage.addEventListener(\"touchend\", () => {\r\n                this.ObjectRemove();\r\n            });\r\n            powerIcon.addEventListener(\"touchend\", () => {\r\n                this.ObjectRemove();\r\n            });\r\n            // 売るアプリ(appIcon1)\r\n            const appWindow1 = document.createElement(\"div\");\r\n            const appCloseBtn1 = document.createElement(\"button\");\r\n            const selectItem = document.createElement(\"select\");\r\n            const selectCount = document.createElement(\"select\");\r\n            const SellBtn = document.createElement(\"button\");\r\n            const PriceLabel = document.createElement(\"p\");\r\n            const myManyLabel = document.createElement(\"p\");\r\n            appWindow1.className = \"appWindow\";\r\n            appCloseBtn1.className = \"appClose\";\r\n            selectItem.className = \"appWindowSelect\";\r\n            selectCount.className = \"appWindowSelect\";\r\n            SellBtn.className = \"appWindowBtn\";\r\n            PriceLabel.className = \"PriceLabel\";\r\n            myManyLabel.className = \"PriceLabel\";\r\n            appCloseBtn1.textContent = \"X\";\r\n            SellBtn.textContent = \"Buy<-\";\r\n            PriceLabel.textContent = \"合計:--G\";\r\n            myManyLabel.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n            appWindow1.style.zIndex = \"7\";\r\n            appWindow1.style.display = \"none\";\r\n            selectItem.style.top = \"70px\";\r\n            selectItem.style.left = \"10px\";\r\n            selectCount.style.top = \"170px\";\r\n            selectCount.style.left = \"10px\";\r\n            SellBtn.style.top = \"170px\";\r\n            SellBtn.style.right = \"10px\";\r\n            PriceLabel.style.top = \"70px\";\r\n            PriceLabel.style.right = \"10px\";\r\n            myManyLabel.style.top = \"120px\";\r\n            myManyLabel.style.right = \"10px\";\r\n            selectItem.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            selectCount.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            appCloseBtn1.addEventListener(\"touchend\", () => {\r\n                appWindow1.style.display = \"none\";\r\n            });\r\n            //アイテムを選んだら個数を用意\r\n            selectItem.addEventListener(\"input\", () => {\r\n                selectCount.innerHTML = \"\";\r\n                let flag = false;\r\n                for (let key in SaveData_1.SaveData.Instance.items) {\r\n                    if (key == selectItem.value) {\r\n                        flag = true;\r\n                    }\r\n                }\r\n                if (flag) {\r\n                    let count = SaveData_1.SaveData.Instance.items[selectItem.value];\r\n                    for (let i = 1; i <= count; i++) {\r\n                        let option = document.createElement(\"option\");\r\n                        option.value = i.toString();\r\n                        option.textContent = i.toString();\r\n                        selectCount.appendChild(option);\r\n                    }\r\n                    if (selectCount.value && selectItem.value) {\r\n                        if (ItemPriceList_1.itemPriceList[selectItem.value])\r\n                            PriceLabel.textContent = `合計:${ItemPriceList_1.itemPriceList[selectItem.value] * parseInt(selectCount.value)}G`;\r\n                        else\r\n                            PriceLabel.textContent = `合計:${10 * parseInt(selectCount.value)}G`;\r\n                    }\r\n                    else {\r\n                        PriceLabel.textContent = \"合計:--G\";\r\n                    }\r\n                }\r\n            });\r\n            //個数を選択したら値段を表示\r\n            selectCount.addEventListener(\"input\", () => {\r\n                if ((selectCount.value != null || selectCount.value != \"\" || selectCount.value != \" \" || selectCount.value != \"　\") &&\r\n                    selectItem.value != null) {\r\n                    if (ItemPriceList_1.itemPriceList[selectItem.value] != null || ItemPriceList_1.itemPriceList[selectItem.value] != undefined)\r\n                        PriceLabel.textContent = `合計:${ItemPriceList_1.itemPriceList[selectItem.value] * parseInt(selectCount.value)}G`;\r\n                    else\r\n                        PriceLabel.textContent = `合計:${10 * parseInt(selectCount.value)}G`;\r\n                }\r\n                else {\r\n                    PriceLabel.textContent = \"合計:--G\";\r\n                }\r\n            });\r\n            //売るボタン\r\n            SellBtn.addEventListener(\"touchend\", () => {\r\n                if (selectItem.value && selectCount.value) {\r\n                    let count = parseInt(selectCount.value);\r\n                    let item = selectItem.value;\r\n                    let price;\r\n                    if (ItemPriceList_1.itemPriceList[item])\r\n                        price = ItemPriceList_1.itemPriceList[item] * count;\r\n                    else\r\n                        price = 10 * count;\r\n                    if (count && item && price) {\r\n                        SaveData_1.SaveData.Instance.items[item] -= count;\r\n                        SaveData_1.SaveData.Instance.many += price;\r\n                    }\r\n                    selectItem.innerHTML = \"\";\r\n                    for (let key in SaveData_1.SaveData.Instance.items) {\r\n                        let option = document.createElement(\"option\");\r\n                        option.value = key;\r\n                        option.textContent = `${key}:${SaveData_1.SaveData.Instance.items[key]}個`;\r\n                        selectItem.appendChild(option);\r\n                    }\r\n                    selectCount.innerHTML = \"\";\r\n                    if (selectItem.value) {\r\n                        for (let i = 1; i <= SaveData_1.SaveData.Instance.items[selectItem.value]; i++) {\r\n                            let option = document.createElement(\"option\");\r\n                            option.value = i.toString();\r\n                            option.textContent = i.toString();\r\n                            selectCount.appendChild(option);\r\n                        }\r\n                    }\r\n                    if (selectCount.value && selectItem.value) {\r\n                        if (ItemPriceList_1.itemPriceList[selectItem.value])\r\n                            PriceLabel.textContent = `合計:${ItemPriceList_1.itemPriceList[selectItem.value] * parseInt(selectCount.value)}G`;\r\n                        else\r\n                            PriceLabel.textContent = `合計:${10 * parseInt(selectCount.value)}G`;\r\n                    }\r\n                    else {\r\n                        PriceLabel.textContent = \"合計:--G\";\r\n                    }\r\n                    myManyLabel.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n                }\r\n            });\r\n            appWindow1.appendChild(selectItem);\r\n            appWindow1.appendChild(selectCount);\r\n            appWindow1.appendChild(SellBtn);\r\n            appWindow1.appendChild(PriceLabel);\r\n            appWindow1.appendChild(appCloseBtn1);\r\n            appWindow1.appendChild(myManyLabel);\r\n            //スキルを買うアプリ(appIcon2)\r\n            const appWindow2 = document.createElement(\"div\");\r\n            const appCloseBtn2 = document.createElement(\"button\");\r\n            const SkillSelect = document.createElement(\"select\");\r\n            const skillPriceLabel = document.createElement(\"p\");\r\n            const myManyLabel2 = document.createElement(\"p\");\r\n            const BuyBtn1 = document.createElement(\"button\");\r\n            appWindow2.className = \"appWindow\";\r\n            appCloseBtn2.className = \"appClose\";\r\n            SkillSelect.className = \"appWindowSelect\";\r\n            skillPriceLabel.className = \"PriceLabel\";\r\n            myManyLabel2.className = \"PriceLabel\";\r\n            BuyBtn1.className = \"appWindowBtn\";\r\n            appCloseBtn2.textContent = \"X\";\r\n            BuyBtn1.textContent = \"購入\";\r\n            myManyLabel2.textContent = `所持金${SaveData_1.SaveData.Instance.many}G`;\r\n            skillPriceLabel.textContent = \"値段--G\";\r\n            appWindow2.style.zIndex = \"7\";\r\n            appWindow2.style.display = \"none\";\r\n            SkillSelect.style.top = \"70px\";\r\n            SkillSelect.style.left = \"20px\";\r\n            skillPriceLabel.style.top = \"170px\";\r\n            skillPriceLabel.style.left = \"20px\";\r\n            myManyLabel2.style.top = \"70px\";\r\n            myManyLabel2.style.right = \"20px\";\r\n            BuyBtn1.style.top = \"170px\";\r\n            BuyBtn1.style.right = \"20px\";\r\n            SkillSelect.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            appCloseBtn2.addEventListener(\"touchend\", () => {\r\n                appWindow2.style.display = \"none\";\r\n            });\r\n            SkillSelect.addEventListener(\"input\", () => {\r\n                if (SkillPriceList_1.SkillPriceList[SkillSelect.value]) {\r\n                    skillPriceLabel.textContent = `値段:${SkillPriceList_1.SkillPriceList[SkillSelect.value]}G`;\r\n                }\r\n                else {\r\n                    skillPriceLabel.textContent = \"値段:errorG\";\r\n                }\r\n            });\r\n            BuyBtn1.addEventListener(\"touchend\", () => {\r\n                if (SkillPriceList_1.SkillPriceList[SkillSelect.value]) {\r\n                    if (SkillPriceList_1.SkillPriceList[SkillSelect.value] <= SaveData_1.SaveData.Instance.many) {\r\n                        SaveData_1.SaveData.Instance.many -= SkillPriceList_1.SkillPriceList[SkillSelect.value];\r\n                        SaveData_1.SaveData.Instance.skills.push(SkillSelect.value);\r\n                        SkillSelect.innerHTML = \"\";\r\n                        for (let key in SkillPriceList_1.SkillPriceList) {\r\n                            if (!SaveData_1.SaveData.Instance.skills.includes(key)) {\r\n                                let option = document.createElement(\"option\");\r\n                                option.value = key;\r\n                                option.textContent = key;\r\n                                SkillSelect.appendChild(option);\r\n                            }\r\n                        }\r\n                        if (SkillSelect.value)\r\n                            skillPriceLabel.textContent = `値段:${SkillPriceList_1.SkillPriceList[SkillSelect.value]}G`;\r\n                        else\r\n                            skillPriceLabel.textContent = \"値段--G\";\r\n                        myManyLabel2.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n                    }\r\n                }\r\n            });\r\n            appWindow2.appendChild(appCloseBtn2);\r\n            appWindow2.appendChild(SkillSelect);\r\n            appWindow2.appendChild(skillPriceLabel);\r\n            appWindow2.appendChild(myManyLabel2);\r\n            appWindow2.appendChild(BuyBtn1);\r\n            //ライセンスを買う(appIcon3)\r\n            const appWindow3 = document.createElement(\"div\");\r\n            const appCloseBtn3 = document.createElement(\"button\");\r\n            const LicenseSelect = document.createElement(\"select\");\r\n            const LicensePriceLabel = document.createElement(\"p\");\r\n            const myManyLabel3 = document.createElement(\"p\");\r\n            const BuyBtn2 = document.createElement(\"button\");\r\n            appWindow3.className = \"appWindow\";\r\n            appCloseBtn3.className = \"appClose\";\r\n            LicenseSelect.className = \"appWindowSelect\";\r\n            LicensePriceLabel.className = \"PriceLabel\";\r\n            myManyLabel3.className = \"PriceLabel\";\r\n            BuyBtn2.className = \"appWindowBtn\";\r\n            appWindow3.className = \"appWindow\";\r\n            appCloseBtn3.className = \"appClose\";\r\n            LicenseSelect.style.top = \"70px\";\r\n            LicenseSelect.style.left = \"20px\";\r\n            LicensePriceLabel.style.top = \"170px\";\r\n            LicensePriceLabel.style.left = \"20px\";\r\n            myManyLabel3.style.top = \"70px\";\r\n            myManyLabel3.style.right = \"20px\";\r\n            BuyBtn2.style.top = \"170px\";\r\n            BuyBtn2.style.right = \"20px\";\r\n            appWindow3.style.zIndex = \"7\";\r\n            appWindow3.style.display = \"none\";\r\n            LicenseSelect.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            appCloseBtn3.addEventListener(\"touchend\", () => {\r\n                appWindow3.style.display = \"none\";\r\n            });\r\n            LicenseSelect.addEventListener(\"input\", () => {\r\n                if (LicensePriceList_1.LicensePriceList[LicenseSelect.value]) {\r\n                    LicensePriceLabel.textContent = `値段:${LicensePriceList_1.LicensePriceList[LicenseSelect.value]}G`;\r\n                }\r\n                else {\r\n                    LicensePriceLabel.textContent = \"値段:errorG\";\r\n                }\r\n            });\r\n            BuyBtn2.addEventListener(\"touchend\", () => {\r\n                if (LicensePriceList_1.LicensePriceList[LicenseSelect.value]) {\r\n                    if (LicensePriceList_1.LicensePriceList[LicenseSelect.value] <= SaveData_1.SaveData.Instance.many) {\r\n                        SaveData_1.SaveData.Instance.many -= LicensePriceList_1.LicensePriceList[LicenseSelect.value];\r\n                        SaveData_1.SaveData.Instance.license.push(LicenseSelect.value);\r\n                        LicenseSelect.innerHTML = \"\";\r\n                        for (let key in LicensePriceList_1.LicensePriceList) {\r\n                            if (!SaveData_1.SaveData.Instance.license.includes(key)) {\r\n                                let option = document.createElement(\"option\");\r\n                                option.value = key;\r\n                                option.textContent = key;\r\n                                LicenseSelect.appendChild(option);\r\n                            }\r\n                        }\r\n                        if (LicenseSelect.value)\r\n                            LicensePriceLabel.textContent = `値段:${LicensePriceList_1.LicensePriceList[LicenseSelect.value]}G`;\r\n                        else\r\n                            LicensePriceLabel.textContent = \"値段:--G\";\r\n                    }\r\n                    myManyLabel3.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n                }\r\n            });\r\n            appCloseBtn3.textContent = \"X\";\r\n            myManyLabel3.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n            LicensePriceLabel.textContent = `値段:--G`;\r\n            BuyBtn2.textContent = \"購入\";\r\n            appWindow3.appendChild(appCloseBtn3);\r\n            appWindow3.appendChild(LicenseSelect);\r\n            appWindow3.appendChild(LicensePriceLabel);\r\n            appWindow3.appendChild(myManyLabel3);\r\n            appWindow3.appendChild(BuyBtn2);\r\n            //土地を買う(appIcon4)\r\n            const appWindow4 = document.createElement(\"div\");\r\n            const appCloseBtn4 = document.createElement(\"button\");\r\n            const PassSelect = document.createElement(\"select\");\r\n            const PassPriceLabel = document.createElement(\"p\");\r\n            const myManyLabel4 = document.createElement(\"p\");\r\n            const BuyBtn3 = document.createElement(\"button\");\r\n            appWindow4.className = \"appWindow\";\r\n            appCloseBtn4.className = \"appClose\";\r\n            PassSelect.className = \"appWindowSelect\";\r\n            PassPriceLabel.className = \"PriceLabel\";\r\n            myManyLabel4.className = \"PriceLabel\";\r\n            BuyBtn3.className = \"appWindowBtn\";\r\n            appCloseBtn4.textContent = \"X\";\r\n            myManyLabel4.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n            PassPriceLabel.textContent = `--G`;\r\n            BuyBtn3.textContent = \"購入\";\r\n            appWindow4.style.zIndex = \"7\";\r\n            appWindow4.style.display = \"none\";\r\n            PassSelect.style.top = \"70px\";\r\n            PassSelect.style.left = \"20px\";\r\n            PassPriceLabel.style.top = \"170px\";\r\n            PassPriceLabel.style.left = \"20px\";\r\n            myManyLabel4.style.top = \"70px\";\r\n            myManyLabel4.style.right = \"20px\";\r\n            BuyBtn3.style.top = \"170px\";\r\n            BuyBtn3.style.right = \"20px\";\r\n            PassSelect.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            appCloseBtn4.addEventListener(\"touchend\", () => {\r\n                appWindow4.style.display = \"none\";\r\n            });\r\n            PassSelect.addEventListener(\"input\", () => {\r\n                if (PassPriceList_1.PassPriceList[PassSelect.value]) {\r\n                    PassPriceLabel.textContent = `値段:${PassPriceList_1.PassPriceList[PassSelect.value]}G`;\r\n                }\r\n                else {\r\n                    PassPriceLabel.textContent = \"値段:errorG\";\r\n                }\r\n            });\r\n            BuyBtn3.addEventListener(\"touchend\", () => {\r\n                if (PassPriceList_1.PassPriceList[PassSelect.value]) {\r\n                    if (PassPriceList_1.PassPriceList[PassSelect.value] <= SaveData_1.SaveData.Instance.many) {\r\n                        SaveData_1.SaveData.Instance.many -= PassPriceList_1.PassPriceList[PassSelect.value];\r\n                        SaveData_1.SaveData.Instance.pass.push(PassSelect.value);\r\n                        PassSelect.innerHTML = \"\";\r\n                        for (let key in PassPriceList_1.PassPriceList) {\r\n                            if (!SaveData_1.SaveData.Instance.pass.includes(key)) {\r\n                                let option = document.createElement(\"option\");\r\n                                option.value = key;\r\n                                option.textContent = key;\r\n                                PassSelect.appendChild(option);\r\n                            }\r\n                        }\r\n                        if (PassSelect.value)\r\n                            PassPriceLabel.textContent = `値段:${PassPriceList_1.PassPriceList[PassSelect.value]}G`;\r\n                        else\r\n                            PassPriceLabel.textContent = \"値段:--G\";\r\n                    }\r\n                    myManyLabel4.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n                }\r\n            });\r\n            appWindow4.appendChild(appCloseBtn4);\r\n            appWindow4.appendChild(PassSelect);\r\n            appWindow4.appendChild(PassPriceLabel);\r\n            appWindow4.appendChild(myManyLabel4);\r\n            appWindow4.appendChild(BuyBtn3);\r\n            // 本\r\n            appIcon1.addEventListener(\"touchend\", () => {\r\n                appWindow1.style.display = \"block\";\r\n                //アイテムをセット\r\n                selectItem.innerHTML = \"\";\r\n                for (let key in SaveData_1.SaveData.Instance.items) {\r\n                    let option = document.createElement(\"option\");\r\n                    option.value = key;\r\n                    option.textContent = `${key}:${SaveData_1.SaveData.Instance.items[key]}個`;\r\n                    ;\r\n                    selectItem.appendChild(option);\r\n                }\r\n                if (selectItem.value) {\r\n                    for (let i = 1; i <= SaveData_1.SaveData.Instance.items[selectItem.value]; i++) {\r\n                        const option = document.createElement(\"option\");\r\n                        option.value = i.toString();\r\n                        option.textContent = i.toString();\r\n                        selectCount.appendChild(option);\r\n                    }\r\n                }\r\n                if (selectItem.value)\r\n                    PriceLabel.textContent = `値段:${ItemPriceList_1.itemPriceList[selectItem.value]}G`;\r\n                myManyLabel.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n            });\r\n            appIcon2.addEventListener(\"touchend\", () => {\r\n                appWindow2.style.display = \"block\";\r\n                SkillSelect.innerHTML = \"\";\r\n                for (let key in SkillPriceList_1.SkillPriceList) {\r\n                    if (!SaveData_1.SaveData.Instance.skills.includes(key)) {\r\n                        let option = document.createElement(\"option\");\r\n                        option.value = key;\r\n                        option.textContent = key;\r\n                        SkillSelect.appendChild(option);\r\n                    }\r\n                }\r\n                if (SkillPriceList_1.SkillPriceList[SkillSelect.value])\r\n                    skillPriceLabel.textContent = `値段:${SkillPriceList_1.SkillPriceList[SkillSelect.value]}G`;\r\n                else\r\n                    skillPriceLabel.textContent = \"値段:--G\";\r\n                myManyLabel2.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n            });\r\n            appIcon3.addEventListener(\"touchend\", () => {\r\n                appWindow3.style.display = \"block\";\r\n                LicenseSelect.innerHTML = \"\";\r\n                for (let key in LicensePriceList_1.LicensePriceList) {\r\n                    if (!SaveData_1.SaveData.Instance.license.includes(key)) {\r\n                        let option = document.createElement(\"option\");\r\n                        option.value = key;\r\n                        option.textContent = key;\r\n                        LicenseSelect.appendChild(option);\r\n                    }\r\n                }\r\n                if (LicensePriceList_1.LicensePriceList[LicenseSelect.value])\r\n                    LicensePriceLabel.textContent = `値段:${LicensePriceList_1.LicensePriceList[LicenseSelect.value]}G`;\r\n                else\r\n                    LicensePriceLabel.textContent = `値段:--G`;\r\n                myManyLabel3.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n            });\r\n            appIcon4.addEventListener(\"touchend\", () => {\r\n                appWindow4.style.display = \"block\";\r\n                PassSelect.innerHTML = \"\";\r\n                for (let key in PassPriceList_1.PassPriceList) {\r\n                    if (!SaveData_1.SaveData.Instance.pass.includes(key)) {\r\n                        let option = document.createElement(\"option\");\r\n                        option.value = key;\r\n                        option.textContent = key;\r\n                        PassSelect.appendChild(option);\r\n                    }\r\n                }\r\n                if (PassPriceList_1.PassPriceList[PassSelect.value])\r\n                    PassPriceLabel.textContent = `値段:${PassPriceList_1.PassPriceList[PassSelect.value]}G`;\r\n                else\r\n                    PassPriceLabel.textContent = `値段:--G`;\r\n                myManyLabel4.textContent = `所持金:${SaveData_1.SaveData.Instance.many}G`;\r\n            });\r\n            pcWindow.appendChild(appWindow1);\r\n            pcWindow.appendChild(appWindow2);\r\n            pcWindow.appendChild(appWindow3);\r\n            pcWindow.appendChild(appWindow4);\r\n            pcWindow.appendChild(appIcon1);\r\n            pcWindow.appendChild(appIcon2);\r\n            pcWindow.appendChild(appIcon3);\r\n            pcWindow.appendChild(appIcon4);\r\n            pcWindow.appendChild(startMenu);\r\n            startMenu.appendChild(powerIcon);\r\n            this.UIs.push(pcImage);\r\n            this.UIs.push(pcWindow);\r\n        }\r\n    }\r\n    exports.PcWindow = PcWindow;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=pc.js.map\n\n//# sourceURL=webpack:///./public/MiniWindow/pc.js?");

/***/ }),

/***/ "./public/Object/ActiveObject.js":
/*!***************************************!*\
  !*** ./public/Object/ActiveObject.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Object */ \"./public/Object/Object.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Object_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.ActiveObject = void 0;\r\n    class ActiveObject extends Object_1.GameObject {\r\n        constructor(position, size, image, activeEvent, actible, hoverOnEvent, passable) {\r\n            super();\r\n            this.Type = \"ActiveObject\";\r\n            this.position = position;\r\n            this.size = size;\r\n            this.actible = actible;\r\n            this.passable = passable;\r\n            this.ActiveEvent = activeEvent;\r\n            this.HoverOnEvent = hoverOnEvent;\r\n            let canvas = document.createElement(\"canvas\");\r\n            let ctx = canvas.getContext(\"2d\");\r\n            canvas.width = this.size.width;\r\n            canvas.height = this.size.height;\r\n            if (image.complete) {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                this.DrawImage = canvas;\r\n            }\r\n            else {\r\n                image.addEventListener(\"load\", () => {\r\n                    ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                    this.DrawImage = canvas;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    exports.ActiveObject = ActiveObject;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=ActiveObject.js.map\n\n//# sourceURL=webpack:///./public/Object/ActiveObject.js?");

/***/ }),

/***/ "./public/Object/Character.js":
/*!************************************!*\
  !*** ./public/Object/Character.js ***!
  \************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\"), __webpack_require__(/*! ./Object */ \"./public/Object/Object.js\"), __webpack_require__(/*! ../Skill/Skill */ \"./public/Skill/Skill.js\"), __webpack_require__(/*! ../Skill/Skills */ \"./public/Skill/Skills.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, GlobalData_1, Object_1, Skill_1, Skills_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.GameCharacter = void 0;\r\n    class GameCharacter extends Object_1.GameObject {\r\n        constructor(hp, atk, def, speed, atkRenge, atkDeley, skill1, skill2, superSkill) {\r\n            super();\r\n            this.Type = \"Character\";\r\n            this.condition = {\r\n                \"やけど\": new condition(),\r\n                \"麻痺\": new condition(),\r\n            };\r\n            this.maxHP = hp;\r\n            this.hp = hp;\r\n            this.atk = atk;\r\n            this.def = def;\r\n            this.speed = speed;\r\n            this.friction = 0.8;\r\n            this.acceleration = 0.1;\r\n            this.rotate = 1;\r\n            this.direction = 1;\r\n            this.delay = 0;\r\n            this.atkRenge = atkRenge;\r\n            this.atkDelay = atkDeley;\r\n            this.nowSpeed = new Position_1.Position(0, 0);\r\n            this.OldPosition = this.position;\r\n            this.rotateGoal = 0;\r\n            this.rotateDirection = 0;\r\n            this.targetPos = null;\r\n            this.skill1 = new Skill_1.Skill(Skills_1.SkillList[skill1].skillType, Skills_1.SkillList[skill1].name, Skills_1.SkillList[skill1].maxPoint, Skills_1.SkillList[skill1].Deleay, Skills_1.SkillList[skill1].saveImage, Skills_1.SkillList[skill1].activeFunction);\r\n            this.skill2 = new Skill_1.Skill(Skills_1.SkillList[skill2].skillType, Skills_1.SkillList[skill2].name, Skills_1.SkillList[skill2].maxPoint, Skills_1.SkillList[skill2].Deleay, Skills_1.SkillList[skill2].saveImage, Skills_1.SkillList[skill2].activeFunction);\r\n            this.superSkill = new Skill_1.Skill(Skills_1.SkillList[superSkill].skillType, Skills_1.SkillList[superSkill].name, Skills_1.SkillList[superSkill].maxPoint, Skills_1.SkillList[superSkill].Deleay, Skills_1.SkillList[superSkill].saveImage, Skills_1.SkillList[superSkill].activeFunction);\r\n        }\r\n        update(scene) {\r\n            this.OldPosition = new Position_1.Position(this.position.x, this.position.y);\r\n            //視点のターゲット追尾\r\n            if (this.rotate != this.rotateGoal) {\r\n                this.rotate += this.rotateDirection * 10;\r\n                if (this.rotateGoal + 10 >= this.rotate && this.rotateGoal - 10 <= this.rotate) {\r\n                    this.rotate = this.rotateGoal;\r\n                }\r\n                this.rotate %= 360;\r\n                if (this.rotate < 0) {\r\n                    this.rotate = 360 - Math.abs(this.rotate);\r\n                }\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            //基本描画\r\n            super.draw(ctx);\r\n            //hpバー\r\n            let BarPos = new Position_1.Position(this.position.x, this.position.y - this.size.height / 2 - 30);\r\n            if (BarPos.y < 0)\r\n                BarPos.y = 0;\r\n            let BarWidth = Math.floor(this.size.width * 0.8);\r\n            ctx.strokeStyle = \"green\";\r\n            ctx.strokeRect(BarPos.x - BarWidth / 2, BarPos.y, BarWidth, 20);\r\n            ctx.fillStyle = \"green\";\r\n            let percent = this.hp / this.maxHP;\r\n            if (percent < 0)\r\n                percent = 0;\r\n            let BarWidth2 = BarWidth * percent - 4;\r\n            if (BarWidth2 < 1)\r\n                BarWidth2 = 1;\r\n            ctx.fillRect(BarPos.x - BarWidth / 2 + 2, BarPos.y + 2, BarWidth2, 16);\r\n        }\r\n        fieldCollision() {\r\n            //フィールドを超えないようにする\r\n            if (this.position.x - this.size.width / 2 < 0) {\r\n                this.position.x = this.size.width / 2;\r\n            }\r\n            else if (this.position.x + this.size.width / 2 > GlobalData_1.GlobalData.Instance.ScreenSize.width) {\r\n                this.position.x = GlobalData_1.GlobalData.Instance.ScreenSize.width - this.size.width / 2;\r\n            }\r\n            if (this.position.y - this.size.height / 2 < 0) {\r\n                this.position.y = this.size.height / 2;\r\n            }\r\n            else if (this.position.y + this.size.height / 2 > GlobalData_1.GlobalData.Instance.ScreenSize.height) {\r\n                this.position.y = GlobalData_1.GlobalData.Instance.ScreenSize.height - this.size.height / 2;\r\n            }\r\n        }\r\n        damage(damage) {\r\n            //ダメージを食らった時の処理\r\n            this.hp -= damage;\r\n            if (this.hp < 0) {\r\n                this.hp = 0;\r\n            }\r\n        }\r\n    }\r\n    exports.GameCharacter = GameCharacter;\r\n    class condition {\r\n        constructor() {\r\n            this.on = false;\r\n            this.count = 0;\r\n            this.deley = [0, 0];\r\n        }\r\n        countdown() {\r\n            if (this.on) {\r\n                if (this.count > 0)\r\n                    this.count--;\r\n                else if (this.count == 0) {\r\n                    this.on = false;\r\n                    this.deley[0] = 0;\r\n                    this.deley[1] = 0;\r\n                }\r\n                if (this.deley[0] > 0) {\r\n                    this.deley[0]--;\r\n                    return false;\r\n                }\r\n                else {\r\n                    this.deley[0] = this.deley[1];\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        ON(count, deley) {\r\n            this.on = true;\r\n            this.count = count;\r\n            this.deley[1] = deley;\r\n        }\r\n    }\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Character.js.map\n\n//# sourceURL=webpack:///./public/Object/Character.js?");

/***/ }),

/***/ "./public/Object/Enemy.js":
/*!********************************!*\
  !*** ./public/Object/Enemy.js ***!
  \********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Animation */ \"./public/Base/Animation.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\"), __webpack_require__(/*! ./Character */ \"./public/Object/Character.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, Animation_1, GlobalData_1, Character_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Enemy = void 0;\r\n    class Enemy extends Character_1.GameCharacter {\r\n        constructor(name, hp, atk, def, speed, atkRenge, atkDeley, enemyPattern, skill1, skill2, skillSuper, imagename, clipStand, clipWork, clipAttack) {\r\n            super(hp, atk, def, speed, atkRenge, atkDeley, skill1, skill2, skillSuper);\r\n            this.Type = \"enemy\";\r\n            this.AtkAnimation = null;\r\n            this.interval = [15, 15];\r\n            this.OldRotate = 0;\r\n            this.name = name;\r\n            this.Status = \"Stand\";\r\n            this.size = new Size_1.Size(100, 100);\r\n            this.delete = false;\r\n            this.SaveAtkAnimePos = new Position_1.Position(0, 0);\r\n            this.enemyPattern = enemyPattern;\r\n            this.StandAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(100, 100));\r\n            this.WorkAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(100, 100));\r\n            this.AttackAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(100, 100));\r\n            let Image1 = document.createElement(\"img\");\r\n            Image1.src = `https://12345ff.github.io/Image/Chara/${imagename}`;\r\n            Image1.addEventListener(\"load\", () => {\r\n                this.StandAnimation.SetUp2(Image1, clipStand);\r\n                this.WorkAnimation.SetUp2(Image1, clipWork);\r\n                this.AttackAnimation.SetUp2(Image1, clipAttack);\r\n            });\r\n        }\r\n        update(scene) {\r\n            this.OldPosition = new Position_1.Position(this.position.x, this.position.y);\r\n            this.OldRotate = this.rotate;\r\n            this.enemyPattern(this, scene);\r\n            super.fieldCollision();\r\n            switch (this.Status) {\r\n                case \"Stand\":\r\n                    this.StandAnimation.Update();\r\n                    this.DrawImage = this.StandAnimation.image;\r\n                    this.WorkAnimation.Reset();\r\n                    this.AttackAnimation.Reset();\r\n                    break;\r\n                case \"Work\":\r\n                    this.WorkAnimation.Update();\r\n                    this.DrawImage = this.WorkAnimation.image;\r\n                    this.StandAnimation.Reset();\r\n                    this.AttackAnimation.Reset();\r\n                    break;\r\n                case \"Attack\":\r\n                    this.AttackAnimation.Update();\r\n                    this.DrawImage = this.AttackAnimation.image;\r\n                    this.WorkAnimation.Reset();\r\n                    this.StandAnimation.Reset();\r\n                    break;\r\n            }\r\n            if (this.AtkAnimation != null) {\r\n                this.AtkAnimation.Update();\r\n            }\r\n            this.position.x += this.nowSpeed.x;\r\n            this.position.y += this.nowSpeed.y;\r\n        }\r\n        damage(damage) {\r\n            super.damage(damage);\r\n            if (this.hp <= 0) {\r\n                this.hp = 0;\r\n                this.delete = true;\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"攻撃範囲表示\"]) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.position.x, this.position.y);\r\n                ctx.arc(this.position.x, this.position.y, this.atkRenge, 0, Math.PI * 2);\r\n                ctx.fillStyle = \"rgba(255,0,0,0.2)\";\r\n                ctx.fill();\r\n                ctx.closePath();\r\n            }\r\n            super.draw(ctx);\r\n            if (this.AtkAnimation != null) {\r\n                ctx.drawImage(this.AtkAnimation.image, this.position.x - this.AtkAnimation.size.width / 2, this.position.y - this.AtkAnimation.size.height / 2);\r\n            }\r\n            if (this.condition[\"やけど\"].on) {\r\n                ctx.fillText(\"やけど\", this.position.x, this.position.y);\r\n            }\r\n        }\r\n    }\r\n    exports.Enemy = Enemy;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Enemy.js.map\n\n//# sourceURL=webpack:///./public/Object/Enemy.js?");

/***/ }),

/***/ "./public/Object/Hero.js":
/*!*******************************!*\
  !*** ./public/Object/Hero.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ../Base/Animation */ \"./public/Base/Animation.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\"), __webpack_require__(/*! ./Character */ \"./public/Object/Character.js\"), __webpack_require__(/*! ../Base/SaveData */ \"./public/Base/SaveData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, Rectangle_1, Animation_1, GlobalData_1, Character_1, SaveData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Hero = void 0;\r\n    class Hero extends Character_1.GameCharacter {\r\n        constructor() {\r\n            super(3000, 10, 20, 5, 150, 30, \"none\", \"none\", \"none\");\r\n            this.Type = \"hero\";\r\n            this.target = null;\r\n            this.AtkAnimation = null;\r\n            this.PrivateCanvas = document.createElement(\"canvas\");\r\n            this.PrivateCanvas.width = GlobalData_1.GlobalData.Instance.ScreenSize.width;\r\n            this.PrivateCanvas.height = GlobalData_1.GlobalData.Instance.ScreenSize.height;\r\n            this.PrivateCtx = this.PrivateCanvas.getContext(\"2d\");\r\n            this.Status = \"Stand\";\r\n            this.WorkAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(50, 50));\r\n            this.StandAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(50, 50));\r\n            this.AttackAnimation = new Animation_1.GameAnimation(0, new Size_1.Size(50, 50));\r\n            this.OldRotate = 270;\r\n            this.SaveEyeIconPos = new Position_1.Position(0, 0);\r\n            let Image1 = document.createElement(\"img\");\r\n            Image1.src = \"https://12345ff.github.io/Image/Chara/chara1.png\";\r\n            Image1.addEventListener(\"load\", () => {\r\n                this.StandAnimation.SetUp2(Image1, [new Rectangle_1.Rectangle(0, 0, 64, 64), new Rectangle_1.Rectangle(64, 0, 64, 64), new Rectangle_1.Rectangle(128, 0, 64, 64),]);\r\n                this.WorkAnimation.SetUp2(Image1, [new Rectangle_1.Rectangle(192, 64, 64, 64), new Rectangle_1.Rectangle(256, 64, 64, 64)]);\r\n                this.AttackAnimation.SetUp2(Image1, [new Rectangle_1.Rectangle(384, 0, 64, 64), new Rectangle_1.Rectangle(448, 0, 64, 64), new Rectangle_1.Rectangle(512, 0, 64, 64)]);\r\n            });\r\n            let eyeimage = document.createElement(\"img\");\r\n            this.EyeIcon_Rotate = document.createElement(\"canvas\");\r\n            eyeimage.src = \"https://12345ff.github.io/Image/Eye.png\";\r\n            eyeimage.onload = () => {\r\n                let canvas = document.createElement(\"canvas\");\r\n                canvas.width = 25;\r\n                canvas.height = 25;\r\n                let ctx = canvas.getContext(\"2d\");\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(eyeimage, 0, 0, 25, 25);\r\n                this.EyeIcon_Rotate = canvas;\r\n            };\r\n        }\r\n        update(scene) {\r\n            var _a, _b, _c;\r\n            this.OldRotate = this.rotate;\r\n            if (this.delay > 0) {\r\n                this.delay--;\r\n            }\r\n            /* 状態異常 */\r\n            if (this.condition[\"やけど\"].countdown()) {\r\n                this.damage(5);\r\n            }\r\n            if (this.condition[\"麻痺\"].countdown()) {\r\n                this.nowSpeed.x = 0;\r\n                this.nowSpeed.y = 0;\r\n            }\r\n            /* ステータスごとの処理 */\r\n            //ステータスによった挙動\r\n            switch (this.Status) {\r\n                case \"Stand\":\r\n                    //静止時\r\n                    this.StandAnimation.Update();\r\n                    this.DrawImage = this.StandAnimation.image;\r\n                    this.WorkAnimation.Reset();\r\n                    this.AttackAnimation.Reset();\r\n                    if (this.nowSpeed.y != 0) {\r\n                        this.nowSpeed.y *= 0.8;\r\n                        if ((this.nowSpeed.y < 0 && this.nowSpeed.y > -1) ||\r\n                            (this.nowSpeed.y > 0 && this.nowSpeed.y < 1)) {\r\n                            this.nowSpeed.y = 0;\r\n                        }\r\n                    }\r\n                    if (this.nowSpeed.x != 0) {\r\n                        this.nowSpeed.x *= 0.8;\r\n                        if ((this.nowSpeed.x < 0 && this.nowSpeed.x > -1) ||\r\n                            (this.nowSpeed.x > 0 && this.nowSpeed.x < 1)) {\r\n                            this.nowSpeed.x = 0;\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"Work\":\r\n                    //歩行時\r\n                    this.WorkAnimation.Update();\r\n                    this.DrawImage = this.WorkAnimation.image;\r\n                    this.StandAnimation.Reset();\r\n                    this.AttackAnimation.Reset();\r\n                    break;\r\n                case \"Dash\":\r\n                    //ダッシュ時\r\n                    this.nowSpeed.x *= 0.95;\r\n                    this.nowSpeed.y *= 0.95;\r\n                    if (this.nowSpeed.x > 0 && this.nowSpeed.x < 1)\r\n                        this.nowSpeed.x = 0;\r\n                    else if (this.nowSpeed.x < 0 && this.nowSpeed.x > -1)\r\n                        this.nowSpeed.x = 0;\r\n                    if (this.nowSpeed.y > 0 && this.nowSpeed.y < 1)\r\n                        this.nowSpeed.y = 0;\r\n                    else if (this.nowSpeed.y < 0 && this.nowSpeed.y > -1)\r\n                        this.nowSpeed.y = 0;\r\n                    if (this.nowSpeed.x == 0 && this.nowSpeed.y == 0)\r\n                        this.Status = \"Stand\";\r\n                    break;\r\n                case \"Attack\":\r\n                    //攻撃時\r\n                    if (this.delay == 0) {\r\n                        this.AtkAnimation = null;\r\n                        this.Status = \"Stand\";\r\n                    }\r\n                    this.StandAnimation.Reset();\r\n                    this.WorkAnimation.Reset();\r\n                    this.AttackAnimation.Update();\r\n                    this.DrawImage = this.AttackAnimation.image;\r\n                    break;\r\n                case \"Skill\":\r\n                    (_a = this.AtkAnimation) === null || _a === void 0 ? void 0 : _a.Update();\r\n                    this.AttackAnimation.Update();\r\n                    this.DrawImage = this.AttackAnimation.image;\r\n                    this.StandAnimation.Reset();\r\n                    this.WorkAnimation.Reset();\r\n                    break;\r\n            }\r\n            (_b = this.AtkAnimation) === null || _b === void 0 ? void 0 : _b.Update();\r\n            /* 照準 */\r\n            //ターゲットに照準を合わせる\r\n            if (this.target != null) {\r\n                this.targetPos = new Position_1.Position(this.target.position.x, this.target.position.y);\r\n            }\r\n            if ((_c = this.target) === null || _c === void 0 ? void 0 : _c.delete) {\r\n                this.target = null;\r\n            }\r\n            if (this.target != null) {\r\n                let radian = Math.atan2(this.target.position.y - this.position.y, this.target.position.x - this.position.x);\r\n                this.rotateGoal = parseInt((radian * (180 / Math.PI)).toString());\r\n                if (this.rotateGoal < 0)\r\n                    this.rotateGoal += 360;\r\n            }\r\n            else {\r\n                if (this.nowSpeed.x != 0 && this.nowSpeed.y != 0) {\r\n                    let radian = Math.atan2(this.nowSpeed.y, this.nowSpeed.x);\r\n                    this.rotateGoal = parseInt((radian * (180 / Math.PI)).toString());\r\n                    if (this.rotateGoal < 0)\r\n                        this.rotateGoal += 360;\r\n                }\r\n            }\r\n            //照準を連続的に合わせる\r\n            if (this.rotate != this.rotateGoal) {\r\n                let direction = Math.sign(this.rotate - this.rotateGoal);\r\n                let width;\r\n                if (this.rotateGoal > this.rotate)\r\n                    width = this.rotateGoal - this.rotate;\r\n                else\r\n                    width = this.rotate - this.rotateGoal;\r\n                if (width < 180)\r\n                    direction *= -1;\r\n                this.rotateDirection = direction;\r\n            }\r\n            //汎用\r\n            super.update(scene);\r\n            this.position.x += this.nowSpeed.x;\r\n            this.position.y += this.nowSpeed.y;\r\n            //スキル発動中\r\n            if (this.skill1.activeNow)\r\n                this.skill1.activeFunction(scene, this, this.skill1);\r\n            if (this.skill2.activeNow)\r\n                this.skill2.activeFunction(scene, this, this.skill2);\r\n            if (this.superSkill.activeNow)\r\n                this.superSkill.activeFunction(scene, this, this.superSkill);\r\n            if (this.delay == 1 || this.delay == 0) {\r\n                this.Status = \"Stand\";\r\n                this.skill1.activeNow = false;\r\n                this.skill2.activeNow = false;\r\n                this.superSkill.activeNow = false;\r\n            }\r\n            //フィールドを超えないようにする\r\n            super.fieldCollision();\r\n        }\r\n        draw(ctx) {\r\n            this.PrivateCtx.clearRect(0, 0, GlobalData_1.GlobalData.Instance.ScreenSize.width, GlobalData_1.GlobalData.Instance.ScreenSize.height);\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"攻撃範囲表示\"]) {\r\n                this.PrivateCtx.beginPath();\r\n                this.PrivateCtx.moveTo(this.position.x, this.position.y);\r\n                this.PrivateCtx.arc(this.position.x, this.position.y, this.atkRenge, (this.rotate - 90) * (Math.PI / 180), (this.rotate + 90) * (Math.PI / 180));\r\n                this.PrivateCtx.fillStyle = \"rgba(255,0,0,0.2)\";\r\n                this.PrivateCtx.fill();\r\n                this.PrivateCtx.closePath();\r\n            }\r\n            super.draw(this.PrivateCtx);\r\n            //アイコン/エフェクト位置計算\r\n            if (this.rotate != this.OldRotate) {\r\n                let sin = Math.sin(Math.PI * this.rotate / 180);\r\n                let cos = Math.cos(Math.PI * this.rotate / 180);\r\n                this.SaveEyeIconPos = new Position_1.Position(Math.floor(cos * 60), Math.floor(sin * 60));\r\n            }\r\n            //目アイコン表示\r\n            let eyex = this.position.x + this.SaveEyeIconPos.x;\r\n            let eyey = this.position.y + this.SaveEyeIconPos.y;\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"攻撃方向アシストアイコン\"]) {\r\n                //端を超えないようにする\r\n                if (eyex < 0)\r\n                    eyex = 0;\r\n                else if (eyex > GlobalData_1.GlobalData.Instance.ScreenSize.width)\r\n                    eyex = GlobalData_1.GlobalData.Instance.ScreenSize.width;\r\n                if (eyey < 0)\r\n                    eyey = 0;\r\n                else if (eyey + 12 > GlobalData_1.GlobalData.Instance.ScreenSize.height)\r\n                    eyey = GlobalData_1.GlobalData.Instance.ScreenSize.height;\r\n                //描画\r\n                this.PrivateCtx.drawImage(this.EyeIcon_Rotate, eyex - 12, eyey - 12);\r\n            }\r\n            //攻撃範囲描画\r\n            if (this.AtkAnimation != null) {\r\n                this.PrivateCtx.drawImage(this.AtkAnimation.image, eyex - this.AtkAnimation.size.width / 2, eyey - this.AtkAnimation.size.height / 2);\r\n            }\r\n            //エフェクト\r\n            if (this.condition[\"やけど\"].on) {\r\n                this.PrivateCtx.fillStyle = \"red\";\r\n                this.PrivateCtx.fillText(\"やけど\", this.position.x, this.position.y);\r\n            }\r\n            //描画\r\n            ctx.drawImage(this.PrivateCanvas, 0, 0);\r\n        }\r\n        Move(speedX, speedY) {\r\n            this.nowSpeed = new Position_1.Position(speedX, speedY);\r\n            this.Status = \"Work\";\r\n        }\r\n        Dush(directionx, directiony) {\r\n            this.Status = \"Dash\";\r\n            this.nowSpeed = new Position_1.Position(Math.floor(directionx * this.speed * 8), Math.floor(directiony * this.speed * 8));\r\n        }\r\n        GetItem(itemName) {\r\n            if (SaveData_1.SaveData.Instance.items[itemName] == null)\r\n                SaveData_1.SaveData.Instance.items[itemName] = 1;\r\n            else\r\n                SaveData_1.SaveData.Instance.items[itemName] += 1;\r\n        }\r\n    }\r\n    exports.Hero = Hero;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Hero.js.map\n\n//# sourceURL=webpack:///./public/Object/Hero.js?");

/***/ }),

/***/ "./public/Object/Object.js":
/*!*********************************!*\
  !*** ./public/Object/Object.js ***!
  \*********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Size_1, Position_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.GameObject = void 0;\r\n    class GameObject {\r\n        constructor() {\r\n            this.Type = \"---\";\r\n            this.size = new Size_1.Size(50, 50);\r\n            this.position = new Position_1.Position(0, 0);\r\n            this.DrawImage = document.createElement(\"canvas\");\r\n            this.Passable = false;\r\n            this.Kinematic = false;\r\n        }\r\n        update(scene) {\r\n        }\r\n        draw(ctx) {\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.DrawImage.width / 2), Math.floor(this.position.y - this.DrawImage.height / 2));\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.GameObject = GameObject;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Object.js.map\n\n//# sourceURL=webpack:///./public/Object/Object.js?");

/***/ }),

/***/ "./public/Object/Wall.js":
/*!*******************************!*\
  !*** ./public/Object/Wall.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Object */ \"./public/Object/Object.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Object_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Wall = void 0;\r\n    class Wall extends Object_1.GameObject {\r\n        constructor(pos, size, image) {\r\n            super();\r\n            this.Type = \"Wall\";\r\n            this.position = pos;\r\n            this.size = size;\r\n            let canvas = document.createElement(\"canvas\");\r\n            let ctx = canvas.getContext(\"2d\");\r\n            canvas.width = this.size.width;\r\n            canvas.height = this.size.height;\r\n            if (image.complete) {\r\n                ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                this.DrawImage = canvas;\r\n            }\r\n            else {\r\n                image.addEventListener(\"load\", () => {\r\n                    ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                    this.DrawImage = canvas;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    exports.Wall = Wall;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Wall.js.map\n\n//# sourceURL=webpack:///./public/Object/Wall.js?");

/***/ }),

/***/ "./public/Scene/GameScene.js":
/*!***********************************!*\
  !*** ./public/Scene/GameScene.js ***!
  \***********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ./Scene */ \"./public/Scene/Scene.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\"), __webpack_require__(/*! ../Object/Hero */ \"./public/Object/Hero.js\"), __webpack_require__(/*! ../Map/HomeMap */ \"./public/Map/HomeMap.js\"), __webpack_require__(/*! ./SceneManager */ \"./public/Scene/SceneManager.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Animation */ \"./public/Base/Animation.js\"), __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ../Base/ResourceManager */ \"./public/Base/ResourceManager.js\"), __webpack_require__(/*! ../MiniWindow/MenuWindow */ \"./public/MiniWindow/MenuWindow.js\"), __webpack_require__(/*! ../Data/Reward */ \"./public/Data/Reward.js\"), __webpack_require__(/*! ./LostScene */ \"./public/Scene/LostScene.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Scene_1, GlobalData_1, Hero_1, HomeMap_1, SceneManager_1, Size_1, Animation_1, Rectangle_1, ResourceManager_1, MenuWindow_1, Reward_1, LostScene_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.GameScene = void 0;\r\n    class GameScene extends Scene_1.Scene {\r\n        constructor() {\r\n            super();\r\n            this.TouchTime = [15, 15];\r\n            this.longTouchTime = [120, 120];\r\n            //UI\r\n            this.skill1 = document.createElement(\"div\");\r\n            this.skill2 = document.createElement(\"div\");\r\n            this.skillS = document.createElement(\"div\");\r\n            this.menu = document.createElement(\"div\");\r\n            this.keys = [];\r\n            this.loopSwitch = true;\r\n            this.BackCanvas = document.createElement(\"canvas\");\r\n            this.BackCanvas.width = GlobalData_1.GlobalData.Instance.ScreenSize.width;\r\n            this.BackCanvas.height = GlobalData_1.GlobalData.Instance.ScreenSize.height;\r\n            this.BackContext = this.BackCanvas.getContext(\"2d\");\r\n            this.hero = new Hero_1.Hero();\r\n            this.enemys = [];\r\n            this.walls = [];\r\n            this.activeObjs = [];\r\n            this.DamageObjs = [];\r\n            this.BeforeOverlapObjects = [];\r\n            this.overlapObjects = [];\r\n            this.selectObj = null;\r\n            this.selectImage = document.createElement(\"img\");\r\n            this.selectImage.src = \"https://12345ff.github.io/Image/Icon/PointMark.png\";\r\n            this.TouchBeginTime = null;\r\n            this.TouchBegin = null;\r\n            this.TouchNow = null;\r\n            this.TouchEnd = null;\r\n            this.TouchTime[0] = this.TouchTime[1];\r\n            this.longTouchTime[0] = this.longTouchTime[1];\r\n            this.circleElement_Begin = document.getElementById(\"BigCircle\");\r\n            this.circleElement_Now = document.getElementById(\"ControlCircle\");\r\n            this.atkFlag = true;\r\n            this.windowMode = false;\r\n            this.mapData = new HomeMap_1.HomeMap();\r\n        }\r\n        call() {\r\n            var _a, _b, _c, _d;\r\n            this.mapData = new HomeMap_1.HomeMap();\r\n            this.mapData.ObjectSet(this, new Position_1.Position(950, 150));\r\n            let image1 = document.createElement(\"img\");\r\n            image1.src = \"https://12345ff.github.io/Image/AtkAnime1.png\";\r\n            ResourceManager_1.ResourceManager.Instance.PlusImage(\"atkAnime\", image1);\r\n            this.selectObj = null;\r\n            this.skill1.className = \"skillButton\";\r\n            this.skill2.className = \"skillButton\";\r\n            this.skillS.className = \"skillButton\";\r\n            this.skill1.id = \"skill_1\";\r\n            this.skill2.id = \"skill_2\";\r\n            this.skillS.id = \"skill_super\";\r\n            this.skill1.textContent = \"skill(R)\";\r\n            this.skill2.textContent = \"skill(L)\";\r\n            this.skillS.textContent = \"super\";\r\n            this.skill1.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            this.skill1.addEventListener(\"touchend\", (e) => {\r\n                this.hero.skill1.notActive();\r\n                this.hero.skill2.notActive();\r\n                this.hero.superSkill.notActive();\r\n                if (this.hero.skill1.point == this.hero.skill1.maxPoint) {\r\n                    if (this.hero.superSkill.point < this.hero.superSkill.maxPoint) {\r\n                        this.hero.superSkill.point++;\r\n                    }\r\n                    this.hero.delay = this.hero.skill1.Deleay;\r\n                    this.hero.skill1.active();\r\n                    this.hero.Status = \"Skill\";\r\n                    this.UIupdate();\r\n                }\r\n                e.stopPropagation();\r\n            });\r\n            this.skill2.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            this.skill2.addEventListener(\"touchend\", (e) => {\r\n                this.hero.skill1.notActive();\r\n                this.hero.skill2.notActive();\r\n                this.hero.superSkill.notActive();\r\n                if (this.hero.skill2.point == this.hero.skill2.maxPoint) {\r\n                    if (this.hero.superSkill.point < this.hero.superSkill.maxPoint) {\r\n                        this.hero.superSkill.point++;\r\n                    }\r\n                    this.hero.delay = this.hero.skill2.Deleay;\r\n                    this.hero.skill2.active();\r\n                    this.hero.Status = \"Skill\";\r\n                    this.UIupdate();\r\n                }\r\n                e.stopPropagation();\r\n            });\r\n            this.skillS.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            this.skillS.addEventListener(\"touchend\", (e) => {\r\n                this.hero.skill1.notActive();\r\n                this.hero.skill2.notActive();\r\n                this.hero.superSkill.notActive();\r\n                if (this.hero.superSkill.point == this.hero.superSkill.maxPoint) {\r\n                    this.hero.delay = this.hero.superSkill.Deleay;\r\n                    this.hero.superSkill.active();\r\n                    this.hero.Status = \"Skill\";\r\n                    this.UIupdate();\r\n                }\r\n                e.stopPropagation();\r\n            });\r\n            this.menu.id = \"menuBtn\";\r\n            this.menu.textContent = \"三\";\r\n            this.menu.addEventListener(\"touchstart\", (e) => {\r\n                e.stopPropagation();\r\n            });\r\n            this.menu.addEventListener(\"touchend\", (e) => {\r\n                if (!this.windowMode) {\r\n                    const menu = new MenuWindow_1.MenuWindow(this);\r\n                    menu.ObjectSet();\r\n                }\r\n                e.stopPropagation();\r\n            });\r\n            this.UIupdate();\r\n            (_a = GlobalData_1.GlobalData.Instance.UIScreen) === null || _a === void 0 ? void 0 : _a.appendChild(this.skill1);\r\n            (_b = GlobalData_1.GlobalData.Instance.UIScreen) === null || _b === void 0 ? void 0 : _b.appendChild(this.skill2);\r\n            (_c = GlobalData_1.GlobalData.Instance.UIScreen) === null || _c === void 0 ? void 0 : _c.appendChild(this.skillS);\r\n            (_d = GlobalData_1.GlobalData.Instance.UIScreen) === null || _d === void 0 ? void 0 : _d.appendChild(this.menu);\r\n        }\r\n        move() {\r\n            var _a, _b, _c, _d;\r\n            this.TouchBeginTime = null;\r\n            this.TouchBegin = null;\r\n            this.TouchNow = null;\r\n            this.TouchEnd = null;\r\n            this.TouchTime[0] = this.TouchTime[1];\r\n            this.longTouchTime[0] = this.longTouchTime[1];\r\n            this.circleElement_Begin.style.display = \"none\";\r\n            this.circleElement_Now.style.display = \"none\";\r\n            this.mapData.ObjectRemove(this);\r\n            (_a = GlobalData_1.GlobalData.Instance.UIScreen) === null || _a === void 0 ? void 0 : _a.removeChild(this.skill1);\r\n            (_b = GlobalData_1.GlobalData.Instance.UIScreen) === null || _b === void 0 ? void 0 : _b.removeChild(this.skill2);\r\n            (_c = GlobalData_1.GlobalData.Instance.UIScreen) === null || _c === void 0 ? void 0 : _c.removeChild(this.skillS);\r\n            (_d = GlobalData_1.GlobalData.Instance.UIScreen) === null || _d === void 0 ? void 0 : _d.removeChild(this.menu);\r\n        }\r\n        update() {\r\n            if (this.windowMode) {\r\n                return;\r\n            }\r\n            if (this.hero.hp <= 0) {\r\n                SceneManager_1.SceneManager.Instance.AddScene(new LostScene_1.LoseScene());\r\n            }\r\n            if (this.hero.target == null && this.enemys.length > 0)\r\n                this.hero.target = this.enemys[0];\r\n            //タッチ中のイベント\r\n            if (this.TouchBegin != null && this.TouchNow != null) {\r\n                const max = 100;\r\n                //攻撃か移動か\r\n                let touchSaX = this.TouchBegin.x - this.TouchNow.x;\r\n                let touchSaY = this.TouchBegin.y - this.TouchNow.y;\r\n                let saX = this.TouchNow.x - this.TouchBegin.x;\r\n                let saY = this.TouchNow.y - this.TouchBegin.y;\r\n                if (saX > max)\r\n                    saX = max;\r\n                else if (saX < -max)\r\n                    saX = -max;\r\n                if (saY > max)\r\n                    saY = max;\r\n                else if (saY < -max)\r\n                    saY = -max;\r\n                this.circleElement_Now.style.top = `${parseInt(this.circleElement_Begin.style.top) + saY}px`;\r\n                this.circleElement_Now.style.left = `${parseInt(this.circleElement_Begin.style.left) + saX}px`;\r\n                if (this.atkFlag &&\r\n                    ((-max / 4 < touchSaX && touchSaX < 0) || (0 <= touchSaX && touchSaX < max / 4)) &&\r\n                    ((-max / 4 < touchSaY && touchSaY < 0) || (0 <= touchSaY && touchSaY < max / 4))) {\r\n                    //攻撃\r\n                    if (this.TouchTime[0] <= 0) {\r\n                        this.TouchTime[0] = this.TouchTime[1];\r\n                        this.keydown(GlobalData_1.GlobalData.Instance.KeySet[\"Attack\"]);\r\n                    }\r\n                }\r\n                else {\r\n                    //移動\r\n                    this.atkFlag = false;\r\n                    this.keyup(GlobalData_1.GlobalData.Instance.KeySet[\"Attack\"]);\r\n                    saX = saX / max * this.hero.speed;\r\n                    saY = saY / max * this.hero.speed;\r\n                    this.hero.Move(saX, saY);\r\n                }\r\n                this.TouchTime[0]--;\r\n            }\r\n            else {\r\n                this.atkFlag = true;\r\n                this.keyup(GlobalData_1.GlobalData.Instance.KeySet[\"Attack\"]);\r\n                this.TouchTime[0] = this.TouchTime[1];\r\n            }\r\n            //主人公の処理\r\n            this.hero.update(this);\r\n            //敵の処理\r\n            let array = [];\r\n            for (let i = 0; i < this.enemys.length; i++) {\r\n                this.enemys[i].update(this);\r\n                if (!this.enemys[i].delete)\r\n                    array.push(this.enemys[i]);\r\n                else {\r\n                    if (this.hero.target == this.enemys[i])\r\n                        this.hero.target = null;\r\n                    if (Reward_1.RewardList[this.enemys[i].name] != null) {\r\n                        let random = Math.floor(Math.random() * Reward_1.RewardList[this.enemys[i].name].length);\r\n                        this.hero.GetItem(Reward_1.RewardList[this.enemys[i].name][random]);\r\n                    }\r\n                    else {\r\n                        this.hero.GetItem(\"ゴミ\");\r\n                    }\r\n                }\r\n            }\r\n            this.enemys = array;\r\n            //ダメージオブジェクトの処理\r\n            let array2 = [];\r\n            for (let i = 0; i < this.DamageObjs.length; i++) {\r\n                this.DamageObjs[i].update(this);\r\n                if (this.DamageObjs[i].mode != \"delete\") {\r\n                    array2.push(this.DamageObjs[i]);\r\n                }\r\n            }\r\n            this.DamageObjs = array2;\r\n            //コマンドによった行動\r\n            if (this.keys.includes(GlobalData_1.GlobalData.Instance.KeySet[\"Attack\"]) &&\r\n                this.hero.delay <= 0 && (this.hero.Status == \"Stand\" || this.hero.Status == \"Work\")) {\r\n                //攻撃状態にする\r\n                this.hero.delay = this.hero.atkDelay;\r\n                this.hero.Status = \"Attack\";\r\n                this.hero.nowSpeed = new Position_1.Position(0, 0);\r\n                //攻撃アニメーション用意\r\n                this.hero.AtkAnimation = new Animation_1.GameAnimation(this.hero.rotate - 270, new Size_1.Size(this.hero.size.width * 2, this.hero.size.height * 3));\r\n                this.hero.AtkAnimation.setInterval(5);\r\n                this.hero.AtkAnimation.limit = 1;\r\n                this.hero.AtkAnimation.SetUp2(ResourceManager_1.ResourceManager.Instance.GetImage(\"atkAnime\"), [new Rectangle_1.Rectangle(0, 0, 50, 50), new Rectangle_1.Rectangle(0, 50, 50, 50), new Rectangle_1.Rectangle(0, 100, 50, 50), new Rectangle_1.Rectangle(0, 150, 50, 50), new Rectangle_1.Rectangle(0, 200, 50, 50),]);\r\n                //当たり判定\r\n                for (let i = 0; i < this.enemys.length; i++) {\r\n                    const target = this.enemys[i];\r\n                    const saX = target.position.x - this.hero.position.x;\r\n                    const saY = target.position.y - this.hero.position.y;\r\n                    const saWidth = target.size.width + this.hero.atkRenge;\r\n                    const saHeight = target.size.height + this.hero.atkRenge;\r\n                    const sa = saX * saX + saY * saY;\r\n                    if (sa > saWidth * saWidth || sa > saHeight * saHeight) {\r\n                        continue;\r\n                    }\r\n                    //↑範囲内か\r\n                    const radian = Math.floor(Math.atan2(target.position.y - this.hero.position.y, target.position.x - this.hero.position.x) * (180 / Math.PI));\r\n                    let atkRengePlus = radian + 90;\r\n                    let atkRengeMinus = radian - 90;\r\n                    let degree = parseInt((Math.atan2(saY, saX) * 180 / Math.PI).toString());\r\n                    if (degree < 0)\r\n                        degree += 360;\r\n                    if (atkRengePlus >= 360)\r\n                        atkRengePlus -= 360;\r\n                    if (atkRengeMinus < 0)\r\n                        atkRengeMinus += 360;\r\n                    let atkFlag = false;\r\n                    if (atkRengeMinus < atkRengeMinus) {\r\n                        if (atkRengeMinus <= degree && degree <= atkRengePlus)\r\n                            atkFlag = true;\r\n                    }\r\n                    else {\r\n                        if (atkRengeMinus <= degree && degree <= 360)\r\n                            atkFlag = true;\r\n                        else if (atkRengePlus >= degree && degree >= 0)\r\n                            atkFlag = true;\r\n                    }\r\n                    if (atkFlag) {\r\n                        //↑角度内か\r\n                        target.damage(this.hero.atk);\r\n                        if (this.hero.skill1.point < this.hero.skill1.maxPoint)\r\n                            this.hero.skill1.point++;\r\n                        if (this.hero.skill2.point < this.hero.skill2.maxPoint)\r\n                            this.hero.skill2.point++;\r\n                        this.UIupdate();\r\n                    }\r\n                }\r\n            }\r\n            //---\r\n            //衝突処理\r\n            this.BeforeOverlapObjects = this.overlapObjects;\r\n            this.overlapObjects = [];\r\n            let objects = [];\r\n            for (let i = 0; i < this.activeObjs.length; i++) {\r\n                objects.push(this.activeObjs[i]);\r\n            }\r\n            for (let i = 0; i < this.walls.length; i++) {\r\n                objects.push(this.walls[i]);\r\n            }\r\n            for (let i = 0; i < objects.length; i++) {\r\n                const target = objects[i];\r\n                if (target.size.width == 0 || target.size.height == 0 ||\r\n                    Math.abs(this.hero.position.x - target.position.x) > this.hero.size.width / 2 + target.size.width / 2 ||\r\n                    Math.abs(this.hero.position.y - target.position.y) > this.hero.size.height / 2 + target.size.height / 2) {\r\n                    continue;\r\n                }\r\n                if (target.Type == \"ActiveObject\") {\r\n                    const activeObject = target;\r\n                    if (activeObject.passable) {\r\n                        this.overlapObjects.push(activeObject);\r\n                        continue;\r\n                    }\r\n                }\r\n                const overlap = new Position_1.Position(Math.sign(this.hero.position.x - target.position.x) * ((target.size.width / 2 + this.hero.size.width / 2) - Math.abs(this.hero.position.x - target.position.x)), Math.sign(this.hero.position.y - target.position.y) * ((target.size.height / 2 + this.hero.size.height / 2) - Math.abs(this.hero.position.y - target.position.y)));\r\n                const BeforeOverlapX = Math.abs(this.hero.OldPosition.x - target.position.x) < this.hero.size.width / 2 + target.size.width / 2;\r\n                const BeforeOverlapY = Math.abs(this.hero.OldPosition.y - target.position.y) < this.hero.size.height / 2 + target.size.height / 2;\r\n                if ((!BeforeOverlapX && BeforeOverlapY) ||\r\n                    (!BeforeOverlapX && !BeforeOverlapY && Math.abs(overlap.x) <= Math.abs(overlap.y))) {\r\n                    this.hero.position.x += overlap.x;\r\n                    if (overlap.x < 0) {\r\n                        this.hero.nowSpeed.x = Math.min(this.hero.nowSpeed.x, 0);\r\n                    }\r\n                    else {\r\n                        this.hero.nowSpeed.x = Math.max(this.hero.nowSpeed.x, 0);\r\n                    }\r\n                }\r\n                else {\r\n                    this.hero.position.y += overlap.y;\r\n                    if (overlap.y < 0) {\r\n                        this.hero.nowSpeed.y = Math.min(this.hero.nowSpeed.y, 0);\r\n                    }\r\n                    else {\r\n                        this.hero.nowSpeed.y = Math.max(this.hero.nowSpeed.y, 0);\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < this.overlapObjects.length; i++) {\r\n                if (!this.BeforeOverlapObjects.includes(this.overlapObjects[i])) {\r\n                    this.overlapObjects[i].HoverOnEvent(this);\r\n                }\r\n            }\r\n            //選択オブジェクト選択\r\n            this.selectObj = null;\r\n            for (let i = 0; i < this.activeObjs.length; i++) {\r\n                const target = this.activeObjs[i];\r\n                const saX = Math.abs(target.position.x - this.hero.position.x);\r\n                const saY = Math.abs(target.position.y - this.hero.position.y);\r\n                const sa = this.hero.size.width * 1.3 + target.size.width;\r\n                if (saX * saX + saY * saY < sa * sa && target.actible) {\r\n                    this.selectObj = target;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            this.BackContext.clearRect(0, 0, this.BackCanvas.width, this.BackCanvas.height);\r\n            ctx.clearRect(0, 0, GlobalData_1.GlobalData.Instance.ScreenSize.width, GlobalData_1.GlobalData.Instance.ScreenSize.height);\r\n            //キャラクター\r\n            let objs = [];\r\n            objs.push(this.hero);\r\n            for (let i = 0; i < this.enemys.length; i++) {\r\n                objs.push(this.enemys[i]);\r\n            }\r\n            //壁\r\n            for (let i = 0; i < this.walls.length; i++) {\r\n                objs.push(this.walls[i]);\r\n            }\r\n            //アクティブオブジェクト\r\n            for (let i = 0; i < this.activeObjs.length; i++) {\r\n                objs.push(this.activeObjs[i]);\r\n            }\r\n            //ダメージオブジェクト\r\n            for (let i = 0; i < this.DamageObjs.length; i++) {\r\n                objs.push(this.DamageObjs[i]);\r\n            }\r\n            objs.sort((a, b) => {\r\n                if (a.position.y > b.position.y)\r\n                    return 1;\r\n                else if (a.position.y < b.position.y)\r\n                    return -1;\r\n                else\r\n                    return 0;\r\n            });\r\n            for (let i = 0; i < objs.length; i++) {\r\n                objs[i].draw(this.BackContext);\r\n            }\r\n            if (this.selectObj != null) {\r\n                this.BackContext.drawImage(this.selectImage, this.selectObj.position.x - this.selectImage.width / 2, this.selectObj.position.y - this.selectImage.height / 2);\r\n            }\r\n            ctx.drawImage(this.BackCanvas, 0, 0);\r\n        }\r\n        //タッチ\r\n        touchStart(Touch) {\r\n            if (!this.windowMode) {\r\n                this.TouchBegin = Touch;\r\n                this.TouchBeginTime = Date.now();\r\n                this.circleElement_Begin.style.top = Touch.y.toString() + \"px\";\r\n                this.circleElement_Begin.style.left = Touch.x.toString() + \"px\";\r\n                this.circleElement_Begin.style.display = \"block\";\r\n                this.circleElement_Now.style.display = \"block\";\r\n                this.TouchNow = Touch;\r\n            }\r\n        }\r\n        touchNow(Touch) {\r\n            this.TouchNow = Touch;\r\n        }\r\n        touchEnd(Touch) {\r\n            let touchEndTime = Date.now();\r\n            if (this.TouchBegin != null && this.TouchBeginTime != null && this.TouchNow != null && touchEndTime - this.TouchBeginTime < 300) {\r\n                const max = 100;\r\n                let touchSaX = this.TouchBegin.x - this.TouchNow.x;\r\n                let touchSaY = this.TouchBegin.y - this.TouchNow.y;\r\n                if ((touchSaX < -max / 3 || max / 3 < touchSaX) ||\r\n                    (touchSaY < -max / 3 || max / 3 < touchSaY)) {\r\n                    let saX = Touch.x - this.TouchBegin.x;\r\n                    let saY = Touch.y - this.TouchBegin.y;\r\n                    const max = 150;\r\n                    if (saX > max)\r\n                        saX = max;\r\n                    else if (saX < -max)\r\n                        saX = -max;\r\n                    if (saY > max)\r\n                        saY = max;\r\n                    else if (saY < -max)\r\n                        saY = -max;\r\n                    this.hero.Dush(saX / max, saY / max);\r\n                }\r\n                else {\r\n                    if (this.selectObj != null) {\r\n                        this.selectObj.ActiveEvent(this);\r\n                    }\r\n                }\r\n            }\r\n            this.TouchNow = null;\r\n            this.TouchBegin = null;\r\n            this.circleElement_Begin.style.display = \"none\";\r\n            this.circleElement_Now.style.display = \"none\";\r\n        }\r\n        //キー押し\r\n        keydown(keyType) {\r\n            this.keys.push(keyType);\r\n            if (keyType == GlobalData_1.GlobalData.Instance.KeySet[\"Cansel\"]) {\r\n                SceneManager_1.SceneManager.Instance.RemoveScene(1);\r\n            }\r\n            if (keyType == \"d\") {\r\n                console.log(`hero:Stats:${this.hero.Status}`);\r\n            }\r\n        }\r\n        //キー離し\r\n        keyup(keyType) {\r\n            let keys = [];\r\n            for (let i = 0; i < this.keys.length; i++) {\r\n                if (keyType != this.keys[i]) {\r\n                    keys.push(this.keys[i]);\r\n                }\r\n            }\r\n            this.keys = keys;\r\n        }\r\n        //スキルゲージ\r\n        UIupdate() {\r\n            let skill1Parcent = this.hero.skill1.point / this.hero.skill1.maxPoint * 100;\r\n            let skill2Parcent = this.hero.skill2.point / this.hero.skill2.maxPoint * 100;\r\n            let skillsParcent = this.hero.superSkill.point / this.hero.superSkill.maxPoint * 100;\r\n            this.skill1.style.background = `radial-gradient(blue, ${skill1Parcent}%, white)`;\r\n            this.skill2.style.background = `radial-gradient(blue, ${skill2Parcent}%, white)`;\r\n            this.skillS.style.background = `radial-gradient(blue, ${skillsParcent}%, white)`;\r\n        }\r\n    }\r\n    exports.GameScene = GameScene;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=GameScene.js.map\n\n//# sourceURL=webpack:///./public/Scene/GameScene.js?");

/***/ }),

/***/ "./public/Scene/LostScene.js":
/*!***********************************!*\
  !*** ./public/Scene/LostScene.js ***!
  \***********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Scene */ \"./public/Scene/Scene.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\"), __webpack_require__(/*! ./SceneManager */ \"./public/Scene/SceneManager.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Scene_1, GlobalData_1, SceneManager_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.LoseScene = void 0;\r\n    class LoseScene extends Scene_1.Scene {\r\n        constructor() {\r\n            super();\r\n            let loseText = document.createElement(\"p\");\r\n            let BackBtn = document.createElement(\"button\");\r\n            loseText.textContent = \"敗北\";\r\n            BackBtn.textContent = \"再開\";\r\n            loseText.style.position = \"absolute\";\r\n            loseText.style.top = \"20px\";\r\n            loseText.style.left = \"50%\";\r\n            loseText.style.transform = \"translateX(-50%)\";\r\n            loseText.style.fontSize = \"40px\";\r\n            loseText.style.width = \"300px\";\r\n            loseText.style.height = \"60px\";\r\n            BackBtn.style.position = \"absolute\";\r\n            BackBtn.style.top = \"340px\";\r\n            BackBtn.style.left = \"50%\";\r\n            BackBtn.style.transform = \"translateX(-50%)\";\r\n            BackBtn.style.width = \"300px\";\r\n            BackBtn.style.height = \"60px\";\r\n            BackBtn.addEventListener(\"touchend\", () => {\r\n                SceneManager_1.SceneManager.Instance.RemoveScene(1);\r\n            });\r\n            this.UIs.push(loseText);\r\n            this.UIs.push(BackBtn);\r\n        }\r\n        call() {\r\n            super.call();\r\n            this.background.src = \"https://12345ff.github.io/Image/Icon/Icon2.png\";\r\n        }\r\n        update() {\r\n        }\r\n        draw(canvas) {\r\n            canvas.clearRect(0, 0, GlobalData_1.GlobalData.Instance.ScreenSize.width, GlobalData_1.GlobalData.Instance.ScreenSize.height);\r\n        }\r\n    }\r\n    exports.LoseScene = LoseScene;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=LostScene.js.map\n\n//# sourceURL=webpack:///./public/Scene/LostScene.js?");

/***/ }),

/***/ "./public/Scene/Scene.js":
/*!*******************************!*\
  !*** ./public/Scene/Scene.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Scene = void 0;\r\n    class Scene {\r\n        constructor() {\r\n            this.name = \"\";\r\n            this.UIs = [];\r\n            this.background = document.getElementById(\"background\");\r\n            this.background.src = \"https://12345ff.github.io/Image/none.png\";\r\n        }\r\n        call() {\r\n            var _a;\r\n            for (var i = 0; i < this.UIs.length; i++) {\r\n                (_a = document.getElementById(\"GameUI\")) === null || _a === void 0 ? void 0 : _a.appendChild(this.UIs[i]);\r\n            }\r\n            this.background.src = \"https://12345ff.github.io/Image/none.png\";\r\n        }\r\n        move() {\r\n            var _a;\r\n            for (var i = 0; i < this.UIs.length; i++) {\r\n                (_a = document.getElementById(\"GameUI\")) === null || _a === void 0 ? void 0 : _a.removeChild(this.UIs[i]);\r\n            }\r\n        }\r\n        update() {\r\n        }\r\n        draw(ctx) {\r\n        }\r\n        keydown(keyType) {\r\n        }\r\n        keyup(keyType) {\r\n        }\r\n        touchStart(Touch) {\r\n        }\r\n        touchNow(Touch) {\r\n        }\r\n        touchEnd(Touch) {\r\n        }\r\n    }\r\n    exports.Scene = Scene;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Scene.js.map\n\n//# sourceURL=webpack:///./public/Scene/Scene.js?");

/***/ }),

/***/ "./public/Scene/SceneManager.js":
/*!**************************************!*\
  !*** ./public/Scene/SceneManager.js ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.SceneManager = void 0;\r\n    class SceneManager {\r\n        constructor() {\r\n            this.Scenes = [];\r\n        }\r\n        SetUp() {\r\n        }\r\n        GetTopScene() {\r\n            if (this.Scenes.length > 0) {\r\n                return this.Scenes[this.Scenes.length - 1];\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        AddScene(scene) {\r\n            var _a, _b;\r\n            if (this.Scenes.length > 0) {\r\n                (_a = this.GetTopScene()) === null || _a === void 0 ? void 0 : _a.move();\r\n            }\r\n            this.Scenes.push(scene);\r\n            (_b = this.GetTopScene()) === null || _b === void 0 ? void 0 : _b.call();\r\n        }\r\n        RemoveScene(count) {\r\n            var _a, _b;\r\n            if (this.Scenes.length > 0) {\r\n                (_a = this.GetTopScene()) === null || _a === void 0 ? void 0 : _a.move();\r\n            }\r\n            for (let i = 0; i < count; i++) {\r\n                if (this.Scenes.length > 0) {\r\n                    this.Scenes.pop();\r\n                }\r\n            }\r\n            if (this.Scenes.length > 0) {\r\n                (_b = this.GetTopScene()) === null || _b === void 0 ? void 0 : _b.call();\r\n            }\r\n        }\r\n    }\r\n    exports.SceneManager = SceneManager;\r\n    //シングルトンパターン\r\n    SceneManager.Instance = new SceneManager();\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=SceneManager.js.map\n\n//# sourceURL=webpack:///./public/Scene/SceneManager.js?");

/***/ }),

/***/ "./public/Scene/SettingScene.js":
/*!**************************************!*\
  !*** ./public/Scene/SettingScene.js ***!
  \**************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Scene */ \"./public/Scene/Scene.js\"), __webpack_require__(/*! ./SceneManager */ \"./public/Scene/SceneManager.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Scene_1, SceneManager_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.SettingScene = void 0;\r\n    class SettingScene extends Scene_1.Scene {\r\n        constructor() {\r\n            super();\r\n            let SettingField = document.createElement(\"div\");\r\n            SettingField.className = \"settingField\";\r\n            //戻るボタン\r\n            let BackBtn = document.createElement(\"button\");\r\n            BackBtn.style.float = \"center\";\r\n            BackBtn.textContent = \"back\";\r\n            BackBtn.style.width = \"200px\";\r\n            BackBtn.style.height = \"100px\";\r\n            BackBtn.style.fontSize = \"50px\";\r\n            BackBtn.classList.add(\"backBtn\");\r\n            BackBtn.addEventListener(\"touchend\", () => {\r\n                SceneManager_1.SceneManager.Instance.RemoveScene(1);\r\n            });\r\n            SettingField.appendChild(BackBtn);\r\n            //ナビゲーション設定\r\n            let NaviSettings = document.createElement(\"ul\");\r\n            NaviSettings.style.marginTop = \"0\";\r\n            NaviSettings.classList.add(\"SettingList\");\r\n            NaviSettings.classList.add(\"OptionClose\");\r\n            let NaviSettingText = document.createElement(\"p\");\r\n            NaviSettingText.textContent = \"アシスト設定\";\r\n            NaviSettingText.className = \"SettingText\";\r\n            NaviSettingText.addEventListener(\"touchend\", () => {\r\n                if (NaviSettings.classList.contains(\"OptionClose\")) {\r\n                    NaviSettings.classList.remove(\"OptionClose\");\r\n                }\r\n                else {\r\n                    NaviSettings.classList.add(\"OptionClose\");\r\n                }\r\n            });\r\n            SettingField.appendChild(NaviSettings);\r\n            NaviSettings.appendChild(NaviSettingText);\r\n            //ナビゲーション設定:各項目\r\n            for (let key in GlobalData_1.GlobalData.Instance.AssistSettingList) {\r\n                let Li = document.createElement(\"li\");\r\n                let Label = document.createElement(\"p\");\r\n                let Input = document.createElement(\"input\");\r\n                Li.className = \"SettingLi\";\r\n                Label.className = \"Setting_Label\";\r\n                Label.textContent = `${key}:[${GlobalData_1.GlobalData.Instance.AssistSettingList[key]}]`;\r\n                Input.className = \"Setting_Input\";\r\n                Input.type = \"checkbox\";\r\n                Input.style.width = \"50px\";\r\n                if (GlobalData_1.GlobalData.Instance.AssistSettingList[key])\r\n                    Input.checked = true;\r\n                Input.addEventListener(\"input\", (e) => {\r\n                    GlobalData_1.GlobalData.Instance.AssistSettingList[key] = Input.checked;\r\n                    Label.textContent = `${key}:[${GlobalData_1.GlobalData.Instance.AssistSettingList[key]}]`;\r\n                });\r\n                Li.appendChild(Label);\r\n                Li.appendChild(Input);\r\n                NaviSettings.appendChild(Li);\r\n            }\r\n            this.UIs.push(SettingField);\r\n        }\r\n        draw(ctx) {\r\n            ctx.clearRect(0, 0, GlobalData_1.GlobalData.Instance.ScreenSize.width, GlobalData_1.GlobalData.Instance.ScreenSize.height);\r\n        }\r\n    }\r\n    exports.SettingScene = SettingScene;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=SettingScene.js.map\n\n//# sourceURL=webpack:///./public/Scene/SettingScene.js?");

/***/ }),

/***/ "./public/Scene/TitleScene.js":
/*!************************************!*\
  !*** ./public/Scene/TitleScene.js ***!
  \************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Scene */ \"./public/Scene/Scene.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\"), __webpack_require__(/*! ./SceneManager */ \"./public/Scene/SceneManager.js\"), __webpack_require__(/*! ./SettingScene */ \"./public/Scene/SettingScene.js\"), __webpack_require__(/*! ./GameScene */ \"./public/Scene/GameScene.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Scene_1, GlobalData_1, SceneManager_1, SettingScene_1, GameScene_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.TitleScene = void 0;\r\n    class TitleScene extends Scene_1.Scene {\r\n        constructor() {\r\n            super();\r\n            let textResource = document.createElement(\"p\");\r\n            let TitleText = document.createElement(\"p\");\r\n            let StartBtn = document.createElement(\"button\");\r\n            let SettingBtn = document.createElement(\"button\");\r\n            TitleText.style.position = \"absolute\";\r\n            TitleText.style.top = \"20px\";\r\n            TitleText.style.left = \"20px\";\r\n            TitleText.style.fontSize = \"80px\";\r\n            TitleText.style.fontFamily = \"fantasy\";\r\n            TitleText.style.color = \"black\";\r\n            TitleText.style.margin = \"0\";\r\n            TitleText.textContent = \"!Game!\";\r\n            StartBtn.className = \"TitleBtn\";\r\n            StartBtn.style.bottom = \"140px\";\r\n            StartBtn.style.right = \"20px\";\r\n            StartBtn.textContent = \"ゲーム開始\";\r\n            StartBtn.addEventListener(\"touchend\", () => {\r\n                SceneManager_1.SceneManager.Instance.AddScene(new GameScene_1.GameScene());\r\n            });\r\n            SettingBtn.className = \"TitleBtn\";\r\n            SettingBtn.style.bottom = \"20px\";\r\n            SettingBtn.style.right = \"20px\";\r\n            SettingBtn.textContent = \"設定\";\r\n            SettingBtn.addEventListener(\"touchend\", () => {\r\n                SceneManager_1.SceneManager.Instance.AddScene(new SettingScene_1.SettingScene());\r\n            });\r\n            textResource.innerHTML = \"素材元一覧:<br>ひみつ:http://uros.web.fc2.com/<br>ゆるドラシル:https://yurudora.com/tkool/\";\r\n            textResource.style.position = \"absolute\";\r\n            textResource.style.top = \"0\";\r\n            textResource.style.right = \"0\";\r\n            textResource.style.textAlign = \"right\";\r\n            this.UIs.push(textResource);\r\n            this.UIs.push(TitleText);\r\n            this.UIs.push(StartBtn);\r\n            this.UIs.push(SettingBtn);\r\n        }\r\n        call() {\r\n            super.call();\r\n        }\r\n        update() {\r\n        }\r\n        draw(canvas) {\r\n            canvas.clearRect(0, 0, GlobalData_1.GlobalData.Instance.ScreenSize.width, GlobalData_1.GlobalData.Instance.ScreenSize.height);\r\n        }\r\n    }\r\n    exports.TitleScene = TitleScene;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=TitleScene.js.map\n\n//# sourceURL=webpack:///./public/Scene/TitleScene.js?");

/***/ }),

/***/ "./public/Skill/Ball.js":
/*!******************************!*\
  !*** ./public/Skill/Ball.js ***!
  \******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./DamageObj */ \"./public/Skill/DamageObj.js\"), __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, DamageObj_1, Position_1, Size_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.DamageBall = void 0;\r\n    class DamageBall extends DamageObj_1.DamageObj {\r\n        constructor(user, damage, radius, rotate, speed, position, anime, endanime) {\r\n            super(user, damage);\r\n            this.alpha = 1;\r\n            this.minusPer = 0.95;\r\n            this.deleteTime = 60;\r\n            this.radius = radius;\r\n            let cos = Math.cos(rotate * Math.PI / 180);\r\n            let sin = Math.sin(rotate * Math.PI / 180);\r\n            this.Speed = new Position_1.Position(cos * speed, sin * speed);\r\n            this.size = new Size_1.Size(radius * 2, radius * 2);\r\n            this.position = position;\r\n            this.Animation = anime;\r\n            this.EndAnimation = endanime;\r\n        }\r\n        update(scene) {\r\n            if (this.mode == \"normal\") {\r\n                this.position.x += this.Speed.x;\r\n                this.position.y += this.Speed.y;\r\n                if (this.position.x - this.radius < -GlobalData_1.GlobalData.Instance.ScreenSize.width ||\r\n                    this.position.x + this.radius > GlobalData_1.GlobalData.Instance.ScreenSize.width * 2 ||\r\n                    this.position.y - this.radius < -GlobalData_1.GlobalData.Instance.ScreenSize ||\r\n                    this.position.y + this.radius > GlobalData_1.GlobalData.Instance.ScreenSize.height * 2) {\r\n                    this.mode = \"end\";\r\n                }\r\n                let targets = [];\r\n                if (this.user == \"enemy\") {\r\n                    targets = [scene.hero];\r\n                }\r\n                else if (this.user == \"hero\") {\r\n                    for (let i = 0; i < scene.enemys.length; i++) {\r\n                        targets.push(scene.enemys[i]);\r\n                    }\r\n                }\r\n                else if (this.user == \"any\") {\r\n                    targets = [scene.hero];\r\n                    for (let i = 0; i < scene.enemys.length; i++) {\r\n                        targets.push(scene.enemys[i]);\r\n                    }\r\n                }\r\n                for (let i = 0; i < targets.length; i++) {\r\n                    let target = targets[i];\r\n                    let saX = target.position.x - this.position.x;\r\n                    let saY = target.position.y - this.position.y;\r\n                    let saRadius = target.size.width / 2 + this.radius;\r\n                    if (saX * saX + saY * saY < saRadius * saRadius) {\r\n                        target.damage(this.damage);\r\n                        this.mode = \"end\";\r\n                    }\r\n                }\r\n                this.Animation.Update();\r\n                this.DrawImage = this.Animation.image;\r\n            }\r\n            else if (this.mode == \"end\") {\r\n                this.alpha *= this.minusPer;\r\n                this.EndAnimation.Update();\r\n                this.DrawImage = this.EndAnimation.image;\r\n                this.deleteTime--;\r\n                if (this.deleteTime <= 0) {\r\n                    this.mode = \"delete\";\r\n                }\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            ctx.globalAlpha = this.alpha;\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.size.width / 2), Math.floor(this.position.y - this.size.height / 2));\r\n            ctx.globalAlpha = 1.0;\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.DamageBall = DamageBall;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Ball.js.map\n\n//# sourceURL=webpack:///./public/Skill/Ball.js?");

/***/ }),

/***/ "./public/Skill/DamageField.js":
/*!*************************************!*\
  !*** ./public/Skill/DamageField.js ***!
  \*************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./DamageObj */ \"./public/Skill/DamageObj.js\"), __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, DamageObj_1, Position_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.DamageField = void 0;\r\n    class DamageField extends DamageObj_1.DamageObj {\r\n        constructor(user, size, rotate, position, limit, anime) {\r\n            super(user, 0);\r\n            this.alpha = 1;\r\n            this.limit = limit;\r\n            this.size = size;\r\n            this.position = new Position_1.Position(Math.floor(position.x), Math.floor(position.y));\r\n            this.rotate = rotate;\r\n            this.Animation = anime;\r\n            this.mode = \"normal\";\r\n            this.radius = Math.min(size.width, size.height) / 2;\r\n        }\r\n        update(scene) {\r\n            let targets = [];\r\n            if (this.mode == \"normal\") {\r\n                if (this.user == \"hero\") {\r\n                    targets = scene.enemys;\r\n                }\r\n                else if (this.user == \"enemy\") {\r\n                    targets = [scene.hero];\r\n                }\r\n                else if (this.user == \"any\") {\r\n                    targets = [scene.hero];\r\n                    for (let i = 0; i < scene.enemys.length; i++) {\r\n                        targets.push(scene.enemys[i]);\r\n                    }\r\n                }\r\n                for (let i = 0; i < targets.length; i++) {\r\n                    let target = targets[i];\r\n                    if (target != null) {\r\n                        let saX = target.position.x - this.position.x;\r\n                        let saY = target.position.y - this.position.y;\r\n                        let sa = target.size.width / 2 + this.size.width / 2;\r\n                        if (saX * saX + saY * saY < sa * sa) {\r\n                            target.condition[\"やけど\"].ON(120, 30);\r\n                        }\r\n                        this.Animation.Update();\r\n                        this.DrawImage = this.Animation.image;\r\n                        if (this.limit > 0)\r\n                            this.limit--;\r\n                        if (this.limit == 0) {\r\n                            this.mode = \"delete\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            ctx.globalAlpha = this.alpha;\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.DrawImage.width / 2), Math.floor(this.position.y - this.DrawImage.height / 2));\r\n            ctx.globalAlpha = 1.0;\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.DamageField = DamageField;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=DamageField.js.map\n\n//# sourceURL=webpack:///./public/Skill/DamageField.js?");

/***/ }),

/***/ "./public/Skill/DamageObj.js":
/*!***********************************!*\
  !*** ./public/Skill/DamageObj.js ***!
  \***********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Object/Object */ \"./public/Object/Object.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Object_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.DamageObj = void 0;\r\n    class DamageObj extends Object_1.GameObject {\r\n        constructor(user, damage) {\r\n            super();\r\n            this.user = user;\r\n            this.damage = damage;\r\n            this.mode = \"normal\";\r\n        }\r\n        draw(ctx) {\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.DrawImage.width / 2), Math.floor(this.position.y - this.DrawImage.height / 2));\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.DamageObj = DamageObj;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=DamageObj.js.map\n\n//# sourceURL=webpack:///./public/Skill/DamageObj.js?");

/***/ }),

/***/ "./public/Skill/Effect.js":
/*!********************************!*\
  !*** ./public/Skill/Effect.js ***!
  \********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./DamageObj */ \"./public/Skill/DamageObj.js\"), __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, DamageObj_1, Position_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.DamageEffect = void 0;\r\n    class DamageEffect extends DamageObj_1.DamageObj {\r\n        constructor(user, limit, size, rotate, position, anime) {\r\n            super(user, 0);\r\n            this.limit = limit;\r\n            this.size = size;\r\n            this.position = new Position_1.Position(Math.floor(position.x), Math.floor(position.y));\r\n            this.rotate = rotate;\r\n            this.Animation = anime;\r\n            this.mode = \"normal\";\r\n            this.radius = Math.min(size.width, size.height) / 2;\r\n        }\r\n        update(scene) {\r\n            this.limit--;\r\n            if (this.limit <= 0)\r\n                this.mode = \"delete\";\r\n            this.Animation.Update();\r\n            this.DrawImage = this.Animation.image;\r\n        }\r\n        draw(ctx) {\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.DrawImage.width / 2), Math.floor(this.position.y - this.DrawImage.height / 2));\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.DamageEffect = DamageEffect;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Effect.js.map\n\n//# sourceURL=webpack:///./public/Skill/Effect.js?");

/***/ }),

/***/ "./public/Skill/Rect.js":
/*!******************************!*\
  !*** ./public/Skill/Rect.js ***!
  \******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./DamageObj */ \"./public/Skill/DamageObj.js\"), __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, DamageObj_1, Position_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.DamageRect = void 0;\r\n    class DamageRect extends DamageObj_1.DamageObj {\r\n        constructor(user, damage, size, rotate, position, countDown, anime) {\r\n            super(user, damage);\r\n            this.alpha = 1;\r\n            this.minusPer = 0.95;\r\n            this.countdown = countDown;\r\n            this.size = size;\r\n            this.position = new Position_1.Position(Math.floor(position.x), Math.floor(position.y));\r\n            this.rotate = rotate;\r\n            this.Animation = anime;\r\n            this.mode = \"normal\";\r\n            this.radius = Math.min(size.width, size.height) / 2;\r\n        }\r\n        update(scene) {\r\n            if (this.mode == \"normal\" || this.mode == \"end\") {\r\n                let targets = [];\r\n                if (this.mode == \"normal\") {\r\n                    if (this.user == \"hero\") {\r\n                        targets = scene.enemys;\r\n                    }\r\n                    else if (this.user == \"enemy\") {\r\n                        targets = [scene.hero];\r\n                    }\r\n                    else if (this.user == \"any\") {\r\n                        targets = [scene.hero];\r\n                        for (let i = 0; i < scene.enemys.length; i++) {\r\n                            targets.push(scene.enemys[i]);\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < targets.length; i++) {\r\n                        let target = targets[i];\r\n                        if (target != null) {\r\n                            let target_length = new Position_1.Position(target.position.x - this.position.x, target.position.y - this.position.y);\r\n                            let radian = Math.atan2(target_length.x, target_length.y);\r\n                            let rotate = parseInt((radian * 180 / Math.PI).toString());\r\n                            if (rotate < 0)\r\n                                rotate += 360;\r\n                            let target_rotate = this.rotate - rotate;\r\n                            let x = Math.floor(this.position.x + Math.cos(target_rotate) * target_length.x);\r\n                            let y = Math.floor(this.position.y + Math.sin(target_rotate) * target_length.y);\r\n                            let circle = {\r\n                                \"x\": x,\r\n                                \"y\": y,\r\n                                \"radius\": target.size.width / 2,\r\n                            };\r\n                            let sa = new Position_1.Position(Math.abs(this.position.x - circle.x), Math.abs(this.position.y - circle.y));\r\n                            let flag = false;\r\n                            if (sa.x <= this.size.width / 2) {\r\n                                if (sa.y <= this.size.height / 2 + circle.radius)\r\n                                    flag = true;\r\n                            }\r\n                            if (sa.y <= this.size.height / 2) {\r\n                                if (sa.y <= this.size.height / 2 + circle.radius)\r\n                                    flag = true;\r\n                            }\r\n                            let dx = sa.x - this.size.width / 2;\r\n                            let dy = sa.y - this.size.height / 2;\r\n                            if (dx * dx + dy * dy <= circle.radius * circle.radius)\r\n                                flag = true;\r\n                            if (flag) {\r\n                                target.damage(this.damage);\r\n                            }\r\n                            this.mode = \"end\";\r\n                        }\r\n                        else {\r\n                            this.mode = \"delete\";\r\n                        }\r\n                    }\r\n                }\r\n                this.Animation.Update();\r\n                this.DrawImage = this.Animation.image;\r\n                if (this.countdown > 0)\r\n                    this.countdown--;\r\n                else {\r\n                    this.mode = \"delete\";\r\n                }\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            ctx.globalAlpha = this.alpha;\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.DrawImage.width / 2), Math.floor(this.position.y - this.DrawImage.height / 2));\r\n            ctx.globalAlpha = 1.0;\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.DamageRect = DamageRect;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Rect.js.map\n\n//# sourceURL=webpack:///./public/Skill/Rect.js?");

/***/ }),

/***/ "./public/Skill/Skill.js":
/*!*******************************!*\
  !*** ./public/Skill/Skill.js ***!
  \*******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ../Base/Clip */ \"./public/Base/Clip.js\"), __webpack_require__(/*! ../Base/Animation */ \"./public/Base/Animation.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Rectangle_1, Clip_1, Animation_1, Size_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.Skill = void 0;\r\n    class Skill {\r\n        constructor(skillType, name, maxPoint, delay, image, active) {\r\n            this.activeNow = false;\r\n            this.skillType = \"\";\r\n            this.name = \"SuperClass\";\r\n            this.maxPoint = 5;\r\n            this.point = 0;\r\n            this.Deleay = 1;\r\n            this.nowFlame = 0;\r\n            this.skillType = skillType;\r\n            this.name = name;\r\n            this.maxPoint = maxPoint;\r\n            this.Deleay = delay;\r\n            this.saveImage = image;\r\n            this.image = document.createElement(\"canvas\");\r\n            this.image.width = 80;\r\n            this.image.height = 80;\r\n            image.addEventListener(\"load\", () => {\r\n                this.image = Clip_1.Clip.Clip_Circle(image, 80, new Rectangle_1.Rectangle(0, 0, this.image.width, this.image.height));\r\n            });\r\n            if (image.complete)\r\n                this.image = Clip_1.Clip.Clip_Circle(image, 80, new Rectangle_1.Rectangle(0, 0, this.image.width, this.image.height));\r\n            this.activeFunction = active;\r\n            this.animation1 = new Animation_1.GameAnimation(0, new Size_1.Size(100, 100));\r\n            this.animation2 = new Animation_1.GameAnimation(0, new Size_1.Size(100, 100));\r\n            this.animation3 = new Animation_1.GameAnimation(0, new Size_1.Size(100, 100));\r\n            this.animation4 = new Animation_1.GameAnimation(0, new Size_1.Size(100, 100));\r\n        }\r\n        active() {\r\n            this.activeNow = true;\r\n            this.point = 0;\r\n            this.nowFlame = 1;\r\n        }\r\n        notActive() {\r\n            this.activeNow = false;\r\n            this.nowFlame = 1;\r\n        }\r\n    }\r\n    exports.Skill = Skill;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Skill.js.map\n\n//# sourceURL=webpack:///./public/Skill/Skill.js?");

/***/ }),

/***/ "./public/Skill/Skills.js":
/*!********************************!*\
  !*** ./public/Skill/Skills.js ***!
  \********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/Rectangle */ \"./public/Base/Rectangle.js\"), __webpack_require__(/*! ./Skill */ \"./public/Skill/Skill.js\"), __webpack_require__(/*! ./Ball */ \"./public/Skill/Ball.js\"), __webpack_require__(/*! ./Tracking */ \"./public/Skill/Tracking.js\"), __webpack_require__(/*! ./Rect */ \"./public/Skill/Rect.js\"), __webpack_require__(/*! ../Base/ResourceManager */ \"./public/Base/ResourceManager.js\"), __webpack_require__(/*! ../Base/Animation */ \"./public/Base/Animation.js\"), __webpack_require__(/*! ./Zisa */ \"./public/Skill/Zisa.js\"), __webpack_require__(/*! ./DamageField */ \"./public/Skill/DamageField.js\"), __webpack_require__(/*! ./Effect */ \"./public/Skill/Effect.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, Rectangle_1, Skill_1, Ball_1, Tracking_1, Rect_1, ResourceManager_1, Animation_1, Zisa_1, DamageField_1, Effect_1, GlobalData_1) {\r\n    \"use strict\";\r\n    var _a;\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.SkillList = exports.Skills = void 0;\r\n    let icon1 = document.createElement(\"img\");\r\n    let icon2 = document.createElement(\"img\");\r\n    icon1.src = \"https://12345ff.github.io/Image/Icon/Icon2.png\";\r\n    icon2.src = \"https://12345ff.github.io/Image/Icon/Icon3.png\";\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"i1\", icon1);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"i2\", icon2);\r\n    let image1 = document.createElement(\"img\");\r\n    let image2 = document.createElement(\"img\");\r\n    let image3 = document.createElement(\"img\");\r\n    let image4 = document.createElement(\"img\");\r\n    let image5 = document.createElement(\"img\");\r\n    let image6 = document.createElement(\"img\");\r\n    let image7 = document.createElement(\"img\");\r\n    let image8 = document.createElement(\"img\");\r\n    let image9 = document.createElement(\"img\");\r\n    let image10 = document.createElement(\"img\");\r\n    let image11 = document.createElement(\"img\");\r\n    let image12 = document.createElement(\"img\");\r\n    let image13 = document.createElement(\"img\");\r\n    let image14 = document.createElement(\"img\");\r\n    let image15 = document.createElement(\"img\");\r\n    image1.src = \"https://12345ff.github.io/Image/Effect/effect1.png\";\r\n    image2.src = \"https://12345ff.github.io/Image/Effect/effect2.png\";\r\n    image3.src = \"https://12345ff.github.io/Image/Effect/effect3.png\";\r\n    image4.src = \"https://12345ff.github.io/Image/Effect/effect4.png\";\r\n    image5.src = \"https://12345ff.github.io/Image/Effect/effect5.png\";\r\n    image6.src = \"https://12345ff.github.io/Image/Effect/effect6.png\";\r\n    image7.src = \"https://12345ff.github.io/Image/Effect/effect7.png\";\r\n    image9.src = \"https://12345ff.github.io/Image/Effect/effect9.png\";\r\n    image8.src = \"https://12345ff.github.io/Image/Effect/effect8.png\";\r\n    image10.src = \"https://12345ff.github.io/Image/Effect/effect10.png\";\r\n    image11.src = \"https://12345ff.github.io/Image/Effect/effect11.png\";\r\n    image12.src = \"https://12345ff.github.io/Image/Effect/effect12.png\";\r\n    image13.src = \"https://12345ff.github.io/Image/Effect/effect13.png\";\r\n    image14.src = \"https://12345ff.github.io/Image/Effect/effect14.png\";\r\n    image15.src = \"https://12345ff.github.io/Image/Effect/effect15.png\";\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"1\", image1);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"2\", image2);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"3\", image3);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"4\", image4);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"5\", image5);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"6\", image6);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"7\", image7);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"8\", image8);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"9\", image9);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"10\", image10);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"11\", image11);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"12\", image12);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"13\", image13);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"14\", image14);\r\n    ResourceManager_1.ResourceManager.Instance.PlusImage(\"15\", image15);\r\n    class Skills {\r\n        //画像読み込み\r\n        static loadImage(animation, image, rects) {\r\n            if (image.complete) {\r\n                animation.SetUp2(image, rects);\r\n            }\r\n            else {\r\n                image.addEventListener(\"load\", () => {\r\n                    animation.SetUp2(image, rects);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    exports.Skills = Skills;\r\n    _a = Skills;\r\n    //何もない\r\n    Skills.none = new Skill_1.Skill(\"none\", \"none\", 3, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        console.log(\"skill->active\");\r\n    });\r\n    //通常火の玉\r\n    Skills.skill1 = new Skill_1.Skill(\"normal\", \"skill1\", 3, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        if (skill.nowFlame == 1) {\r\n            //アニメーション基礎用意\r\n            let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"1\");\r\n            let image2 = ResourceManager_1.ResourceManager.Instance.GetImage(\"8\");\r\n            skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n            skill.animation2 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n            skill.animation1.setInterval(10);\r\n            skill.animation2.setInterval(10);\r\n            //アニメーション用意\r\n            _a.loadImage(skill.animation1, image1, [\r\n                new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n                new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n            ]);\r\n            _a.loadImage(skill.animation2, image2, [\r\n                new Rectangle_1.Rectangle(0, 0, 180, 180), new Rectangle_1.Rectangle(180, 0, 180, 180), new Rectangle_1.Rectangle(360, 0, 180, 180), new Rectangle_1.Rectangle(540, 0, 180, 180),\r\n                new Rectangle_1.Rectangle(720, 0, 180, 180), new Rectangle_1.Rectangle(900, 0, 180, 180), new Rectangle_1.Rectangle(1080, 0, 180, 180), new Rectangle_1.Rectangle(1260, 0, 180, 180),\r\n                new Rectangle_1.Rectangle(1440, 0, 180, 180), new Rectangle_1.Rectangle(1620, 0, 180, 180),\r\n            ]);\r\n            scene.DamageObjs.push(new Ball_1.DamageBall(executor.Type, 100, 25, executor.rotate, 3, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1, skill.animation2));\r\n        }\r\n    });\r\n    //追尾火の玉\r\n    Skills.skill2 = new Skill_1.Skill(\"normal\", \"skill1\", 1, 3, ResourceManager_1.ResourceManager.Instance.GetImage(\"i2\"), (scene, executor, skill) => {\r\n        if (skill.nowFlame == 1) {\r\n            //アニメーション基礎用意\r\n            let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"1\");\r\n            let image2 = ResourceManager_1.ResourceManager.Instance.GetImage(\"8\");\r\n            skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n            skill.animation2 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n            skill.animation1.setInterval(10);\r\n            skill.animation2.setInterval(10);\r\n            //アニメーション用意\r\n            _a.loadImage(skill.animation1, image1, [\r\n                new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n                new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n            ]);\r\n            _a.loadImage(skill.animation2, image2, [\r\n                new Rectangle_1.Rectangle(0, 0, 180, 180), new Rectangle_1.Rectangle(180, 0, 180, 180), new Rectangle_1.Rectangle(360, 0, 180, 180), new Rectangle_1.Rectangle(540, 0, 180, 180),\r\n                new Rectangle_1.Rectangle(720, 0, 180, 180), new Rectangle_1.Rectangle(900, 0, 180, 180), new Rectangle_1.Rectangle(1080, 0, 180, 180), new Rectangle_1.Rectangle(1260, 0, 180, 180),\r\n                new Rectangle_1.Rectangle(1440, 0, 180, 180), new Rectangle_1.Rectangle(1620, 0, 180, 180),\r\n            ]);\r\n            //スキル用意\r\n            scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 50, 25, 0, 3, 30, 5, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1, skill.animation2));\r\n            scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 50, 25, 180, 3, 30, 5, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1, skill.animation2));\r\n        }\r\n        skill.nowFlame++;\r\n    });\r\n    //火炎砲\r\n    Skills.skill3 = new Skill_1.Skill(\"normal\", \"skill1\", 3, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        if (skill.nowFlame == 1 && executor.targetPos != null) {\r\n            if (skill.nowFlame == 1) {\r\n                //アニメーション基礎用意\r\n                let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"1\");\r\n                let image2 = ResourceManager_1.ResourceManager.Instance.GetImage(\"8\");\r\n                skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(200, 40));\r\n                skill.animation2 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(200, 40));\r\n                skill.animation1.setInterval(10);\r\n                skill.animation2.setInterval(10);\r\n                //アニメーション用意\r\n                _a.loadImage(skill.animation1, image1, [\r\n                    new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n                    new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n                ]);\r\n                _a.loadImage(skill.animation2, image2, [\r\n                    new Rectangle_1.Rectangle(0, 0, 180, 180), new Rectangle_1.Rectangle(180, 0, 180, 180), new Rectangle_1.Rectangle(360, 0, 180, 180), new Rectangle_1.Rectangle(540, 0, 180, 180),\r\n                    new Rectangle_1.Rectangle(720, 0, 180, 180), new Rectangle_1.Rectangle(900, 0, 180, 180), new Rectangle_1.Rectangle(1080, 0, 180, 180), new Rectangle_1.Rectangle(1260, 0, 180, 180),\r\n                    new Rectangle_1.Rectangle(1440, 0, 180, 180), new Rectangle_1.Rectangle(1620, 0, 180, 180),\r\n                ]);\r\n            }\r\n            let sin = Math.sin(executor.rotate * Math.PI / 180);\r\n            let cos = Math.cos(executor.rotate * Math.PI / 180);\r\n            scene.DamageObjs.push(new Rect_1.DamageRect(executor.Type, 10, new Size_1.Size(200, 40), executor.rotate, new Position_1.Position(executor.position.x + cos * (50 + executor.size.width), executor.position.y + sin * (50 + executor.size.height)), 30, skill.animation1));\r\n        }\r\n        skill.nowFlame++;\r\n    });\r\n    //時限爆弾\r\n    Skills.skill4 = new Skill_1.Skill(\"normal\", \"skill1\", 1, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        if (skill.nowFlame == 1 && executor.targetPos != null) {\r\n            if (skill.nowFlame == 1) {\r\n                //アニメーション基礎用意\r\n                let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"2\");\r\n                let image2 = ResourceManager_1.ResourceManager.Instance.GetImage(\"8\");\r\n                skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n                skill.animation2 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n                skill.animation1.setInterval(10);\r\n                skill.animation2.setInterval(10);\r\n                //アニメーション用意\r\n                _a.loadImage(skill.animation1, image1, [\r\n                    new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n                    new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n                ]);\r\n                _a.loadImage(skill.animation2, image2, [\r\n                    new Rectangle_1.Rectangle(0, 0, 180, 180), new Rectangle_1.Rectangle(180, 0, 180, 180), new Rectangle_1.Rectangle(360, 0, 180, 180), new Rectangle_1.Rectangle(540, 0, 180, 180),\r\n                    new Rectangle_1.Rectangle(720, 0, 180, 180), new Rectangle_1.Rectangle(900, 0, 180, 180), new Rectangle_1.Rectangle(1080, 0, 180, 180), new Rectangle_1.Rectangle(1260, 0, 180, 180),\r\n                    new Rectangle_1.Rectangle(1440, 0, 180, 180), new Rectangle_1.Rectangle(1620, 0, 180, 180),\r\n                ]);\r\n                let sin = Math.sin(executor.rotate * Math.PI / 180);\r\n                let cos = Math.cos(executor.rotate * Math.PI / 180);\r\n                scene.DamageObjs.push(new Zisa_1.DamageZisa(executor.Type, 20, 120, 60, new Size_1.Size(50, 50), 0, new Position_1.Position(executor.position.x + cos, executor.position.y + sin), skill.animation1, skill.animation2));\r\n            }\r\n        }\r\n        skill.nowFlame++;\r\n    });\r\n    //放火\r\n    Skills.skill5 = new Skill_1.Skill(\"normal\", \"skill1\", 1, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        //アニメーション基礎用意\r\n        let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"1\");\r\n        skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n        skill.animation1.setInterval(10);\r\n        _a.loadImage(skill.animation1, image1, [\r\n            new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n            new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n        ]);\r\n        let sin = Math.sin(executor.rotate * Math.PI / 180);\r\n        let cos = Math.cos(executor.rotate * Math.PI / 180);\r\n        scene.DamageObjs.push(new DamageField_1.DamageField(executor.Type, new Size_1.Size(50, 50), 0, new Position_1.Position(executor.position.x + cos * 60, executor.position.y + sin * 60), 300, skill.animation1));\r\n    });\r\n    //三連火の玉\r\n    Skills.skill6 = new Skill_1.Skill(\"normal\", \"skill1\", 5, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i2\"), (scene, executor, skill) => {\r\n        //アニメーション基礎用意\r\n        let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"1\");\r\n        let image2 = ResourceManager_1.ResourceManager.Instance.GetImage(\"8\");\r\n        skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n        skill.animation2 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n        skill.animation1.setInterval(10);\r\n        skill.animation2.setInterval(10);\r\n        skill.animation2.limit = 1;\r\n        //アニメーション用意\r\n        _a.loadImage(skill.animation1, image1, [\r\n            new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n            new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n        ]);\r\n        _a.loadImage(skill.animation2, image2, [\r\n            new Rectangle_1.Rectangle(0, 0, 180, 180), new Rectangle_1.Rectangle(180, 0, 180, 180), new Rectangle_1.Rectangle(360, 0, 180, 180), new Rectangle_1.Rectangle(540, 0, 180, 180),\r\n            new Rectangle_1.Rectangle(720, 0, 180, 180), new Rectangle_1.Rectangle(900, 0, 180, 180), new Rectangle_1.Rectangle(1080, 0, 180, 180), new Rectangle_1.Rectangle(1260, 0, 180, 180),\r\n            new Rectangle_1.Rectangle(1440, 0, 180, 180), new Rectangle_1.Rectangle(1620, 0, 180, 180),\r\n        ]);\r\n        //技発動\r\n        let anime1 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime2 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime3 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        scene.DamageObjs.push(new Ball_1.DamageBall(executor.Type, 40, 10, executor.rotate, 3, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1, Object.assign(anime1, skill.animation2)));\r\n        scene.DamageObjs.push(new Ball_1.DamageBall(executor.Type, 40, 10, executor.rotate - 30, 3, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1, Object.assign(anime2, skill.animation2)));\r\n        scene.DamageObjs.push(new Ball_1.DamageBall(executor.Type, 40, 10, executor.rotate + 30, 3, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1, Object.assign(anime3, skill.animation2)));\r\n    });\r\n    //超追撃\r\n    Skills.skill7 = new Skill_1.Skill(\"normal\", \"skill1\", 8, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"11\");\r\n        skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n        skill.animation1.setInterval(5);\r\n        _a.loadImage(skill.animation1, image1, [\r\n            new Rectangle_1.Rectangle(0, 0, 240, 240), new Rectangle_1.Rectangle(240, 0, 240, 240), new Rectangle_1.Rectangle(480, 0, 240, 240),\r\n            new Rectangle_1.Rectangle(720, 0, 240, 240), new Rectangle_1.Rectangle(960, 0, 240, 240), new Rectangle_1.Rectangle(1200, 0, 240, 240),\r\n            new Rectangle_1.Rectangle(1440, 0, 240, 240), new Rectangle_1.Rectangle(1680, 0, 240, 240), new Rectangle_1.Rectangle(1920, 0, 240, 240),\r\n            new Rectangle_1.Rectangle(2160, 0, 240, 240), new Rectangle_1.Rectangle(2400, 0, 240, 240), new Rectangle_1.Rectangle(2640, 0, 240, 240),\r\n        ]);\r\n        let anime1 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime2 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime3 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime4 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime5 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate - 90, 15, 60, 10, new Position_1.Position(executor.position.x, executor.position.y), Object.assign(anime1, skill.animation1), anime1));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate - 45, 15, 60, 10, new Position_1.Position(executor.position.x, executor.position.y), Object.assign(anime2, skill.animation1), anime2));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 15, 60, 10, new Position_1.Position(executor.position.x, executor.position.y), Object.assign(anime3, skill.animation1), anime3));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate + 45, 15, 60, 10, new Position_1.Position(executor.position.x, executor.position.y), Object.assign(anime4, skill.animation1), anime4));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate + 90, 15, 60, 10, new Position_1.Position(executor.position.x, executor.position.y), Object.assign(anime5, skill.animation1), anime5));\r\n    });\r\n    //光撃追撃(輪)\r\n    Skills.skill8 = new Skill_1.Skill(\"normal\", \"skill1\", 8, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i2\"), (scene, executor, skill) => {\r\n        let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"11\");\r\n        skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n        skill.animation1.setInterval(5);\r\n        _a.loadImage(skill.animation1, image1, [\r\n            new Rectangle_1.Rectangle(0, 0, 240, 240), new Rectangle_1.Rectangle(240, 0, 240, 240), new Rectangle_1.Rectangle(480, 0, 240, 240),\r\n            new Rectangle_1.Rectangle(720, 0, 240, 240), new Rectangle_1.Rectangle(960, 0, 240, 240), new Rectangle_1.Rectangle(1200, 0, 240, 240),\r\n            new Rectangle_1.Rectangle(1440, 0, 240, 240), new Rectangle_1.Rectangle(1680, 0, 240, 240), new Rectangle_1.Rectangle(1920, 0, 240, 240),\r\n            new Rectangle_1.Rectangle(2160, 0, 240, 240), new Rectangle_1.Rectangle(2400, 0, 240, 240), new Rectangle_1.Rectangle(2640, 0, 240, 240),\r\n        ]);\r\n        let anime1 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime2 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime3 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime4 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime5 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime6 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime7 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime8 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x + 30, executor.position.y), Object.assign(anime1, skill.animation1), anime1));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x + 30, executor.position.y + 30), Object.assign(anime2, skill.animation1), anime2));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x, executor.position.y + 30), Object.assign(anime3, skill.animation1), anime3));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x - 30, executor.position.y - 30), Object.assign(anime4, skill.animation1), anime4));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x - 30, executor.position.y), Object.assign(anime5, skill.animation1), anime5));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x - 30, executor.position.y + 30), Object.assign(anime6, skill.animation1), anime6));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x, executor.position.y - 30), Object.assign(anime7, skill.animation1), anime7));\r\n        scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate, 10, 60, 10, new Position_1.Position(executor.position.x + 30, executor.position.y - 30), Object.assign(anime8, skill.animation1), anime8));\r\n    });\r\n    //光撃追撃(乱発)\r\n    Skills.skill9 = new Skill_1.Skill(\"normal\", \"skill1\", 8, 180, ResourceManager_1.ResourceManager.Instance.GetImage(\"i2\"), (scene, executor, skill) => {\r\n        if (skill.nowFlame == 1) {\r\n            let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"11\");\r\n            skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n            skill.animation1.setInterval(5);\r\n            _a.loadImage(skill.animation1, image1, [\r\n                new Rectangle_1.Rectangle(0, 0, 240, 240), new Rectangle_1.Rectangle(240, 0, 240, 240), new Rectangle_1.Rectangle(480, 0, 240, 240),\r\n                new Rectangle_1.Rectangle(720, 0, 240, 240), new Rectangle_1.Rectangle(960, 0, 240, 240), new Rectangle_1.Rectangle(1200, 0, 240, 240),\r\n                new Rectangle_1.Rectangle(1440, 0, 240, 240), new Rectangle_1.Rectangle(1680, 0, 240, 240), new Rectangle_1.Rectangle(1920, 0, 240, 240),\r\n                new Rectangle_1.Rectangle(2160, 0, 240, 240), new Rectangle_1.Rectangle(2400, 0, 240, 240), new Rectangle_1.Rectangle(2640, 0, 240, 240),\r\n            ]);\r\n        }\r\n        if (skill.nowFlame % 20 == 0) {\r\n            let anime1 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n            scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 15, 25, executor.rotate + skill.nowFlame % 30, 10, 60, 10, new Position_1.Position(executor.position.x + 30, executor.position.y), Object.assign(anime1, skill.animation1), anime1));\r\n        }\r\n        skill.nowFlame++;\r\n    });\r\n    //自爆\r\n    Skills.skill10 = new Skill_1.Skill(\"normal\", \"skill1\", 10, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        //アニメーション基礎用意\r\n        let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"1\");\r\n        let image2 = ResourceManager_1.ResourceManager.Instance.GetImage(\"8\");\r\n        skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n        skill.animation2 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(100, 100));\r\n        skill.animation1.setInterval(10);\r\n        skill.animation2.setInterval(10);\r\n        skill.animation2.limit = 1;\r\n        //アニメーション用意\r\n        _a.loadImage(skill.animation1, image1, [\r\n            new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n            new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n        ]);\r\n        _a.loadImage(skill.animation2, image2, [\r\n            new Rectangle_1.Rectangle(0, 0, 180, 180), new Rectangle_1.Rectangle(180, 0, 180, 180), new Rectangle_1.Rectangle(360, 0, 180, 180), new Rectangle_1.Rectangle(540, 0, 180, 180),\r\n            new Rectangle_1.Rectangle(720, 0, 180, 180), new Rectangle_1.Rectangle(900, 0, 180, 180), new Rectangle_1.Rectangle(1080, 0, 180, 180), new Rectangle_1.Rectangle(1260, 0, 180, 180),\r\n            new Rectangle_1.Rectangle(1440, 0, 180, 180), new Rectangle_1.Rectangle(1620, 0, 180, 180),\r\n        ]);\r\n        let anime1 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        let anime2 = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n        scene.DamageObjs.push(new Rect_1.DamageRect(\"any\", 50, new Size_1.Size(100, 100), 0, new Position_1.Position(executor.position.x, executor.position.y + 1), 60, Object.assign(anime1, skill.animation2)));\r\n        scene.DamageObjs.push(new DamageField_1.DamageField(executor.Type, new Size_1.Size(100, 100), 0, new Position_1.Position(executor.position.x, executor.position.y), 600, Object.assign(anime2, skill.animation1)));\r\n    });\r\n    //ワープ\r\n    Skills.skill11 = new Skill_1.Skill(\"normal\", \"skill1\", 1, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        //アニメーション用意\r\n        let image = ResourceManager_1.ResourceManager.Instance.GetImage(\"7\");\r\n        skill.animation1 = new Animation_1.GameAnimation(0, new Size_1.Size(50, 50));\r\n        skill.animation1.limit = 1;\r\n        skill.animation1.setInterval(5);\r\n        _a.loadImage(skill.animation1, image, [\r\n            new Rectangle_1.Rectangle(0, 0, 94, 150), new Rectangle_1.Rectangle(94, 0, 94, 150), new Rectangle_1.Rectangle(188, 0, 94, 150),\r\n            new Rectangle_1.Rectangle(282, 0, 94, 150), new Rectangle_1.Rectangle(376, 0, 94, 150), new Rectangle_1.Rectangle(470, 0, 94, 150),\r\n            new Rectangle_1.Rectangle(560, 0, 94, 150), new Rectangle_1.Rectangle(658, 0, 94, 150), new Rectangle_1.Rectangle(752, 0, 94, 150),\r\n            new Rectangle_1.Rectangle(846, 0, 94, 150), new Rectangle_1.Rectangle(940, 0, 94, 150), new Rectangle_1.Rectangle(1034, 0, 94, 150),\r\n        ]);\r\n        scene.DamageObjs.push(new Effect_1.DamageEffect(executor.Type, 60, new Size_1.Size(50, 50), 0, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1));\r\n        executor.position.x = Math.random() * GlobalData_1.GlobalData.Instance.ScreenSize.width;\r\n        executor.position.y = Math.random() * GlobalData_1.GlobalData.Instance.ScreenSize.height;\r\n    });\r\n    //火の玉連撃\r\n    Skills.super1 = new Skill_1.Skill(\"super\", \"skill1\", 6, 150, ResourceManager_1.ResourceManager.Instance.GetImage(\"1\"), (scene, executor, skill) => {\r\n        if (skill.nowFlame == 1) {\r\n            //アニメーション基礎用意\r\n            let image1 = ResourceManager_1.ResourceManager.Instance.GetImage(\"1\");\r\n            let image2 = ResourceManager_1.ResourceManager.Instance.GetImage(\"8\");\r\n            skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n            skill.animation2 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(50, 50));\r\n            skill.animation1.setInterval(10);\r\n            skill.animation2.setInterval(10);\r\n            skill.animation2.limit = 1;\r\n            //アニメーション用意\r\n            _a.loadImage(skill.animation1, image1, [\r\n                new Rectangle_1.Rectangle(0, 0, 192, 192), new Rectangle_1.Rectangle(192, 0, 192, 192), new Rectangle_1.Rectangle(384, 0, 192, 192), new Rectangle_1.Rectangle(576, 0, 192, 192), new Rectangle_1.Rectangle(768, 0, 192, 192),\r\n                new Rectangle_1.Rectangle(0, 192, 192, 192), new Rectangle_1.Rectangle(192, 192, 192, 192), new Rectangle_1.Rectangle(384, 192, 192, 192), new Rectangle_1.Rectangle(576, 192, 192, 192), new Rectangle_1.Rectangle(768, 192, 192, 192)\r\n            ]);\r\n            _a.loadImage(skill.animation2, image2, [\r\n                new Rectangle_1.Rectangle(0, 0, 180, 180), new Rectangle_1.Rectangle(180, 0, 180, 180), new Rectangle_1.Rectangle(360, 0, 180, 180), new Rectangle_1.Rectangle(540, 0, 180, 180),\r\n                new Rectangle_1.Rectangle(720, 0, 180, 180), new Rectangle_1.Rectangle(900, 0, 180, 180), new Rectangle_1.Rectangle(1080, 0, 180, 180), new Rectangle_1.Rectangle(1260, 0, 180, 180),\r\n                new Rectangle_1.Rectangle(1440, 0, 180, 180), new Rectangle_1.Rectangle(1620, 0, 180, 180),\r\n            ]);\r\n        }\r\n        if (skill.nowFlame % 10 == 0) {\r\n            let anime = new Animation_1.GameAnimation(0, new Size_1.Size(10, 10));\r\n            scene.DamageObjs.push(new Tracking_1.TrackingBall(executor.Type, 10, 25, executor.rotate + skill.nowFlame, 3, 30, 5, new Position_1.Position(executor.position.x, executor.position.y), skill.animation1, skill.animation2));\r\n        }\r\n        skill.nowFlame++;\r\n    });\r\n    //強撃\r\n    Skills.super2 = new Skill_1.Skill(\"super\", \"super2\", 9, 1, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        let image = ResourceManager_1.ResourceManager.Instance.GetImage(\"15\");\r\n        skill.animation1 = new Animation_1.GameAnimation(executor.rotate, new Size_1.Size(150, 150));\r\n        skill.animation1.setInterval(5);\r\n        skill.animation1.limit = 1;\r\n        _a.loadImage(skill.animation1, image, [\r\n            new Rectangle_1.Rectangle(0, 0, 320, 240), new Rectangle_1.Rectangle(0, 240, 320, 240), new Rectangle_1.Rectangle(0, 480, 320, 240),\r\n            new Rectangle_1.Rectangle(0, 720, 320, 240), new Rectangle_1.Rectangle(0, 960, 320, 240), new Rectangle_1.Rectangle(0, 1200, 320, 240),\r\n            new Rectangle_1.Rectangle(0, 1440, 320, 240), new Rectangle_1.Rectangle(0, 1680, 320, 240), new Rectangle_1.Rectangle(1920, 0, 320, 240),\r\n            new Rectangle_1.Rectangle(2160, 0, 320, 240)\r\n        ]);\r\n        let sin = Math.sin(executor.rotate * Math.PI / 180);\r\n        let cos = Math.cos(executor.rotate * Math.PI / 180);\r\n        scene.DamageObjs.push(new Rect_1.DamageRect(executor.Type, 150, new Size_1.Size(150, 150), executor.rotate, new Position_1.Position(cos * 50 + executor.position.x, sin * 50 + executor.position.y), 60, skill.animation1));\r\n    });\r\n    //強撃2\r\n    Skills.super3 = new Skill_1.Skill(\"super\", \"super3\", 12, 120, ResourceManager_1.ResourceManager.Instance.GetImage(\"i1\"), (scene, executor, skill) => {\r\n        if (skill.nowFlame == 1) {\r\n            let image = ResourceManager_1.ResourceManager.Instance.GetImage(\"13\");\r\n            skill.animation1 = new Animation_1.GameAnimation(0, new Size_1.Size(200, 200));\r\n            skill.animation1.setInterval(5);\r\n            skill.animation1.limit = 1;\r\n            _a.loadImage(skill.animation1, image, [\r\n                new Rectangle_1.Rectangle(0, 0, 480, 480), new Rectangle_1.Rectangle(480, 0, 480, 480), new Rectangle_1.Rectangle(960, 0, 480, 480), new Rectangle_1.Rectangle(1440, 0, 480, 480), new Rectangle_1.Rectangle(1920, 0, 480, 480),\r\n                new Rectangle_1.Rectangle(0, 480, 480, 480), new Rectangle_1.Rectangle(480, 480, 480, 480), new Rectangle_1.Rectangle(960, 480, 480, 480), new Rectangle_1.Rectangle(1440, 480, 480, 480), new Rectangle_1.Rectangle(1920, 480, 480, 480),\r\n                new Rectangle_1.Rectangle(0, 960, 480, 480), new Rectangle_1.Rectangle(480, 960, 480, 480), new Rectangle_1.Rectangle(960, 960, 480, 480), new Rectangle_1.Rectangle(1440, 960, 480, 480), new Rectangle_1.Rectangle(1920, 960, 480, 480),\r\n            ]);\r\n            let sin = Math.sin(executor.rotate * Math.PI / 180);\r\n            let cos = Math.cos(executor.rotate * Math.PI / 180);\r\n            scene.DamageObjs.push(new Rect_1.DamageRect(executor.Type, 150, new Size_1.Size(200, 200), executor.rotate, new Position_1.Position(cos * 50 + executor.position.x, sin * 50 + executor.position.y), 60, skill.animation1));\r\n        }\r\n        skill.nowFlame++;\r\n    });\r\n    exports.SkillList = {\r\n        \"none\": Skills.none,\r\n        \"火球1\": Skills.skill1,\r\n        \"火球2\": Skills.skill6,\r\n        \"火球3\": Skills.skill2,\r\n        \"skill1\": Skills.skill1,\r\n        \"火の玉\": Skills.skill1,\r\n        \"3連火の玉\": Skills.skill6,\r\n        \"火の玉(追尾)\": Skills.skill2,\r\n        \"火炎砲\": Skills.skill3,\r\n        \"放火\": Skills.skill5,\r\n        \"時限式爆弾\": Skills.skill4,\r\n        \"光撃追撃\": Skills.skill7,\r\n        \"光撃追撃(輪)\": Skills.skill8,\r\n        \"光撃追撃(乱発)\": Skills.skill9,\r\n        \"自爆\": Skills.skill10,\r\n        \"ワープ\": Skills.skill11,\r\n        \"連続火炎弾\": Skills.super1,\r\n        \"強撃\": Skills.super2,\r\n        \"超攻撃\": Skills.super3,\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//lv1:3\r\n//lv2:5\r\n//lv3:8\r\n//lv4:10\r\n//必要ゲージは消費税方式\r\n//# sourceMappingURL=Skills.js.map\n\n//# sourceURL=webpack:///./public/Skill/Skills.js?");

/***/ }),

/***/ "./public/Skill/Tracking.js":
/*!**********************************!*\
  !*** ./public/Skill/Tracking.js ***!
  \**********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Base/Size */ \"./public/Base/Size.js\"), __webpack_require__(/*! ../Base/ChangeDirection */ \"./public/Base/ChangeDirection.js\"), __webpack_require__(/*! ./DamageObj */ \"./public/Skill/DamageObj.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, Position_1, Size_1, ChangeDirection_1, DamageObj_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.TrackingBall = void 0;\r\n    class TrackingBall extends DamageObj_1.DamageObj {\r\n        constructor(user, damage, radius, setRotate, setSpeed, setCount, trackSpeed, position, anime, endAnime) {\r\n            super(user, damage);\r\n            this.alpha = 1;\r\n            this.minusPer = 0.95;\r\n            this.radius = radius;\r\n            this.SetCount = setCount;\r\n            let cos1 = Math.cos(setRotate * Math.PI / 180);\r\n            let sin1 = Math.sin(setRotate * Math.PI / 180);\r\n            this.SetSpeed = new Position_1.Position(cos1 * setSpeed, sin1 * setSpeed);\r\n            this.TrackingSpeed = new Position_1.Position(trackSpeed, trackSpeed);\r\n            this.size = new Size_1.Size(radius * 2, radius * 2);\r\n            this.position = position;\r\n            this.Animation = anime;\r\n            this.EndAnimation = endAnime;\r\n            this.mode = \"set\";\r\n        }\r\n        update(scene) {\r\n            if (this.mode == \"set\") {\r\n                this.position.x += this.SetSpeed.x;\r\n                this.position.y += this.SetSpeed.y;\r\n                this.SetSpeed.x *= this.minusPer;\r\n                this.SetSpeed.y *= this.minusPer;\r\n                this.SetCount--;\r\n                if (this.SetCount <= 0) {\r\n                    let target = null;\r\n                    if (this.user == \"hero\") {\r\n                        target = scene.hero.target;\r\n                    }\r\n                    else if (this.user == \"enemy\") {\r\n                        target = scene.hero;\r\n                    }\r\n                    if (target != null) {\r\n                        let direction = (0, ChangeDirection_1.ChangeDirection)(new Position_1.Position(target.position.x - this.position.x, target.position.y - this.position.y));\r\n                        this.TrackingSpeed = new Position_1.Position(direction.x * this.TrackingSpeed.x, direction.y * this.TrackingSpeed.y);\r\n                        this.mode = \"tracking\";\r\n                    }\r\n                    else {\r\n                        this.mode = \"delete\";\r\n                    }\r\n                }\r\n            }\r\n            else if (this.mode == \"tracking\") {\r\n                this.position.x += this.TrackingSpeed.x;\r\n                this.position.y += this.TrackingSpeed.y;\r\n                if (this.position.x - this.radius < -GlobalData_1.GlobalData.Instance.ScreenSize.width ||\r\n                    this.position.x + this.radius > GlobalData_1.GlobalData.Instance.ScreenSize.width * 2 ||\r\n                    this.position.y - this.radius < -GlobalData_1.GlobalData.Instance.ScreenSize.height ||\r\n                    this.position.y + this.radius > GlobalData_1.GlobalData.Instance.ScreenSize.height * 2) {\r\n                    this.mode = \"end\";\r\n                }\r\n                if (this.user == \"enemy\") {\r\n                    const hero = scene.hero;\r\n                    let saX = hero.position.x - this.position.x;\r\n                    let saY = hero.position.y - this.position.y;\r\n                    let saRadius = hero.size.width / 2 + this.radius;\r\n                    if (saX * saX + saY * saY < saRadius * saRadius) {\r\n                        hero.damage(this.damage);\r\n                        this.mode = \"end\";\r\n                    }\r\n                }\r\n                else if (this.user == \"hero\") {\r\n                    for (let i = 0; i < scene.enemys.length; i++) {\r\n                        const enemy = scene.enemys[i];\r\n                        let saX = enemy.position.x - this.position.x;\r\n                        let saY = enemy.position.y - this.position.y;\r\n                        let saRadius = enemy.size.width / 2 + this.radius;\r\n                        if (saX * saX + saY * saY < saRadius * saRadius) {\r\n                            enemy.damage(this.damage);\r\n                            this.mode = \"end\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.mode == \"set\" || this.mode == \"tracking\") {\r\n                this.Animation.Update();\r\n                this.DrawImage = this.Animation.image;\r\n            }\r\n            else if (this.mode == \"end\") {\r\n                this.alpha *= this.minusPer;\r\n                this.EndAnimation.Update();\r\n                this.DrawImage = this.EndAnimation.image;\r\n                if (this.alpha < 0.1) {\r\n                    this.mode = \"delete\";\r\n                }\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            ctx.globalAlpha = this.alpha;\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.size.width / 2), Math.floor(this.position.y - this.size.height / 2));\r\n            ctx.globalAlpha = 1.0;\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.TrackingBall = TrackingBall;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Tracking.js.map\n\n//# sourceURL=webpack:///./public/Skill/Tracking.js?");

/***/ }),

/***/ "./public/Skill/Zisa.js":
/*!******************************!*\
  !*** ./public/Skill/Zisa.js ***!
  \******************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./DamageObj */ \"./public/Skill/DamageObj.js\"), __webpack_require__(/*! ../Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ../Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, DamageObj_1, Position_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.DamageZisa = void 0;\r\n    class DamageZisa extends DamageObj_1.DamageObj {\r\n        constructor(user, damage, count, endcount, size, rotate, position, anime, endAnime) {\r\n            super(user, damage);\r\n            this.size = size;\r\n            this.boomCount = count;\r\n            this.EndCount = endcount;\r\n            this.position = new Position_1.Position(Math.floor(position.x), Math.floor(position.y));\r\n            this.rotate = rotate;\r\n            this.Animation = anime;\r\n            this.EndAnimation = endAnime;\r\n            this.mode = \"normal\";\r\n            this.radius = Math.min(size.width, size.height) / 2;\r\n        }\r\n        update(scene) {\r\n            if (this.mode == \"normal\" || this.mode == \"end\" || this.mode == \"boom\") {\r\n                if (this.mode == \"normal\") {\r\n                    this.Animation.Update();\r\n                    this.DrawImage = this.Animation.image;\r\n                    if (this.boomCount > 0)\r\n                        this.boomCount--;\r\n                    else\r\n                        this.mode = \"boom\";\r\n                }\r\n                else if (this.mode == \"boom\") {\r\n                    let targets = [];\r\n                    if (this.user == \"hero\") {\r\n                        targets = scene.enemys;\r\n                    }\r\n                    else if (this.user == \"enemy\") {\r\n                        targets = [scene.hero];\r\n                    }\r\n                    else if (this.user == \"any\") {\r\n                        targets = [scene.hero];\r\n                        for (let i = 0; i < scene.enemys.length; i++) {\r\n                            targets.push(scene.enemys[i]);\r\n                        }\r\n                    }\r\n                    for (let i = 0; i < targets.length; i++) {\r\n                        let target = targets[i];\r\n                        let target_length = new Position_1.Position(target.position.x - this.position.x, target.position.y - this.position.y);\r\n                        let radian = Math.atan2(target_length.x, target_length.y);\r\n                        let rotate = parseInt((radian * 180 / Math.PI).toString());\r\n                        if (rotate < 0)\r\n                            rotate += 360;\r\n                        let target_rotate = this.rotate - rotate;\r\n                        let x = Math.floor(this.position.x + Math.cos(target_rotate) * target_length.x);\r\n                        let y = Math.floor(this.position.y + Math.sin(target_rotate) * target_length.y);\r\n                        let circle = {\r\n                            \"x\": x,\r\n                            \"y\": y,\r\n                            \"radius\": target.size.width / 2,\r\n                        };\r\n                        let sa = new Position_1.Position(Math.abs(this.position.x - circle.x), Math.abs(this.position.y - circle.y));\r\n                        let flag = false;\r\n                        if (sa.x <= this.size.width / 2) {\r\n                            if (sa.y <= this.size.height / 2 + circle.radius)\r\n                                flag = true;\r\n                        }\r\n                        if (sa.y <= this.size.height / 2) {\r\n                            if (sa.y <= this.size.height / 2 + circle.radius)\r\n                                flag = true;\r\n                        }\r\n                        let dx = sa.x - this.size.width / 2;\r\n                        let dy = sa.y - this.size.height / 2;\r\n                        if (dx * dx + dy * dy <= circle.radius * circle.radius)\r\n                            flag = true;\r\n                        if (flag) {\r\n                            target.damage(this.damage);\r\n                        }\r\n                    }\r\n                    this.mode = \"end\";\r\n                }\r\n                else {\r\n                    this.EndAnimation.Update();\r\n                    this.DrawImage = this.EndAnimation.image;\r\n                    if (this.EndCount > 0)\r\n                        this.EndCount--;\r\n                    else\r\n                        this.mode = \"delete\";\r\n                }\r\n            }\r\n        }\r\n        draw(ctx) {\r\n            ctx.drawImage(this.DrawImage, Math.floor(this.position.x - this.DrawImage.width / 2), Math.floor(this.position.y - this.DrawImage.height / 2));\r\n            if (GlobalData_1.GlobalData.Instance.AssistSettingList[\"デバッグモード\"]) {\r\n                ctx.fillStyle = \"blue\";\r\n                ctx.fillRect(this.position.x, this.position.y, 5, 5);\r\n                ctx.fillRect(this.position.x - this.size.width / 2, this.position.y - this.size.height / 2, 5, 5);\r\n                ctx.fillRect(this.position.x - this.DrawImage.width / 2, this.position.y - this.DrawImage.height / 2, 5, 5);\r\n            }\r\n        }\r\n    }\r\n    exports.DamageZisa = DamageZisa;\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=Zisa.js.map\n\n//# sourceURL=webpack:///./public/Skill/Zisa.js?");

/***/ }),

/***/ "./public/loop.js":
/*!************************!*\
  !*** ./public/loop.js ***!
  \************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Scene/SceneManager */ \"./public/Scene/SceneManager.js\"), __webpack_require__(/*! ./Data/GlobalData */ \"./public/Data/GlobalData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, SceneManager_1, GlobalData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    exports.GameLoop = void 0;\r\n    class GameLoop {\r\n        constructor() {\r\n            //average\r\n            this.beforeTime = 0;\r\n            //Time\r\n            this.NextShowCount = [30, 30];\r\n            this.nextTime = 0;\r\n            this.FpsArray = [];\r\n            this.fps = 60;\r\n            this.ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n            this.flag = false;\r\n            this.DebugTextElement = document.getElementById(\"DebugTexts\");\r\n        }\r\n        SetUp(context) {\r\n            this.ctx = context;\r\n            this.flag = false;\r\n            this.DebugTextElement = document.getElementById(\"DebugTexts\");\r\n        }\r\n        StartLoop() {\r\n            if (this.flag == false) {\r\n                const loop = () => {\r\n                    var _a, _b;\r\n                    var beginTime = Date.now();\r\n                    if (Date.now() >= this.nextTime) {\r\n                        (_a = SceneManager_1.SceneManager.Instance.GetTopScene()) === null || _a === void 0 ? void 0 : _a.update();\r\n                        (_b = SceneManager_1.SceneManager.Instance.GetTopScene()) === null || _b === void 0 ? void 0 : _b.draw(this.ctx);\r\n                        GlobalData_1.GlobalData.Instance.averageFps = 1000 / (beginTime - this.beforeTime);\r\n                        this.FpsArray.push(GlobalData_1.GlobalData.Instance.averageFps);\r\n                        this.beforeTime = Date.now();\r\n                        if (this.NextShowCount[0] <= 0) {\r\n                            let FpsAverage = 0;\r\n                            for (var i = 0; i < this.FpsArray.length; i++) {\r\n                                FpsAverage += this.FpsArray[i];\r\n                            }\r\n                            FpsAverage /= this.FpsArray.length;\r\n                            this.NextShowCount[0] = this.NextShowCount[1];\r\n                            this.DebugTextElement.textContent = `fps:${Math.floor(FpsAverage)}\\n`;\r\n                            this.FpsArray = [];\r\n                        }\r\n                        else {\r\n                            this.NextShowCount[0]--;\r\n                        }\r\n                        this.nextTime = beginTime + Math.floor(1000 / this.fps) - (Date.now() - beginTime);\r\n                    }\r\n                    window.requestAnimationFrame(loop);\r\n                };\r\n                loop();\r\n                this.flag = true;\r\n            }\r\n        }\r\n    }\r\n    exports.GameLoop = GameLoop;\r\n    GameLoop.Instance = new GameLoop();\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//# sourceMappingURL=loop.js.map\n\n//# sourceURL=webpack:///./public/loop.js?");

/***/ }),

/***/ "./public/main.js":
/*!************************!*\
  !*** ./public/main.js ***!
  \************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./Scene/SceneManager */ \"./public/Scene/SceneManager.js\"), __webpack_require__(/*! ./Scene/TitleScene */ \"./public/Scene/TitleScene.js\"), __webpack_require__(/*! ./loop */ \"./public/loop.js\"), __webpack_require__(/*! ./Base/Position */ \"./public/Base/Position.js\"), __webpack_require__(/*! ./Base/SaveData */ \"./public/Base/SaveData.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, SceneManager_1, TitleScene_1, loop_1, Position_1, SaveData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", ({ value: true }));\r\n    //!Start!\r\n    SaveData_1.SaveData.Instance.setUp();\r\n    const start = () => {\r\n        var _a, _b;\r\n        //タッチその他\r\n        SaveData_1.SaveData.Instance.setUp();\r\n        let gamecanvas = document.getElementById(\"GameUI\");\r\n        gamecanvas === null || gamecanvas === void 0 ? void 0 : gamecanvas.addEventListener(\"touchstart\", (e) => {\r\n            var _a;\r\n            e.preventDefault();\r\n            let touche = e.touches[0];\r\n            (_a = SceneManager_1.SceneManager.Instance.GetTopScene()) === null || _a === void 0 ? void 0 : _a.touchStart(new Position_1.Position(touche.clientX, touche.clientY));\r\n        }, { passive: false });\r\n        gamecanvas === null || gamecanvas === void 0 ? void 0 : gamecanvas.addEventListener(\"touchmove\", (e) => {\r\n            var _a;\r\n            e.preventDefault();\r\n            let touche = e.changedTouches[0];\r\n            (_a = SceneManager_1.SceneManager.Instance.GetTopScene()) === null || _a === void 0 ? void 0 : _a.touchNow(new Position_1.Position(touche.clientX, touche.clientY));\r\n        }, { passive: false });\r\n        gamecanvas === null || gamecanvas === void 0 ? void 0 : gamecanvas.addEventListener(\"touchend\", (e) => {\r\n            var _a;\r\n            let touche = e.changedTouches[0];\r\n            (_a = SceneManager_1.SceneManager.Instance.GetTopScene()) === null || _a === void 0 ? void 0 : _a.touchEnd(new Position_1.Position(touche.clientX, touche.clientY));\r\n        }, { passive: true });\r\n        //ゲーム起動処理 \r\n        const canvas = document.getElementById(\"GameCanvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n        ctx.imageSmoothingEnabled = false;\r\n        if (ctx == null) {\r\n            alert(\"Error:キャンバス要素のコンテキストの取得に失敗した\");\r\n            return;\r\n        }\r\n        loop_1.GameLoop.Instance.SetUp(ctx);\r\n        SceneManager_1.SceneManager.Instance.AddScene(new TitleScene_1.TitleScene());\r\n        (_a = document.querySelector(\"html\")) === null || _a === void 0 ? void 0 : _a.addEventListener(\"keydown\", (e) => {\r\n            var _a;\r\n            (_a = SceneManager_1.SceneManager.Instance.GetTopScene()) === null || _a === void 0 ? void 0 : _a.keydown(e.key);\r\n        });\r\n        (_b = document.querySelector(\"html\")) === null || _b === void 0 ? void 0 : _b.addEventListener(\"keyup\", (e) => {\r\n            var _a;\r\n            (_a = SceneManager_1.SceneManager.Instance.GetTopScene()) === null || _a === void 0 ? void 0 : _a.keyup(e.key);\r\n        });\r\n        loop_1.GameLoop.Instance.StartLoop();\r\n        if (navigator.userAgent.indexOf('iPhone') > 0 || navigator.userAgent.indexOf('Android') > 0 && navigator.userAgent.indexOf('Mobile') > 0) {\r\n            //Iphone/Android\r\n        }\r\n        else if (navigator.userAgent.indexOf('iPad') > 0 || navigator.userAgent.indexOf('Android') > 0) {\r\n            //IPad/...\r\n        }\r\n        else {\r\n            //PC/other\r\n            let mobileUIs = document.getElementsByClassName(\"mobileUI\");\r\n            for (let i = 0; i < mobileUIs.length; i++) {\r\n                let mobileUI = mobileUIs[i];\r\n                mobileUI.style.display = \"none\";\r\n            }\r\n            let GameScreens = document.getElementsByClassName(\"GameScreen\");\r\n            for (let i = 0; i < GameScreens.length; i++) {\r\n                let GameScreen = GameScreens[i];\r\n                GameScreen.style.width = \"95%\";\r\n                GameScreen.style.height = \"auto\";\r\n                GameScreen.style.maxWidth = \"800px\";\r\n                GameScreen.style.maxHeight = \"none\";\r\n                GameScreen.style.aspectRatio = \"1 / 1\";\r\n            }\r\n        }\r\n        console.log(\"起動完了\");\r\n    };\r\n    window.onload = () => {\r\n        start();\r\n    };\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n//!Start!\r\n//# sourceMappingURL=main.js.map\n\n//# sourceURL=webpack:///./public/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./public/main.js");
/******/ 	
/******/ })()
;